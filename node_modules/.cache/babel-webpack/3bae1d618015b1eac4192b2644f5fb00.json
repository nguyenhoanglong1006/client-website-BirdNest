{"ast":null,"code":"import _createClass from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Injectable, ɵɵdefineInjectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, ViewContainerRef, ElementRef, Renderer2, Input, Output, NgModule } from '@angular/core';\nimport { isBs3, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport { __decorate, __metadata } from 'tslib';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Default values provider for tooltip\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/component-loader';\nimport * as ɵngcc2 from 'ngx-bootstrap/positioning';\nvar _c0 = [\"*\"];\n\nvar TooltipConfig = /*#__PURE__*/_createClass(function TooltipConfig() {\n  _classCallCheck(this, TooltipConfig);\n\n  /**\n   * sets disable adaptive position\n   */\n  this.adaptivePosition = true;\n  /**\n   * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n   */\n\n  this.placement = 'top';\n  /**\n   * array of event names which triggers tooltip opening\n   */\n\n  this.triggers = 'hover focus';\n  /**\n   * delay before showing the tooltip\n   */\n\n  this.delay = 0;\n});\n\nTooltipConfig.ɵfac = function TooltipConfig_Factory(t) {\n  return new (t || TooltipConfig)();\n};\n/** @nocollapse */\n\n\nTooltipConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function TooltipConfig_Factory() {\n    return new TooltipConfig();\n  },\n  token: TooltipConfig,\n  providedIn: \"root\"\n});\n\nif (false) {\n  /**\n   * sets disable adaptive position\n   * @type {?}\n   */\n  TooltipConfig.prototype.adaptivePosition;\n  /**\n   * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n   * @type {?}\n   */\n\n  TooltipConfig.prototype.placement;\n  /**\n   * array of event names which triggers tooltip opening\n   * @type {?}\n   */\n\n  TooltipConfig.prototype.triggers;\n  /**\n   * a selector specifying the element the tooltip should be appended to.\n   * @type {?}\n   */\n\n  TooltipConfig.prototype.container;\n  /**\n   * delay before showing the tooltip\n   * @type {?}\n   */\n\n  TooltipConfig.prototype.delay;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TooltipContainerComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} config\n   */\n  function TooltipContainerComponent(config) {\n    _classCallCheck(this, TooltipContainerComponent);\n\n    Object.assign(this, config);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  return _createClass(TooltipContainerComponent, [{\n    key: \"isBs3\",\n    get: function get() {\n      return isBs3();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.classMap = {\n        in: false,\n        fade: false\n      };\n      this.classMap[this.placement] = true;\n      this.classMap[\"tooltip-\".concat(this.placement)] = true;\n      this.classMap.in = true;\n\n      if (this.animation) {\n        this.classMap.fade = true;\n      }\n\n      if (this.containerClass) {\n        this.classMap[this.containerClass] = true;\n      }\n    }\n  }]);\n}();\n\nTooltipContainerComponent.ɵfac = function TooltipContainerComponent_Factory(t) {\n  return new (t || TooltipContainerComponent)(ɵngcc0.ɵɵdirectiveInject(TooltipConfig));\n};\n\nTooltipContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TooltipContainerComponent,\n  selectors: [[\"bs-tooltip-container\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 7,\n  hostBindings: function TooltipContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"tooltip in tooltip-\" + ctx.placement + \" \" + \"bs-tooltip-\" + ctx.placement + \" \" + ctx.placement + \" \" + ctx.containerClass);\n      ɵngcc0.ɵɵclassProp(\"show\", !ctx.isBs3)(\"bs3\", ctx.isBs3);\n    }\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"tooltip-arrow\", \"arrow\"], [1, \"tooltip-inner\"]],\n  template: function TooltipContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".tooltip[_nghost-%COMP%] {\\n      display: block;\\n      pointer-events: none;\\n    }\\n    .bs3.tooltip.top[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -2px;\\n    }\\n    .bs3.tooltip.bottom[_nghost-%COMP%] {\\n      margin-top: 0px;\\n    }\\n    .bs3.bs-tooltip-left[_nghost-%COMP%], .bs3.bs-tooltip-right[_nghost-%COMP%]{\\n      margin: 0px;\\n    }\\n    .bs3.bs-tooltip-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs3.bs-tooltip-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n      margin: .3rem 0;\\n    }\"],\n  changeDetection: 0\n});\n/** @nocollapse */\n\nTooltipContainerComponent.ctorParameters = function () {\n  return [{\n    type: TooltipConfig\n  }];\n};\n\nif (false) {\n  /** @type {?} */\n  TooltipContainerComponent.prototype.classMap;\n  /** @type {?} */\n\n  TooltipContainerComponent.prototype.placement;\n  /** @type {?} */\n\n  TooltipContainerComponent.prototype.containerClass;\n  /** @type {?} */\n\n  TooltipContainerComponent.prototype.animation;\n  /** @type {?} */\n\n  TooltipContainerComponent.prototype.id;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar id = 0;\n\nvar TooltipDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} _viewContainerRef\n   * @param {?} cis\n   * @param {?} config\n   * @param {?} _elementRef\n   * @param {?} _renderer\n   * @param {?} _positionService\n   */\n  function TooltipDirective(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n    _classCallCheck(this, TooltipDirective);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._positionService = _positionService;\n    this.tooltipId = id++;\n    /**\n     * Fired when tooltip content changes\n     */\n\n    /* tslint:disable-next-line:no-any */\n\n    this.tooltipChange = new EventEmitter();\n    /**\n     * Css class for tooltip container\n     */\n\n    this.containerClass = '';\n    /**\n     * @deprecated - removed, will be added to configuration\n     */\n\n    this.tooltipAnimation = true;\n    /**\n     * @deprecated\n     */\n\n    this.tooltipFadeDuration = 150;\n    /**\n     * @deprecated\n     */\n\n    this.tooltipStateChanged = new EventEmitter();\n    this._tooltip = cis.createLoader(this._elementRef, _viewContainerRef, this._renderer).provide({\n      provide: TooltipConfig,\n      useValue: config\n    });\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   * @return {?}\n   */\n\n\n  return _createClass(TooltipDirective, [{\n    key: \"isOpen\",\n    get: function get() {\n      return this._tooltip.isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * @deprecated - please use `tooltip` instead\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"htmlContent\",\n    set: function set(value) {\n      warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n      this.tooltip = value;\n    }\n    /**\n     * @deprecated - please use `placement` instead\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_placement\",\n    set: function set(value) {\n      warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n      this.placement = value;\n    }\n    /**\n     * @deprecated - please use `isOpen` instead\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isOpen\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n      return this.isOpen;\n    }\n    /**\n     * @deprecated - please use `isDisabled` instead\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n      this.isOpen = value;\n    }\n  }, {\n    key: \"_enable\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n      return this.isDisabled;\n    }\n    /**\n     * @deprecated - please use `container=\"body\"` instead\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n      this.isDisabled = !value;\n    }\n  }, {\n    key: \"_appendToBody\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n      return this.container === 'body';\n    }\n    /**\n     * @deprecated - will replaced with customClass\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n      this.container = value ? 'body' : this.container;\n    }\n  }, {\n    key: \"_popupClass\",\n    set: function set(value) {\n      warnOnce('tooltipClass deprecated');\n    }\n    /**\n     * @deprecated - removed\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_tooltipContext\",\n    set: function set(value) {\n      warnOnce('tooltipContext deprecated');\n    }\n    /**\n     * @deprecated\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_tooltipPopupDelay\",\n    set: function set(value) {\n      warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n      this.delay = value;\n    }\n    /**\n     * @deprecated -  please use `triggers` instead\n     * @return {?}\n     */\n\n  }, {\n    key: \"_tooltipTrigger\",\n    get: function get() {\n      warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n      return this.triggers;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n      this.triggers = (value || '').toString();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this._tooltip.listen({\n        triggers: this.triggers,\n        show:\n        /**\n        * @return {?}\n        */\n        function show() {\n          return _this.show();\n        }\n      });\n      /* tslint:disable-next-line:no-any */\n\n\n      this.tooltipChange.subscribe(\n      /**\n      * @param {?} value\n      * @return {?}\n      */\n      function (value) {\n        if (!value) {\n          _this._tooltip.hide();\n        }\n      });\n      this.onShown.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this.setAriaDescribedBy();\n      });\n      this.onHidden.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this.setAriaDescribedBy();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"setAriaDescribedBy\",\n    value: function setAriaDescribedBy() {\n      this._ariaDescribedby = this.isOpen ? \"tooltip-\".concat(this.tooltipId) : null;\n\n      if (this._ariaDescribedby) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      }\n    }\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen) {\n        return this.hide();\n      }\n\n      this.show();\n    }\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this2 = this;\n\n      this._positionService.setOptions({\n        modifiers: {\n          flip: {\n            enabled: this.adaptivePosition\n          },\n          preventOverflow: {\n            enabled: this.adaptivePosition\n          }\n        }\n      });\n\n      if (this.isOpen || this.isDisabled || this._delayTimeoutId || !this.tooltip) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var showTooltip =\n      /**\n      * @return {?}\n      */\n      function showTooltip() {\n        if (_this2._delayTimeoutId) {\n          _this2._delayTimeoutId = undefined;\n        }\n\n        _this2._tooltip.attach(TooltipContainerComponent).to(_this2.container).position({\n          attachment: _this2.placement\n        }).show({\n          content: _this2.tooltip,\n          placement: _this2.placement,\n          containerClass: _this2.containerClass,\n          id: \"tooltip-\".concat(_this2.tooltipId)\n        });\n      };\n      /** @type {?} */\n\n\n      var cancelDelayedTooltipShowing =\n      /**\n      * @return {?}\n      */\n      function cancelDelayedTooltipShowing() {\n        if (_this2._tooltipCancelShowFn) {\n          _this2._tooltipCancelShowFn();\n        }\n      };\n\n      if (this.delay) {\n        if (this._delaySubscription) {\n          this._delaySubscription.unsubscribe();\n        }\n\n        this._delaySubscription = timer(this.delay).subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          showTooltip();\n          cancelDelayedTooltipShowing();\n        });\n\n        if (this.triggers) {\n          parseTriggers(this.triggers).forEach(\n          /**\n          * @param {?} trigger\n          * @return {?}\n          */\n          function (trigger) {\n            _this2._tooltipCancelShowFn = _this2._renderer.listen(_this2._elementRef.nativeElement, trigger.close,\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2._delaySubscription.unsubscribe();\n\n              cancelDelayedTooltipShowing();\n            });\n          });\n        }\n      } else {\n        showTooltip();\n      }\n    }\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this3 = this;\n\n      if (this._delayTimeoutId) {\n        clearTimeout(this._delayTimeoutId);\n        this._delayTimeoutId = undefined;\n      }\n\n      if (!this._tooltip.isShown) {\n        return;\n      }\n\n      this._tooltip.instance.classMap.in = false;\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this3._tooltip.hide();\n      }, this.tooltipFadeDuration);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._tooltip.dispose();\n\n      this.tooltipChange.unsubscribe();\n\n      if (this._delaySubscription) {\n        this._delaySubscription.unsubscribe();\n      }\n\n      this.onShown.unsubscribe();\n      this.onHidden.unsubscribe();\n    }\n  }]);\n}();\n\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(TooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.PositioningService));\n};\n\nTooltipDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"tooltip\", \"\"], [\"\", \"tooltipHtml\", \"\"]],\n  inputs: {\n    containerClass: \"containerClass\",\n    tooltipAnimation: \"tooltipAnimation\",\n    tooltipFadeDuration: \"tooltipFadeDuration\",\n    isOpen: \"isOpen\",\n    htmlContent: [\"tooltipHtml\", \"htmlContent\"],\n    tooltip: \"tooltip\",\n    _placement: [\"tooltipPlacement\", \"_placement\"],\n    placement: \"placement\",\n    _isOpen: [\"tooltipIsOpen\", \"_isOpen\"],\n    _enable: [\"tooltipEnable\", \"_enable\"],\n    isDisabled: \"isDisabled\",\n    _appendToBody: [\"tooltipAppendToBody\", \"_appendToBody\"],\n    container: \"container\",\n    _popupClass: [\"tooltipClass\", \"_popupClass\"],\n    _tooltipContext: [\"tooltipContext\", \"_tooltipContext\"],\n    _tooltipPopupDelay: [\"tooltipPopupDelay\", \"_tooltipPopupDelay\"],\n    delay: \"delay\",\n    _tooltipTrigger: [\"tooltipTrigger\", \"_tooltipTrigger\"],\n    triggers: \"triggers\",\n    adaptivePosition: \"adaptivePosition\"\n  },\n  outputs: {\n    tooltipChange: \"tooltipChange\",\n    tooltipStateChanged: \"tooltipStateChanged\",\n    onShown: \"onShown\",\n    onHidden: \"onHidden\"\n  },\n  exportAs: [\"bs-tooltip\"]\n});\n/** @nocollapse */\n\nTooltipDirective.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: ComponentLoaderFactory\n  }, {\n    type: TooltipConfig\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: PositioningService\n  }];\n};\n\nTooltipDirective.propDecorators = {\n  adaptivePosition: [{\n    type: Input\n  }],\n  tooltip: [{\n    type: Input\n  }],\n  tooltipChange: [{\n    type: Output\n  }],\n  placement: [{\n    type: Input\n  }],\n  triggers: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  containerClass: [{\n    type: Input\n  }],\n  isOpen: [{\n    type: Input\n  }],\n  isDisabled: [{\n    type: Input\n  }],\n  delay: [{\n    type: Input\n  }],\n  onShown: [{\n    type: Output\n  }],\n  onHidden: [{\n    type: Output\n  }],\n  htmlContent: [{\n    type: Input,\n    args: ['tooltipHtml']\n  }],\n  _placement: [{\n    type: Input,\n    args: ['tooltipPlacement']\n  }],\n  _isOpen: [{\n    type: Input,\n    args: ['tooltipIsOpen']\n  }],\n  _enable: [{\n    type: Input,\n    args: ['tooltipEnable']\n  }],\n  _appendToBody: [{\n    type: Input,\n    args: ['tooltipAppendToBody']\n  }],\n  tooltipAnimation: [{\n    type: Input\n  }],\n  _popupClass: [{\n    type: Input,\n    args: ['tooltipClass']\n  }],\n  _tooltipContext: [{\n    type: Input,\n    args: ['tooltipContext']\n  }],\n  _tooltipPopupDelay: [{\n    type: Input,\n    args: ['tooltipPopupDelay']\n  }],\n  tooltipFadeDuration: [{\n    type: Input\n  }],\n  _tooltipTrigger: [{\n    type: Input,\n    args: ['tooltipTrigger']\n  }],\n  tooltipStateChanged: [{\n    type: Output\n  }]\n};\n\n__decorate([OnChange(), __metadata(\"design:type\", Object)], TooltipDirective.prototype, \"tooltip\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-tooltip-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      // tslint:disable-next-line\n      host: {\n        '[class]': '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n        '[class.show]': '!isBs3',\n        '[class.bs3]': 'isBs3',\n        '[attr.id]': 'this.id',\n        role: 'tooltip'\n      },\n      template: \"\\n    <div class=\\\"tooltip-arrow arrow\\\"></div>\\n    <div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\\n    \",\n      styles: [\"\\n    :host.tooltip {\\n      display: block;\\n      pointer-events: none;\\n    }\\n    :host.bs3.tooltip.top>.arrow {\\n      margin-left: -2px;\\n    }\\n    :host.bs3.tooltip.bottom {\\n      margin-top: 0px;\\n    }\\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\\n      margin: 0px;\\n    }\\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\\n      margin: .3rem 0;\\n    }\\n  \"]\n    }]\n  }], function () {\n    return [{\n      type: TooltipConfig\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tooltip], [tooltipHtml]',\n      exportAs: 'bs-tooltip'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc1.ComponentLoaderFactory\n    }, {\n      type: TooltipConfig\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc2.PositioningService\n    }];\n  }, {\n    tooltipChange: [{\n      type: Output\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    tooltipAnimation: [{\n      type: Input\n    }],\n    tooltipFadeDuration: [{\n      type: Input\n    }],\n    tooltipStateChanged: [{\n      type: Output\n    }],\n    onShown: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    htmlContent: [{\n      type: Input,\n      args: ['tooltipHtml']\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    _placement: [{\n      type: Input,\n      args: ['tooltipPlacement']\n    }],\n    placement: [{\n      type: Input\n    }],\n    _isOpen: [{\n      type: Input,\n      args: ['tooltipIsOpen']\n    }],\n    _enable: [{\n      type: Input,\n      args: ['tooltipEnable']\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    _appendToBody: [{\n      type: Input,\n      args: ['tooltipAppendToBody']\n    }],\n    container: [{\n      type: Input\n    }],\n    _popupClass: [{\n      type: Input,\n      args: ['tooltipClass']\n    }],\n    _tooltipContext: [{\n      type: Input,\n      args: ['tooltipContext']\n    }],\n    _tooltipPopupDelay: [{\n      type: Input,\n      args: ['tooltipPopupDelay']\n    }],\n    delay: [{\n      type: Input\n    }],\n    _tooltipTrigger: [{\n      type: Input,\n      args: ['tooltipTrigger']\n    }],\n    triggers: [{\n      type: Input\n    }],\n    adaptivePosition: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  TooltipDirective.prototype.tooltipId;\n  /**\n   * sets disable adaptive position\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.adaptivePosition;\n  /**\n   * Content to be displayed as tooltip.\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.tooltip;\n  /**\n   * Fired when tooltip content changes\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.tooltipChange;\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.placement;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.triggers;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.container;\n  /**\n   * Css class for tooltip container\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.containerClass;\n  /**\n   * Allows to disable tooltip\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.isDisabled;\n  /**\n   * Delay before showing the tooltip\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.delay;\n  /**\n   * Emits an event when the tooltip is shown\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.onShown;\n  /**\n   * Emits an event when the tooltip is hidden\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.onHidden;\n  /**\n   * @deprecated - removed, will be added to configuration\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.tooltipAnimation;\n  /**\n   * @deprecated\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.tooltipFadeDuration;\n  /**\n   * @deprecated\n   * @type {?}\n   */\n\n  TooltipDirective.prototype.tooltipStateChanged;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TooltipDirective.prototype._delayTimeoutId;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TooltipDirective.prototype._tooltipCancelShowFn;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype._tooltip;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype._delaySubscription;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype._ariaDescribedby;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype._elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype._positionService;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TooltipModule = /*#__PURE__*/function () {\n  function TooltipModule() {\n    _classCallCheck(this, TooltipModule);\n  }\n\n  return _createClass(TooltipModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @return {?}\n     */\n    function forRoot() {\n      return {\n        ngModule: TooltipModule,\n        providers: [ComponentLoaderFactory, PositioningService]\n      };\n    }\n  }]);\n}();\n\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\n\nTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TooltipModule, {\n    declarations: function declarations() {\n      return [TooltipDirective, TooltipContainerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [TooltipDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TooltipDirective, TooltipContainerComponent],\n      exports: [TooltipDirective],\n      entryComponents: [TooltipContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule }; //# sourceMappingURL=ngx-bootstrap-tooltip.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ngx-bootstrap/__ivy_ngcc__/tooltip/fesm2015/ngx-bootstrap-tooltip.js"],"names":["Injectable","ɵɵdefineInjectable","Component","ChangeDetectionStrategy","EventEmitter","Directive","ViewContainerRef","ElementRef","Renderer2","Input","Output","NgModule","isBs3","warnOnce","parseTriggers","OnChange","__decorate","__metadata","ComponentLoaderFactory","PositioningService","timer","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","_c0","TooltipConfig","adaptivePosition","placement","triggers","delay","ɵfac","TooltipConfig_Factory","t","ɵprov","factory","token","providedIn","prototype","container","TooltipContainerComponent","config","Object","assign","ngAfterViewInit","classMap","in","fade","animation","containerClass","TooltipContainerComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","TooltipContainerComponent_HostBindings","rf","ctx","ɵɵattribute","id","ɵɵclassMap","ɵɵclassProp","ngContentSelectors","decls","vars","consts","template","TooltipContainerComponent_Template","ɵɵprojectionDef","ɵɵelement","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","styles","changeDetection","ctorParameters","TooltipDirective","_viewContainerRef","cis","_elementRef","_renderer","_positionService","tooltipId","tooltipChange","tooltipAnimation","tooltipFadeDuration","tooltipStateChanged","_tooltip","createLoader","provide","useValue","onShown","onHidden","isShown","value","show","hide","tooltip","isOpen","isDisabled","toString","ngOnInit","listen","subscribe","setAriaDescribedBy","_ariaDescribedby","setAttribute","nativeElement","removeAttribute","toggle","setOptions","modifiers","flip","enabled","preventOverflow","_delayTimeoutId","showTooltip","undefined","attach","to","position","attachment","content","cancelDelayedTooltipShowing","_tooltipCancelShowFn","_delaySubscription","unsubscribe","forEach","trigger","close","clearTimeout","instance","setTimeout","ngOnDestroy","dispose","TooltipDirective_Factory","ɵdir","ɵɵdefineDirective","inputs","htmlContent","_placement","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipPopupDelay","_tooltipTrigger","outputs","exportAs","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","OnPush","host","role","TooltipModule","forRoot","ngModule","providers","TooltipModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","entryComponents"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,SAAzC,EAAoDC,uBAApD,EAA6EC,YAA7E,EAA2FC,SAA3F,EAAsGC,gBAAtG,EAAwHC,UAAxH,EAAoIC,SAApI,EAA+IC,KAA/I,EAAsJC,MAAtJ,EAA8JC,QAA9J,QAA8K,eAA9K;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,QAAzC,QAAyD,qBAAzD;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;AACA,SAASC,sBAAT,QAAuC,gCAAvC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,gCAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;AAEA,IAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;;IACMC,a,6BACF,yBAAc;AAAA;;AACV;AACR;AACA;AACQ,OAAKC,gBAAL,GAAwB,IAAxB;AACA;AACR;AACA;;AACQ,OAAKC,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;;AACQ,OAAKC,QAAL,GAAgB,aAAhB;AACA;AACR;AACA;;AACQ,OAAKC,KAAL,GAAa,CAAb;AACH,C;;AAELJ,aAAa,CAACK,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIP,aAAV,GAAP;AAAoC,CAA7F;AACA;;;AAAmBA,aAAa,CAACQ,KAAd,GAAsBjC,kBAAkB,CAAC;AAAEkC,EAAAA,OAAO,EAAE,SAASH,qBAAT,GAAiC;AAAE,WAAO,IAAIN,aAAJ,EAAP;AAA6B,GAA3E;AAA6EU,EAAAA,KAAK,EAAEV,aAApF;AAAmGW,EAAAA,UAAU,EAAE;AAA/G,CAAD,CAAxC;;AACnB,IAAI,KAAJ,EAAW;AACP;AACJ;AACA;AACA;AACIX,EAAAA,aAAa,CAACY,SAAd,CAAwBX,gBAAxB;AACA;AACJ;AACA;AACA;;AACID,EAAAA,aAAa,CAACY,SAAd,CAAwBV,SAAxB;AACA;AACJ;AACA;AACA;;AACIF,EAAAA,aAAa,CAACY,SAAd,CAAwBT,QAAxB;AACA;AACJ;AACA;AACA;;AACIH,EAAAA,aAAa,CAACY,SAAd,CAAwBC,SAAxB;AACA;AACJ;AACA;AACA;;AACIb,EAAAA,aAAa,CAACY,SAAd,CAAwBR,KAAxB;AACH;AAED;AACA;AACA;AACA;;;IACMU,yB;AACF;AACJ;AACA;AACI,qCAAYC,MAAZ,EAAoB;AAAA;;AAChBC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,MAApB;AACH;AACD;AACJ;AACA;;;;;SACI,eAAY;AACR,aAAO7B,KAAK,EAAZ;AACH;AACD;AACJ;AACA;;;;WACI,SAAAgC,eAAe,GAAG;AACd,WAAKC,QAAL,GAAgB;AAAEC,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAAhB;AACA,WAAKF,QAAL,CAAc,KAAKjB,SAAnB,IAAgC,IAAhC;AACA,WAAKiB,QAAL,mBAAyB,KAAKjB,SAA9B,KAA6C,IAA7C;AACA,WAAKiB,QAAL,CAAcC,EAAd,GAAmB,IAAnB;;AACA,UAAI,KAAKE,SAAT,EAAoB;AAChB,aAAKH,QAAL,CAAcE,IAAd,GAAqB,IAArB;AACH;;AACD,UAAI,KAAKE,cAAT,EAAyB;AACrB,aAAKJ,QAAL,CAAc,KAAKI,cAAnB,IAAqC,IAArC;AACH;AACJ;;;;AAELT,yBAAyB,CAACT,IAA1B,GAAiC,SAASmB,iCAAT,CAA2CjB,CAA3C,EAA8C;AAAE,SAAO,KAAKA,CAAC,IAAIO,yBAAV,EAAqClB,MAAM,CAAC6B,iBAAP,CAAyBzB,aAAzB,CAArC,CAAP;AAAuF,CAAxK;;AACAc,yBAAyB,CAACY,IAA1B,GAAiC9B,MAAM,CAAC+B,iBAAP,CAAyB;AAAEC,EAAAA,IAAI,EAAEd,yBAAR;AAAmCe,EAAAA,SAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAA9C;AAA0EC,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,SAAT,CAArF;AAA0GC,EAAAA,QAAQ,EAAE,CAApH;AAAuHC,EAAAA,YAAY,EAAE,SAASC,sCAAT,CAAgDC,EAAhD,EAAoDC,GAApD,EAAyD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAC9PtC,MAAAA,MAAM,CAACwC,WAAP,CAAmB,IAAnB,EAAyBD,GAAG,CAACE,EAA7B;AACAzC,MAAAA,MAAM,CAAC0C,UAAP,CAAkB,wBAAwBH,GAAG,CAACjC,SAA5B,GAAwC,GAAxC,GAA8C,aAA9C,GAA8DiC,GAAG,CAACjC,SAAlE,GAA8E,GAA9E,GAAoFiC,GAAG,CAACjC,SAAxF,GAAoG,GAApG,GAA0GiC,GAAG,CAACZ,cAAhI;AACA3B,MAAAA,MAAM,CAAC2C,WAAP,CAAmB,MAAnB,EAA2B,CAACJ,GAAG,CAACjD,KAAhC,EAAuC,KAAvC,EAA8CiD,GAAG,CAACjD,KAAlD;AACH;AAAE,GAJmD;AAIjDsD,EAAAA,kBAAkB,EAAEzC,GAJ6B;AAIxB0C,EAAAA,KAAK,EAAE,CAJiB;AAIdC,EAAAA,IAAI,EAAE,CAJQ;AAILC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,eAAJ,EAAqB,OAArB,CAAD,EAAgC,CAAC,CAAD,EAAI,eAAJ,CAAhC,CAJH;AAI0DC,EAAAA,QAAQ,EAAE,SAASC,kCAAT,CAA4CX,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACzLtC,MAAAA,MAAM,CAACkD,eAAP;AACAlD,MAAAA,MAAM,CAACmD,SAAP,CAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACAnD,MAAAA,MAAM,CAACoD,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACApD,MAAAA,MAAM,CAACqD,YAAP,CAAoB,CAApB;AACArD,MAAAA,MAAM,CAACsD,YAAP;AACH;AAAE,GAVmD;AAUjDC,EAAAA,MAAM,EAAE,CAAC,6hBAAD,CAVyC;AAUwfC,EAAAA,eAAe,EAAE;AAVzgB,CAAzB,CAAjC;AAWA;;AACAtC,yBAAyB,CAACuC,cAA1B,GAA2C;AAAA,SAAM,CAC7C;AAAEzB,IAAAA,IAAI,EAAE5B;AAAR,GAD6C,CAAN;AAAA,CAA3C;;AAGA,IAAI,KAAJ,EAAW;AACP;AACAc,EAAAA,yBAAyB,CAACF,SAA1B,CAAoCO,QAApC;AACA;;AACAL,EAAAA,yBAAyB,CAACF,SAA1B,CAAoCV,SAApC;AACA;;AACAY,EAAAA,yBAAyB,CAACF,SAA1B,CAAoCW,cAApC;AACA;;AACAT,EAAAA,yBAAyB,CAACF,SAA1B,CAAoCU,SAApC;AACA;;AACAR,EAAAA,yBAAyB,CAACF,SAA1B,CAAoCyB,EAApC;AACH;AAED;AACA;AACA;AACA;;AACA;;;AACA,IAAIA,EAAE,GAAG,CAAT;;IACMiB,gB;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,4BAAYC,iBAAZ,EAA+BC,GAA/B,EAAoCzC,MAApC,EAA4C0C,WAA5C,EAAyDC,SAAzD,EAAoEC,gBAApE,EAAsF;AAAA;;AAClF,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,SAAL,GAAiBvB,EAAE,EAAnB;AACA;AACR;AACA;;AACQ;;AACA,SAAKwB,aAAL,GAAqB,IAAInF,YAAJ,EAArB;AACA;AACR;AACA;;AACQ,SAAK6C,cAAL,GAAsB,EAAtB;AACA;AACR;AACA;;AACQ,SAAKuC,gBAAL,GAAwB,IAAxB;AACA;AACR;AACA;;AACQ,SAAKC,mBAAL,GAA2B,GAA3B;AACA;AACR;AACA;;AACQ,SAAKC,mBAAL,GAA2B,IAAItF,YAAJ,EAA3B;AACA,SAAKuF,QAAL,GAAgBT,GAAG,CACdU,YADW,CACE,KAAKT,WADP,EACoBF,iBADpB,EACuC,KAAKG,SAD5C,EAEXS,OAFW,CAEH;AAAEA,MAAAA,OAAO,EAAEnE,aAAX;AAA0BoE,MAAAA,QAAQ,EAAErD;AAApC,KAFG,CAAhB;AAGAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,MAApB;AACA,SAAKsD,OAAL,GAAe,KAAKJ,QAAL,CAAcI,OAA7B;AACA,SAAKC,QAAL,GAAgB,KAAKL,QAAL,CAAcK,QAA9B;AACH;AACD;AACJ;AACA;AACA;;;;;SACI,eAAa;AACT,aAAO,KAAKL,QAAL,CAAcM,OAArB;AACH;AACD;AACJ;AACA;AACA;;SACI,aAAWC,KAAX,EAAkB;AACd,UAAIA,KAAJ,EAAW;AACP,aAAKC,IAAL;AACH,OAFD,MAGK;AACD,aAAKC,IAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;SACI,aAAgBF,KAAhB,EAAuB;AACnBrF,MAAAA,QAAQ,CAAC,0DAAD,CAAR;AACA,WAAKwF,OAAL,GAAeH,KAAf;AACH;AACD;AACJ;AACA;AACA;AACA;;;;SACI,aAAeA,KAAf,EAAsB;AAClBrF,MAAAA,QAAQ,CAAC,iEAAD,CAAR;AACA,WAAKe,SAAL,GAAiBsE,KAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;;AAKI;AACJ;AACA;AACI,mBAAc;AACVrF,MAAAA,QAAQ,CAAC,2DAAD,CAAR;AACA,aAAO,KAAKyF,MAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;SAfI,aAAYJ,KAAZ,EAAmB;AACfrF,MAAAA,QAAQ,CAAC,2DAAD,CAAR;AACA,WAAKyF,MAAL,GAAcJ,KAAd;AACH;;;;AAiBD;AACJ;AACA;AACI,mBAAc;AACVrF,MAAAA,QAAQ,CAAC,+DAAD,CAAR;AACA,aAAO,KAAK0F,UAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;SAfI,aAAYL,KAAZ,EAAmB;AACfrF,MAAAA,QAAQ,CAAC,+DAAD,CAAR;AACA,WAAK0F,UAAL,GAAkB,CAACL,KAAnB;AACH;;;;AAiBD;AACJ;AACA;AACI,mBAAoB;AAChBrF,MAAAA,QAAQ,CAAC,2EAAD,CAAR;AACA,aAAO,KAAK0B,SAAL,KAAmB,MAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;;SAfI,aAAkB2D,KAAlB,EAAyB;AACrBrF,MAAAA,QAAQ,CAAC,2EAAD,CAAR;AACA,WAAK0B,SAAL,GAAiB2D,KAAK,GAAG,MAAH,GAAY,KAAK3D,SAAvC;AACH;;;SAaD,aAAgB2D,KAAhB,EAAuB;AACnBrF,MAAAA,QAAQ,CAAC,yBAAD,CAAR;AACH;AACD;AACJ;AACA;AACA;AACA;;;;SACI,aAAoBqF,KAApB,EAA2B;AACvBrF,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACH;AACD;AACJ;AACA;AACA;AACA;;;;SACI,aAAuBqF,KAAvB,EAA8B;AAC1BrF,MAAAA,QAAQ,CAAC,sDAAD,CAAR;AACA,WAAKiB,KAAL,GAAaoE,KAAb;AACH;AACD;AACJ;AACA;AACA;;;;SACI,eAAsB;AAClBrF,MAAAA,QAAQ,CAAC,8DAAD,CAAR;AACA,aAAO,KAAKgB,QAAZ;AACH;AACD;AACJ;AACA;AACA;;SACI,aAAoBqE,KAApB,EAA2B;AACvBrF,MAAAA,QAAQ,CAAC,8DAAD,CAAR;AACA,WAAKgB,QAAL,GAAgB,CAACqE,KAAK,IAAI,EAAV,EAAcM,QAAd,EAAhB;AACH;AACD;AACJ;AACA;;;;WACI,SAAAC,QAAQ,GAAG;AAAA;;AACP,WAAKd,QAAL,CAAce,MAAd,CAAqB;AACjB7E,QAAAA,QAAQ,EAAE,KAAKA,QADE;AAEjBsE,QAAAA,IAAI;AAAG;AACnB;AACA;AACY,iBAHAA,IAGA;AAAA,iBAAM,KAAI,CAACA,IAAL,EAAN;AAAA;AALiB,OAArB;AAOA;;;AACA,WAAKZ,aAAL,CAAmBoB,SAAnB;AAA8B;AACtC;AACA;AACA;AACQ,gBAACT,KAAD,EAAW;AACP,YAAI,CAACA,KAAL,EAAY;AACR,UAAA,KAAI,CAACP,QAAL,CAAcS,IAAd;AACH;AACJ,OARD;AASA,WAAKL,OAAL,CAAaY,SAAb;AAAwB;AAChC;AACA;AACQ,kBAAM;AACF,QAAA,KAAI,CAACC,kBAAL;AACH,OALD;AAMA,WAAKZ,QAAL,CAAcW,SAAd;AAAyB;AACjC;AACA;AACQ,kBAAM;AACF,QAAA,KAAI,CAACC,kBAAL;AACH,OALD;AAMH;AACD;AACJ;AACA;;;;WACI,SAAAA,kBAAkB,GAAG;AACjB,WAAKC,gBAAL,GAAwB,KAAKP,MAAL,qBAAyB,KAAKhB,SAA9B,IAA4C,IAApE;;AACA,UAAI,KAAKuB,gBAAT,EAA2B;AACvB,aAAKzB,SAAL,CAAe0B,YAAf,CAA4B,KAAK3B,WAAL,CAAiB4B,aAA7C,EAA4D,kBAA5D,EAAgF,KAAKF,gBAArF;AACH,OAFD,MAGK;AACD,aAAKzB,SAAL,CAAe4B,eAAf,CAA+B,KAAK7B,WAAL,CAAiB4B,aAAhD,EAA+D,kBAA/D;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;WACI,SAAAE,MAAM,GAAG;AACL,UAAI,KAAKX,MAAT,EAAiB;AACb,eAAO,KAAKF,IAAL,EAAP;AACH;;AACD,WAAKD,IAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,SAAAA,IAAI,GAAG;AAAA;;AACH,WAAKd,gBAAL,CAAsB6B,UAAtB,CAAiC;AAC7BC,QAAAA,SAAS,EAAE;AACPC,UAAAA,IAAI,EAAE;AACFC,YAAAA,OAAO,EAAE,KAAK1F;AADZ,WADC;AAIP2F,UAAAA,eAAe,EAAE;AACbD,YAAAA,OAAO,EAAE,KAAK1F;AADD;AAJV;AADkB,OAAjC;;AAUA,UAAI,KAAK2E,MAAL,IACA,KAAKC,UADL,IAEA,KAAKgB,eAFL,IAGA,CAAC,KAAKlB,OAHV,EAGmB;AACf;AACH;AACD;;;AACA,UAAMmB,WAAW;AAAI;AAC7B;AACA;AACQ,eAHMA,WAGN,GAAM;AACF,YAAI,MAAI,CAACD,eAAT,EAA0B;AACtB,UAAA,MAAI,CAACA,eAAL,GAAuBE,SAAvB;AACH;;AACD,QAAA,MAAI,CAAC9B,QAAL,CACK+B,MADL,CACYlF,yBADZ,EAEKmF,EAFL,CAEQ,MAAI,CAACpF,SAFb,EAGKqF,QAHL,CAGc;AAAEC,UAAAA,UAAU,EAAE,MAAI,CAACjG;AAAnB,SAHd,EAIKuE,IAJL,CAIU;AACN2B,UAAAA,OAAO,EAAE,MAAI,CAACzB,OADR;AAENzE,UAAAA,SAAS,EAAE,MAAI,CAACA,SAFV;AAGNqB,UAAAA,cAAc,EAAE,MAAI,CAACA,cAHf;AAINc,UAAAA,EAAE,oBAAa,MAAI,CAACuB,SAAlB;AAJI,SAJV;AAUH,OAjBD;AAkBA;;;AACA,UAAMyC,2BAA2B;AAAI;AAC7C;AACA;AACQ,eAHMA,2BAGN,GAAM;AACF,YAAI,MAAI,CAACC,oBAAT,EAA+B;AAC3B,UAAA,MAAI,CAACA,oBAAL;AACH;AACJ,OAPD;;AAQA,UAAI,KAAKlG,KAAT,EAAgB;AACZ,YAAI,KAAKmG,kBAAT,EAA6B;AACzB,eAAKA,kBAAL,CAAwBC,WAAxB;AACH;;AACD,aAAKD,kBAAL,GAA0B7G,KAAK,CAAC,KAAKU,KAAN,CAAL,CAAkB6E,SAAlB;AAA6B;AACnE;AACA;AACY,oBAAM;AACFa,UAAAA,WAAW;AACXO,UAAAA,2BAA2B;AAC9B,SANyB,CAA1B;;AAOA,YAAI,KAAKlG,QAAT,EAAmB;AACff,UAAAA,aAAa,CAAC,KAAKe,QAAN,CAAb,CACKsG,OADL;AACc;AAC9B;AACA;AACA;AACgB,oBAACC,OAAD,EAAa;AACT,YAAA,MAAI,CAACJ,oBAAL,GAA4B,MAAI,CAAC5C,SAAL,CAAesB,MAAf,CAAsB,MAAI,CAACvB,WAAL,CAAiB4B,aAAvC,EAAsDqB,OAAO,CAACC,KAA9D;AAAsE;AACtH;AACA;AACoB,wBAAM;AACF,cAAA,MAAI,CAACJ,kBAAL,CAAwBC,WAAxB;;AACAH,cAAAA,2BAA2B;AAC9B,aAN2B,CAA5B;AAOH,WAbD;AAcH;AACJ,OA3BD,MA4BK;AACDP,QAAAA,WAAW;AACd;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;WACI,SAAApB,IAAI,GAAG;AAAA;;AACH,UAAI,KAAKmB,eAAT,EAA0B;AACtBe,QAAAA,YAAY,CAAC,KAAKf,eAAN,CAAZ;AACA,aAAKA,eAAL,GAAuBE,SAAvB;AACH;;AACD,UAAI,CAAC,KAAK9B,QAAL,CAAcM,OAAnB,EAA4B;AACxB;AACH;;AACD,WAAKN,QAAL,CAAc4C,QAAd,CAAuB1F,QAAvB,CAAgCC,EAAhC,GAAqC,KAArC;AACA0F,MAAAA,UAAU;AAAE;AACpB;AACA;AACQ,kBAAM;AACF,QAAA,MAAI,CAAC7C,QAAL,CAAcS,IAAd;AACH,OALS,EAKN,KAAKX,mBALC,CAAV;AAMH;AACD;AACJ;AACA;;;;WACI,SAAAgD,WAAW,GAAG;AACV,WAAK9C,QAAL,CAAc+C,OAAd;;AACA,WAAKnD,aAAL,CAAmB2C,WAAnB;;AACA,UAAI,KAAKD,kBAAT,EAA6B;AACzB,aAAKA,kBAAL,CAAwBC,WAAxB;AACH;;AACD,WAAKnC,OAAL,CAAamC,WAAb;AACA,WAAKlC,QAAL,CAAckC,WAAd;AACH;;;;AAELlD,gBAAgB,CAACjD,IAAjB,GAAwB,SAAS4G,wBAAT,CAAkC1G,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAI+C,gBAAV,EAA4B1D,MAAM,CAAC6B,iBAAP,CAAyB7B,MAAM,CAAChB,gBAAhC,CAA5B,EAA+EgB,MAAM,CAAC6B,iBAAP,CAAyB5B,MAAM,CAACL,sBAAhC,CAA/E,EAAwII,MAAM,CAAC6B,iBAAP,CAAyBzB,aAAzB,CAAxI,EAAiLJ,MAAM,CAAC6B,iBAAP,CAAyB7B,MAAM,CAACf,UAAhC,CAAjL,EAA8Ne,MAAM,CAAC6B,iBAAP,CAAyB7B,MAAM,CAACd,SAAhC,CAA9N,EAA0Qc,MAAM,CAAC6B,iBAAP,CAAyB3B,MAAM,CAACL,kBAAhC,CAA1Q,CAAP;AAAwU,CAAvY;;AACA6D,gBAAgB,CAAC4D,IAAjB,GAAwBtH,MAAM,CAACuH,iBAAP,CAAyB;AAAEvF,EAAAA,IAAI,EAAE0B,gBAAR;AAA0BzB,EAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAD,EAAsB,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAtB,CAArC;AAAqFuF,EAAAA,MAAM,EAAE;AAAE7F,IAAAA,cAAc,EAAE,gBAAlB;AAAoCuC,IAAAA,gBAAgB,EAAE,kBAAtD;AAA0EC,IAAAA,mBAAmB,EAAE,qBAA/F;AAAsHa,IAAAA,MAAM,EAAE,QAA9H;AAAwIyC,IAAAA,WAAW,EAAE,CAAC,aAAD,EAAgB,aAAhB,CAArJ;AAAqL1C,IAAAA,OAAO,EAAE,SAA9L;AAAyM2C,IAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,YAArB,CAArN;AAAyPpH,IAAAA,SAAS,EAAE,WAApQ;AAAiRqH,IAAAA,OAAO,EAAE,CAAC,eAAD,EAAkB,SAAlB,CAA1R;AAAwTC,IAAAA,OAAO,EAAE,CAAC,eAAD,EAAkB,SAAlB,CAAjU;AAA+V3C,IAAAA,UAAU,EAAE,YAA3W;AAAyX4C,IAAAA,aAAa,EAAE,CAAC,qBAAD,EAAwB,eAAxB,CAAxY;AAAkb5G,IAAAA,SAAS,EAAE,WAA7b;AAA0c6G,IAAAA,WAAW,EAAE,CAAC,cAAD,EAAiB,aAAjB,CAAvd;AAAwfC,IAAAA,eAAe,EAAE,CAAC,gBAAD,EAAmB,iBAAnB,CAAzgB;AAAgjBC,IAAAA,kBAAkB,EAAE,CAAC,mBAAD,EAAsB,oBAAtB,CAApkB;AAAinBxH,IAAAA,KAAK,EAAE,OAAxnB;AAAioByH,IAAAA,eAAe,EAAE,CAAC,gBAAD,EAAmB,iBAAnB,CAAlpB;AAAyrB1H,IAAAA,QAAQ,EAAE,UAAnsB;AAA+sBF,IAAAA,gBAAgB,EAAE;AAAjuB,GAA7F;AAAo1B6H,EAAAA,OAAO,EAAE;AAAEjE,IAAAA,aAAa,EAAE,eAAjB;AAAkCG,IAAAA,mBAAmB,EAAE,qBAAvD;AAA8EK,IAAAA,OAAO,EAAE,SAAvF;AAAkGC,IAAAA,QAAQ,EAAE;AAA5G,GAA71B;AAAu9ByD,EAAAA,QAAQ,EAAE,CAAC,YAAD;AAAj+B,CAAzB,CAAxB;AACA;;AACAzE,gBAAgB,CAACD,cAAjB,GAAkC;AAAA,SAAM,CACpC;AAAEzB,IAAAA,IAAI,EAAEhD;AAAR,GADoC,EAEpC;AAAEgD,IAAAA,IAAI,EAAEpC;AAAR,GAFoC,EAGpC;AAAEoC,IAAAA,IAAI,EAAE5B;AAAR,GAHoC,EAIpC;AAAE4B,IAAAA,IAAI,EAAE/C;AAAR,GAJoC,EAKpC;AAAE+C,IAAAA,IAAI,EAAE9C;AAAR,GALoC,EAMpC;AAAE8C,IAAAA,IAAI,EAAEnC;AAAR,GANoC,CAAN;AAAA,CAAlC;;AAQA6D,gBAAgB,CAAC0E,cAAjB,GAAkC;AAC9B/H,EAAAA,gBAAgB,EAAE,CAAC;AAAE2B,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CADY;AAE9B4F,EAAAA,OAAO,EAAE,CAAC;AAAE/C,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CAFqB;AAG9B8E,EAAAA,aAAa,EAAE,CAAC;AAAEjC,IAAAA,IAAI,EAAE5C;AAAR,GAAD,CAHe;AAI9BkB,EAAAA,SAAS,EAAE,CAAC;AAAE0B,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CAJmB;AAK9BoB,EAAAA,QAAQ,EAAE,CAAC;AAAEyB,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CALoB;AAM9B8B,EAAAA,SAAS,EAAE,CAAC;AAAEe,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CANmB;AAO9BwC,EAAAA,cAAc,EAAE,CAAC;AAAEK,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CAPc;AAQ9B6F,EAAAA,MAAM,EAAE,CAAC;AAAEhD,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CARsB;AAS9B8F,EAAAA,UAAU,EAAE,CAAC;AAAEjD,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CATkB;AAU9BqB,EAAAA,KAAK,EAAE,CAAC;AAAEwB,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CAVuB;AAW9BsF,EAAAA,OAAO,EAAE,CAAC;AAAEzC,IAAAA,IAAI,EAAE5C;AAAR,GAAD,CAXqB;AAY9BsF,EAAAA,QAAQ,EAAE,CAAC;AAAE1C,IAAAA,IAAI,EAAE5C;AAAR,GAAD,CAZoB;AAa9BqI,EAAAA,WAAW,EAAE,CAAC;AAAEzF,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,aAAD;AAArB,GAAD,CAbiB;AAc9BX,EAAAA,UAAU,EAAE,CAAC;AAAE1F,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,kBAAD;AAArB,GAAD,CAdkB;AAe9BV,EAAAA,OAAO,EAAE,CAAC;AAAE3F,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,eAAD;AAArB,GAAD,CAfqB;AAgB9BT,EAAAA,OAAO,EAAE,CAAC;AAAE5F,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,eAAD;AAArB,GAAD,CAhBqB;AAiB9BR,EAAAA,aAAa,EAAE,CAAC;AAAE7F,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,qBAAD;AAArB,GAAD,CAjBe;AAkB9BnE,EAAAA,gBAAgB,EAAE,CAAC;AAAElC,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CAlBY;AAmB9B2I,EAAAA,WAAW,EAAE,CAAC;AAAE9F,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,cAAD;AAArB,GAAD,CAnBiB;AAoB9BN,EAAAA,eAAe,EAAE,CAAC;AAAE/F,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,gBAAD;AAArB,GAAD,CApBa;AAqB9BL,EAAAA,kBAAkB,EAAE,CAAC;AAAEhG,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,mBAAD;AAArB,GAAD,CArBU;AAsB9BlE,EAAAA,mBAAmB,EAAE,CAAC;AAAEnC,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CAtBS;AAuB9B8I,EAAAA,eAAe,EAAE,CAAC;AAAEjG,IAAAA,IAAI,EAAE7C,KAAR;AAAekJ,IAAAA,IAAI,EAAE,CAAC,gBAAD;AAArB,GAAD,CAvBa;AAwB9BjE,EAAAA,mBAAmB,EAAE,CAAC;AAAEpC,IAAAA,IAAI,EAAE5C;AAAR,GAAD;AAxBS,CAAlC;;AA0BAM,UAAU,CAAC,CACPD,QAAQ,EADD,EAEPE,UAAU,CAAC,aAAD,EAAgByB,MAAhB,CAFH,CAAD,EAGPsC,gBAAgB,CAAC1C,SAHV,EAGqB,SAHrB,EAGgC,KAAK,CAHrC,CAAV;;AAIA,CAAC,YAAY;AAAE,GAAC,OAAOsH,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtI,MAAM,CAACuI,iBAAP,CAAyBnI,aAAzB,EAAwC,CAAC;AACnG4B,IAAAA,IAAI,EAAEtD,UAD6F;AAEnG2J,IAAAA,IAAI,EAAE,CAAC;AACCtH,MAAAA,UAAU,EAAE;AADb,KAAD;AAF6F,GAAD,CAAxC,EAK1D,YAAY;AAAE,WAAO,EAAP;AAAY,GALgC,EAK9B,IAL8B,CAAnD;AAK6B,CAL5C;;AAMA,CAAC,YAAY;AAAE,GAAC,OAAOuH,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtI,MAAM,CAACuI,iBAAP,CAAyBrH,yBAAzB,EAAoD,CAAC;AAC/Gc,IAAAA,IAAI,EAAEpD,SADyG;AAE/GyJ,IAAAA,IAAI,EAAE,CAAC;AACCG,MAAAA,QAAQ,EAAE,sBADX;AAEChF,MAAAA,eAAe,EAAE3E,uBAAuB,CAAC4J,MAF1C;AAGC;AACAC,MAAAA,IAAI,EAAE;AACF,mBAAW,8GADT;AAEF,wBAAgB,QAFd;AAGF,uBAAe,OAHb;AAIF,qBAAa,SAJX;AAKFC,QAAAA,IAAI,EAAE;AALJ,OAJP;AAWC3F,MAAAA,QAAQ,2HAXT;AAeCO,MAAAA,MAAM,EAAE;AAfT,KAAD;AAFyG,GAAD,CAApD,EAoC1D,YAAY;AAAE,WAAO,CAAC;AAAEvB,MAAAA,IAAI,EAAE5B;AAAR,KAAD,CAAP;AAAmC,GApCS,EAoCP,IApCO,CAAnD;AAoCoD,CApCnE;;AAqCA,CAAC,YAAY;AAAE,GAAC,OAAOkI,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtI,MAAM,CAACuI,iBAAP,CAAyB7E,gBAAzB,EAA2C,CAAC;AACtG1B,IAAAA,IAAI,EAAEjD,SADgG;AAEtGsJ,IAAAA,IAAI,EAAE,CAAC;AACCG,MAAAA,QAAQ,EAAE,0BADX;AAECL,MAAAA,QAAQ,EAAE;AAFX,KAAD;AAFgG,GAAD,CAA3C,EAM1D,YAAY;AAAE,WAAO,CAAC;AAAEnG,MAAAA,IAAI,EAAEhC,MAAM,CAAChB;AAAf,KAAD,EAAoC;AAAEgD,MAAAA,IAAI,EAAE/B,MAAM,CAACL;AAAf,KAApC,EAA6E;AAAEoC,MAAAA,IAAI,EAAE5B;AAAR,KAA7E,EAAsG;AAAE4B,MAAAA,IAAI,EAAEhC,MAAM,CAACf;AAAf,KAAtG,EAAmI;AAAE+C,MAAAA,IAAI,EAAEhC,MAAM,CAACd;AAAf,KAAnI,EAA+J;AAAE8C,MAAAA,IAAI,EAAE9B,MAAM,CAACL;AAAf,KAA/J,CAAP;AAA6M,GANjK,EAMmK;AAAEoE,IAAAA,aAAa,EAAE,CAAC;AAC3OjC,MAAAA,IAAI,EAAE5C;AADqO,KAAD,CAAjB;AAEzNuC,IAAAA,cAAc,EAAE,CAAC;AACjBK,MAAAA,IAAI,EAAE7C;AADW,KAAD,CAFyM;AAIzN+E,IAAAA,gBAAgB,EAAE,CAAC;AACnBlC,MAAAA,IAAI,EAAE7C;AADa,KAAD,CAJuM;AAMzNgF,IAAAA,mBAAmB,EAAE,CAAC;AACtBnC,MAAAA,IAAI,EAAE7C;AADgB,KAAD,CANoM;AAQzNiF,IAAAA,mBAAmB,EAAE,CAAC;AACtBpC,MAAAA,IAAI,EAAE5C;AADgB,KAAD,CARoM;AAUzNqF,IAAAA,OAAO,EAAE,CAAC;AACVzC,MAAAA,IAAI,EAAE5C;AADI,KAAD,CAVgN;AAYzNsF,IAAAA,QAAQ,EAAE,CAAC;AACX1C,MAAAA,IAAI,EAAE5C;AADK,KAAD,CAZ+M;AAczN4F,IAAAA,MAAM,EAAE,CAAC;AACThD,MAAAA,IAAI,EAAE7C;AADG,KAAD,CAdiN;AAgBzNsI,IAAAA,WAAW,EAAE,CAAC;AACdzF,MAAAA,IAAI,EAAE7C,KADQ;AAEdkJ,MAAAA,IAAI,EAAE,CAAC,aAAD;AAFQ,KAAD,CAhB4M;AAmBzNtD,IAAAA,OAAO,EAAE,CAAC;AACV/C,MAAAA,IAAI,EAAE7C;AADI,KAAD,CAnBgN;AAqBzNuI,IAAAA,UAAU,EAAE,CAAC;AACb1F,MAAAA,IAAI,EAAE7C,KADO;AAEbkJ,MAAAA,IAAI,EAAE,CAAC,kBAAD;AAFO,KAAD,CArB6M;AAwBzN/H,IAAAA,SAAS,EAAE,CAAC;AACZ0B,MAAAA,IAAI,EAAE7C;AADM,KAAD,CAxB8M;AA0BzNwI,IAAAA,OAAO,EAAE,CAAC;AACV3F,MAAAA,IAAI,EAAE7C,KADI;AAEVkJ,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFI,KAAD,CA1BgN;AA6BzNT,IAAAA,OAAO,EAAE,CAAC;AACV5F,MAAAA,IAAI,EAAE7C,KADI;AAEVkJ,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFI,KAAD,CA7BgN;AAgCzNpD,IAAAA,UAAU,EAAE,CAAC;AACbjD,MAAAA,IAAI,EAAE7C;AADO,KAAD,CAhC6M;AAkCzN0I,IAAAA,aAAa,EAAE,CAAC;AAChB7F,MAAAA,IAAI,EAAE7C,KADU;AAEhBkJ,MAAAA,IAAI,EAAE,CAAC,qBAAD;AAFU,KAAD,CAlC0M;AAqCzNpH,IAAAA,SAAS,EAAE,CAAC;AACZe,MAAAA,IAAI,EAAE7C;AADM,KAAD,CArC8M;AAuCzN2I,IAAAA,WAAW,EAAE,CAAC;AACd9F,MAAAA,IAAI,EAAE7C,KADQ;AAEdkJ,MAAAA,IAAI,EAAE,CAAC,cAAD;AAFQ,KAAD,CAvC4M;AA0CzNN,IAAAA,eAAe,EAAE,CAAC;AAClB/F,MAAAA,IAAI,EAAE7C,KADY;AAElBkJ,MAAAA,IAAI,EAAE,CAAC,gBAAD;AAFY,KAAD,CA1CwM;AA6CzNL,IAAAA,kBAAkB,EAAE,CAAC;AACrBhG,MAAAA,IAAI,EAAE7C,KADe;AAErBkJ,MAAAA,IAAI,EAAE,CAAC,mBAAD;AAFe,KAAD,CA7CqM;AAgDzN7H,IAAAA,KAAK,EAAE,CAAC;AACRwB,MAAAA,IAAI,EAAE7C;AADE,KAAD,CAhDkN;AAkDzN8I,IAAAA,eAAe,EAAE,CAAC;AAClBjG,MAAAA,IAAI,EAAE7C,KADY;AAElBkJ,MAAAA,IAAI,EAAE,CAAC,gBAAD;AAFY,KAAD,CAlDwM;AAqDzN9H,IAAAA,QAAQ,EAAE,CAAC;AACXyB,MAAAA,IAAI,EAAE7C;AADK,KAAD,CArD+M;AAuDzNkB,IAAAA,gBAAgB,EAAE,CAAC;AACnB2B,MAAAA,IAAI,EAAE7C;AADa,KAAD;AAvDuM,GANnK,CAAnD;AA+DC,CA/DhB;;AAgEA,IAAI,KAAJ,EAAW;AACP;AACAuE,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BgD,SAA3B;AACA;AACJ;AACA;AACA;;AACIN,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BX,gBAA3B;AACA;AACJ;AACA;AACA;;AACIqD,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2B+D,OAA3B;AACA;AACJ;AACA;AACA;;AACIrB,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BiD,aAA3B;AACA;AACJ;AACA;AACA;;AACIP,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BV,SAA3B;AACA;AACJ;AACA;AACA;AACA;;AACIoD,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BT,QAA3B;AACA;AACJ;AACA;AACA;;AACImD,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BC,SAA3B;AACA;AACJ;AACA;AACA;;AACIyC,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BW,cAA3B;AACA;AACJ;AACA;AACA;;AACI+B,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BiE,UAA3B;AACA;AACJ;AACA;AACA;;AACIvB,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BR,KAA3B;AACA;AACJ;AACA;AACA;;AACIkD,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2ByD,OAA3B;AACA;AACJ;AACA;AACA;;AACIf,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2B0D,QAA3B;AACA;AACJ;AACA;AACA;;AACIhB,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BkD,gBAA3B;AACA;AACJ;AACA;AACA;;AACIR,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BmD,mBAA3B;AACA;AACJ;AACA;AACA;;AACIT,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BoD,mBAA3B;AACA;AACJ;AACA;AACA;;AACIV,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BiF,eAA3B;AACA;AACJ;AACA;AACA;;AACIvC,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2B0F,oBAA3B;AACA;AACJ;AACA;AACA;;AACIhD,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BqD,QAA3B;AACA;AACJ;AACA;AACA;;AACIX,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2B2F,kBAA3B;AACA;AACJ;AACA;AACA;;AACIjD,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2BuE,gBAA3B;AACA;AACJ;AACA;AACA;;AACI7B,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2B6C,WAA3B;AACA;AACJ;AACA;AACA;;AACIH,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2B8C,SAA3B;AACA;AACJ;AACA;AACA;;AACIJ,EAAAA,gBAAgB,CAAC1C,SAAjB,CAA2B+C,gBAA3B;AACH;AAED;AACA;AACA;AACA;;;IACM6E,a;;;;;;;;AACF;AACJ;AACA;AACI,aAAOC,OAAP,GAAiB;AACb,aAAO;AACHC,QAAAA,QAAQ,EAAEF,aADP;AAEHG,QAAAA,SAAS,EAAE,CAACnJ,sBAAD,EAAyBC,kBAAzB;AAFR,OAAP;AAIH;;;;AAEL+I,aAAa,CAACnI,IAAd,GAAqB,SAASuI,qBAAT,CAA+BrI,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIiI,aAAV,GAAP;AAAoC,CAA7F;;AACAA,aAAa,CAACK,IAAd,GAAqBjJ,MAAM,CAACkJ,gBAAP,CAAwB;AAAElH,EAAAA,IAAI,EAAE4G;AAAR,CAAxB,CAArB;AACAA,aAAa,CAACO,IAAd,GAAqBnJ,MAAM,CAACoJ,gBAAP,CAAwB;AAAEC,EAAAA,OAAO,EAAE,CAAC,CAACtJ,YAAD,CAAD;AAAX,CAAxB,CAArB;;AACA,CAAC,YAAY;AAAE,GAAC,OAAOuJ,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtJ,MAAM,CAACuJ,kBAAP,CAA0BX,aAA1B,EAAyC;AAAEY,IAAAA,YAAY,EAAE,SAAdA,YAAc,GAAY;AAAE,aAAO,CAAC9F,gBAAD,EAAmBxC,yBAAnB,CAAP;AAAuD,KAArF;AAAuFmI,IAAAA,OAAO,EAAE,SAATA,OAAS,GAAY;AAAE,aAAO,CAACtJ,YAAD,CAAP;AAAwB,KAAtI;AAAwI0J,IAAAA,OAAO,EAAE,SAATA,OAAS,GAAY;AAAE,aAAO,CAAC/F,gBAAD,CAAP;AAA4B;AAA3L,GAAzC,CAAnD;AAA6R,CAA5S;;AACA,CAAC,YAAY;AAAE,GAAC,OAAO4E,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDtI,MAAM,CAACuI,iBAAP,CAAyBK,aAAzB,EAAwC,CAAC;AACnG5G,IAAAA,IAAI,EAAE3C,QAD6F;AAEnGgJ,IAAAA,IAAI,EAAE,CAAC;AACCgB,MAAAA,OAAO,EAAE,CAACtJ,YAAD,CADV;AAECyJ,MAAAA,YAAY,EAAE,CAAC9F,gBAAD,EAAmBxC,yBAAnB,CAFf;AAGCuI,MAAAA,OAAO,EAAE,CAAC/F,gBAAD,CAHV;AAICgG,MAAAA,eAAe,EAAE,CAACxI,yBAAD;AAJlB,KAAD;AAF6F,GAAD,CAAxC,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,CARtB;AAUA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA,SAASd,aAAT,EAAwBc,yBAAxB,EAAmDwC,gBAAnD,EAAqEkF,aAArE,G,CAEA","sourcesContent":["import { Injectable, ɵɵdefineInjectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, ViewContainerRef, ElementRef, Renderer2, Input, Output, NgModule } from '@angular/core';\nimport { isBs3, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport { __decorate, __metadata } from 'tslib';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default values provider for tooltip\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/component-loader';\nimport * as ɵngcc2 from 'ngx-bootstrap/positioning';\n\nconst _c0 = [\"*\"];\nclass TooltipConfig {\n    constructor() {\n        /**\n         * sets disable adaptive position\n         */\n        this.adaptivePosition = true;\n        /**\n         * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n         */\n        this.placement = 'top';\n        /**\n         * array of event names which triggers tooltip opening\n         */\n        this.triggers = 'hover focus';\n        /**\n         * delay before showing the tooltip\n         */\n        this.delay = 0;\n    }\n}\nTooltipConfig.ɵfac = function TooltipConfig_Factory(t) { return new (t || TooltipConfig)(); };\n/** @nocollapse */ TooltipConfig.ɵprov = ɵɵdefineInjectable({ factory: function TooltipConfig_Factory() { return new TooltipConfig(); }, token: TooltipConfig, providedIn: \"root\" });\nif (false) {\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    TooltipConfig.prototype.adaptivePosition;\n    /**\n     * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n     * @type {?}\n     */\n    TooltipConfig.prototype.placement;\n    /**\n     * array of event names which triggers tooltip opening\n     * @type {?}\n     */\n    TooltipConfig.prototype.triggers;\n    /**\n     * a selector specifying the element the tooltip should be appended to.\n     * @type {?}\n     */\n    TooltipConfig.prototype.container;\n    /**\n     * delay before showing the tooltip\n     * @type {?}\n     */\n    TooltipConfig.prototype.delay;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TooltipContainerComponent {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        Object.assign(this, config);\n    }\n    /**\n     * @return {?}\n     */\n    get isBs3() {\n        return isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.classMap = { in: false, fade: false };\n        this.classMap[this.placement] = true;\n        this.classMap[`tooltip-${this.placement}`] = true;\n        this.classMap.in = true;\n        if (this.animation) {\n            this.classMap.fade = true;\n        }\n        if (this.containerClass) {\n            this.classMap[this.containerClass] = true;\n        }\n    }\n}\nTooltipContainerComponent.ɵfac = function TooltipContainerComponent_Factory(t) { return new (t || TooltipContainerComponent)(ɵngcc0.ɵɵdirectiveInject(TooltipConfig)); };\nTooltipContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipContainerComponent, selectors: [[\"bs-tooltip-container\"]], hostAttrs: [\"role\", \"tooltip\"], hostVars: 7, hostBindings: function TooltipContainerComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassMap(\"tooltip in tooltip-\" + ctx.placement + \" \" + \"bs-tooltip-\" + ctx.placement + \" \" + ctx.placement + \" \" + ctx.containerClass);\n        ɵngcc0.ɵɵclassProp(\"show\", !ctx.isBs3)(\"bs3\", ctx.isBs3);\n    } }, ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, \"tooltip-arrow\", \"arrow\"], [1, \"tooltip-inner\"]], template: function TooltipContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".tooltip[_nghost-%COMP%] {\\n      display: block;\\n      pointer-events: none;\\n    }\\n    .bs3.tooltip.top[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -2px;\\n    }\\n    .bs3.tooltip.bottom[_nghost-%COMP%] {\\n      margin-top: 0px;\\n    }\\n    .bs3.bs-tooltip-left[_nghost-%COMP%], .bs3.bs-tooltip-right[_nghost-%COMP%]{\\n      margin: 0px;\\n    }\\n    .bs3.bs-tooltip-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs3.bs-tooltip-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n      margin: .3rem 0;\\n    }\"], changeDetection: 0 });\n/** @nocollapse */\nTooltipContainerComponent.ctorParameters = () => [\n    { type: TooltipConfig }\n];\nif (false) {\n    /** @type {?} */\n    TooltipContainerComponent.prototype.classMap;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.placement;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.containerClass;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.animation;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet id = 0;\nclass TooltipDirective {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} cis\n     * @param {?} config\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _positionService\n     */\n    constructor(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._positionService = _positionService;\n        this.tooltipId = id++;\n        /**\n         * Fired when tooltip content changes\n         */\n        /* tslint:disable-next-line:no-any */\n        this.tooltipChange = new EventEmitter();\n        /**\n         * Css class for tooltip container\n         */\n        this.containerClass = '';\n        /**\n         * @deprecated - removed, will be added to configuration\n         */\n        this.tooltipAnimation = true;\n        /**\n         * @deprecated\n         */\n        this.tooltipFadeDuration = 150;\n        /**\n         * @deprecated\n         */\n        this.tooltipStateChanged = new EventEmitter();\n        this._tooltip = cis\n            .createLoader(this._elementRef, _viewContainerRef, this._renderer)\n            .provide({ provide: TooltipConfig, useValue: config });\n        Object.assign(this, config);\n        this.onShown = this._tooltip.onShown;\n        this.onHidden = this._tooltip.onHidden;\n    }\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     * @return {?}\n     */\n    get isOpen() {\n        return this._tooltip.isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    /**\n     * @deprecated - please use `tooltip` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set htmlContent(value) {\n        warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n        this.tooltip = value;\n    }\n    /**\n     * @deprecated - please use `placement` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _placement(value) {\n        warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n        this.placement = value;\n    }\n    /**\n     * @deprecated - please use `isOpen` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _isOpen(value) {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        this.isOpen = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _isOpen() {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        return this.isOpen;\n    }\n    /**\n     * @deprecated - please use `isDisabled` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _enable(value) {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        this.isDisabled = !value;\n    }\n    /**\n     * @return {?}\n     */\n    get _enable() {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        return this.isDisabled;\n    }\n    /**\n     * @deprecated - please use `container=\"body\"` instead\n     * @param {?} value\n     * @return {?}\n     */\n    set _appendToBody(value) {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        this.container = value ? 'body' : this.container;\n    }\n    /**\n     * @return {?}\n     */\n    get _appendToBody() {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        return this.container === 'body';\n    }\n    /**\n     * @deprecated - will replaced with customClass\n     * @param {?} value\n     * @return {?}\n     */\n    set _popupClass(value) {\n        warnOnce('tooltipClass deprecated');\n    }\n    /**\n     * @deprecated - removed\n     * @param {?} value\n     * @return {?}\n     */\n    set _tooltipContext(value) {\n        warnOnce('tooltipContext deprecated');\n    }\n    /**\n     * @deprecated\n     * @param {?} value\n     * @return {?}\n     */\n    set _tooltipPopupDelay(value) {\n        warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n        this.delay = value;\n    }\n    /**\n     * @deprecated -  please use `triggers` instead\n     * @return {?}\n     */\n    get _tooltipTrigger() {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        return this.triggers;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _tooltipTrigger(value) {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        this.triggers = (value || '').toString();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._tooltip.listen({\n            triggers: this.triggers,\n            show: (/**\n             * @return {?}\n             */\n            () => this.show())\n        });\n        /* tslint:disable-next-line:no-any */\n        this.tooltipChange.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            if (!value) {\n                this._tooltip.hide();\n            }\n        }));\n        this.onShown.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.setAriaDescribedBy();\n        }));\n        this.onHidden.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.setAriaDescribedBy();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    setAriaDescribedBy() {\n        this._ariaDescribedby = this.isOpen ? `tooltip-${this.tooltipId}` : null;\n        if (this._ariaDescribedby) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n        }\n        else {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        }\n    }\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    toggle() {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    }\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    show() {\n        this._positionService.setOptions({\n            modifiers: {\n                flip: {\n                    enabled: this.adaptivePosition\n                },\n                preventOverflow: {\n                    enabled: this.adaptivePosition\n                }\n            }\n        });\n        if (this.isOpen ||\n            this.isDisabled ||\n            this._delayTimeoutId ||\n            !this.tooltip) {\n            return;\n        }\n        /** @type {?} */\n        const showTooltip = (/**\n         * @return {?}\n         */\n        () => {\n            if (this._delayTimeoutId) {\n                this._delayTimeoutId = undefined;\n            }\n            this._tooltip\n                .attach(TooltipContainerComponent)\n                .to(this.container)\n                .position({ attachment: this.placement })\n                .show({\n                content: this.tooltip,\n                placement: this.placement,\n                containerClass: this.containerClass,\n                id: `tooltip-${this.tooltipId}`\n            });\n        });\n        /** @type {?} */\n        const cancelDelayedTooltipShowing = (/**\n         * @return {?}\n         */\n        () => {\n            if (this._tooltipCancelShowFn) {\n                this._tooltipCancelShowFn();\n            }\n        });\n        if (this.delay) {\n            if (this._delaySubscription) {\n                this._delaySubscription.unsubscribe();\n            }\n            this._delaySubscription = timer(this.delay).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                showTooltip();\n                cancelDelayedTooltipShowing();\n            }));\n            if (this.triggers) {\n                parseTriggers(this.triggers)\n                    .forEach((/**\n                 * @param {?} trigger\n                 * @return {?}\n                 */\n                (trigger) => {\n                    this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, trigger.close, (/**\n                     * @return {?}\n                     */\n                    () => {\n                        this._delaySubscription.unsubscribe();\n                        cancelDelayedTooltipShowing();\n                    }));\n                }));\n            }\n        }\n        else {\n            showTooltip();\n        }\n    }\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    hide() {\n        if (this._delayTimeoutId) {\n            clearTimeout(this._delayTimeoutId);\n            this._delayTimeoutId = undefined;\n        }\n        if (!this._tooltip.isShown) {\n            return;\n        }\n        this._tooltip.instance.classMap.in = false;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tooltip.hide();\n        }), this.tooltipFadeDuration);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tooltip.dispose();\n        this.tooltipChange.unsubscribe();\n        if (this._delaySubscription) {\n            this._delaySubscription.unsubscribe();\n        }\n        this.onShown.unsubscribe();\n        this.onHidden.unsubscribe();\n    }\n}\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) { return new (t || TooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(TooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.PositioningService)); };\nTooltipDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TooltipDirective, selectors: [[\"\", \"tooltip\", \"\"], [\"\", \"tooltipHtml\", \"\"]], inputs: { containerClass: \"containerClass\", tooltipAnimation: \"tooltipAnimation\", tooltipFadeDuration: \"tooltipFadeDuration\", isOpen: \"isOpen\", htmlContent: [\"tooltipHtml\", \"htmlContent\"], tooltip: \"tooltip\", _placement: [\"tooltipPlacement\", \"_placement\"], placement: \"placement\", _isOpen: [\"tooltipIsOpen\", \"_isOpen\"], _enable: [\"tooltipEnable\", \"_enable\"], isDisabled: \"isDisabled\", _appendToBody: [\"tooltipAppendToBody\", \"_appendToBody\"], container: \"container\", _popupClass: [\"tooltipClass\", \"_popupClass\"], _tooltipContext: [\"tooltipContext\", \"_tooltipContext\"], _tooltipPopupDelay: [\"tooltipPopupDelay\", \"_tooltipPopupDelay\"], delay: \"delay\", _tooltipTrigger: [\"tooltipTrigger\", \"_tooltipTrigger\"], triggers: \"triggers\", adaptivePosition: \"adaptivePosition\" }, outputs: { tooltipChange: \"tooltipChange\", tooltipStateChanged: \"tooltipStateChanged\", onShown: \"onShown\", onHidden: \"onHidden\" }, exportAs: [\"bs-tooltip\"] });\n/** @nocollapse */\nTooltipDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ComponentLoaderFactory },\n    { type: TooltipConfig },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: PositioningService }\n];\nTooltipDirective.propDecorators = {\n    adaptivePosition: [{ type: Input }],\n    tooltip: [{ type: Input }],\n    tooltipChange: [{ type: Output }],\n    placement: [{ type: Input }],\n    triggers: [{ type: Input }],\n    container: [{ type: Input }],\n    containerClass: [{ type: Input }],\n    isOpen: [{ type: Input }],\n    isDisabled: [{ type: Input }],\n    delay: [{ type: Input }],\n    onShown: [{ type: Output }],\n    onHidden: [{ type: Output }],\n    htmlContent: [{ type: Input, args: ['tooltipHtml',] }],\n    _placement: [{ type: Input, args: ['tooltipPlacement',] }],\n    _isOpen: [{ type: Input, args: ['tooltipIsOpen',] }],\n    _enable: [{ type: Input, args: ['tooltipEnable',] }],\n    _appendToBody: [{ type: Input, args: ['tooltipAppendToBody',] }],\n    tooltipAnimation: [{ type: Input }],\n    _popupClass: [{ type: Input, args: ['tooltipClass',] }],\n    _tooltipContext: [{ type: Input, args: ['tooltipContext',] }],\n    _tooltipPopupDelay: [{ type: Input, args: ['tooltipPopupDelay',] }],\n    tooltipFadeDuration: [{ type: Input }],\n    _tooltipTrigger: [{ type: Input, args: ['tooltipTrigger',] }],\n    tooltipStateChanged: [{ type: Output }]\n};\n__decorate([\n    OnChange(),\n    __metadata(\"design:type\", Object)\n], TooltipDirective.prototype, \"tooltip\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'bs-tooltip-container',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                // tslint:disable-next-line\n                host: {\n                    '[class]': '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n                    '[class.show]': '!isBs3',\n                    '[class.bs3]': 'isBs3',\n                    '[attr.id]': 'this.id',\n                    role: 'tooltip'\n                },\n                template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `,\n                styles: [`\n    :host.tooltip {\n      display: block;\n      pointer-events: none;\n    }\n    :host.bs3.tooltip.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.tooltip.bottom {\n      margin-top: 0px;\n    }\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\n      margin: 0px;\n    }\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\n      margin: .3rem 0;\n    }\n  `]\n            }]\n    }], function () { return [{ type: TooltipConfig }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[tooltip], [tooltipHtml]',\n                exportAs: 'bs-tooltip'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc1.ComponentLoaderFactory }, { type: TooltipConfig }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc2.PositioningService }]; }, { tooltipChange: [{\n            type: Output\n        }], containerClass: [{\n            type: Input\n        }], tooltipAnimation: [{\n            type: Input\n        }], tooltipFadeDuration: [{\n            type: Input\n        }], tooltipStateChanged: [{\n            type: Output\n        }], onShown: [{\n            type: Output\n        }], onHidden: [{\n            type: Output\n        }], isOpen: [{\n            type: Input\n        }], htmlContent: [{\n            type: Input,\n            args: ['tooltipHtml']\n        }], tooltip: [{\n            type: Input\n        }], _placement: [{\n            type: Input,\n            args: ['tooltipPlacement']\n        }], placement: [{\n            type: Input\n        }], _isOpen: [{\n            type: Input,\n            args: ['tooltipIsOpen']\n        }], _enable: [{\n            type: Input,\n            args: ['tooltipEnable']\n        }], isDisabled: [{\n            type: Input\n        }], _appendToBody: [{\n            type: Input,\n            args: ['tooltipAppendToBody']\n        }], container: [{\n            type: Input\n        }], _popupClass: [{\n            type: Input,\n            args: ['tooltipClass']\n        }], _tooltipContext: [{\n            type: Input,\n            args: ['tooltipContext']\n        }], _tooltipPopupDelay: [{\n            type: Input,\n            args: ['tooltipPopupDelay']\n        }], delay: [{\n            type: Input\n        }], _tooltipTrigger: [{\n            type: Input,\n            args: ['tooltipTrigger']\n        }], triggers: [{\n            type: Input\n        }], adaptivePosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    TooltipDirective.prototype.tooltipId;\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    TooltipDirective.prototype.adaptivePosition;\n    /**\n     * Content to be displayed as tooltip.\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltip;\n    /**\n     * Fired when tooltip content changes\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipChange;\n    /**\n     * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     * @type {?}\n     */\n    TooltipDirective.prototype.placement;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     * @type {?}\n     */\n    TooltipDirective.prototype.triggers;\n    /**\n     * A selector specifying the element the tooltip should be appended to.\n     * @type {?}\n     */\n    TooltipDirective.prototype.container;\n    /**\n     * Css class for tooltip container\n     * @type {?}\n     */\n    TooltipDirective.prototype.containerClass;\n    /**\n     * Allows to disable tooltip\n     * @type {?}\n     */\n    TooltipDirective.prototype.isDisabled;\n    /**\n     * Delay before showing the tooltip\n     * @type {?}\n     */\n    TooltipDirective.prototype.delay;\n    /**\n     * Emits an event when the tooltip is shown\n     * @type {?}\n     */\n    TooltipDirective.prototype.onShown;\n    /**\n     * Emits an event when the tooltip is hidden\n     * @type {?}\n     */\n    TooltipDirective.prototype.onHidden;\n    /**\n     * @deprecated - removed, will be added to configuration\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipAnimation;\n    /**\n     * @deprecated\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipFadeDuration;\n    /**\n     * @deprecated\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipStateChanged;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TooltipDirective.prototype._delayTimeoutId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TooltipDirective.prototype._tooltipCancelShowFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._tooltip;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._delaySubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._positionService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TooltipModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: TooltipModule,\n            providers: [ComponentLoaderFactory, PositioningService]\n        };\n    }\n}\nTooltipModule.ɵfac = function TooltipModule_Factory(t) { return new (t || TooltipModule)(); };\nTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TooltipModule });\nTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TooltipModule, { declarations: function () { return [TooltipDirective, TooltipContainerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TooltipDirective]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [TooltipDirective, TooltipContainerComponent],\n                exports: [TooltipDirective],\n                entryComponents: [TooltipContainerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };\n\n//# sourceMappingURL=ngx-bootstrap-tooltip.js.map"]},"metadata":{},"sourceType":"module"}