{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\n\nvar isArray_1 = require('../util/isArray');\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n\nvar iterator_1 = require('../symbol/iterator');\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\n\n\nfunction zip() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  return function zipOperatorFunction(source) {\n    return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n  };\n}\n\nexports.zip = zip;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\n\nfunction zipStatic() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  var project = observables[observables.length - 1];\n\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n\n  return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexports.zipStatic = zipStatic;\n\nvar ZipOperator = function () {\n  function ZipOperator(project) {\n    this.project = project;\n  }\n\n  ZipOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  };\n\n  return ZipOperator;\n}();\n\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar ZipSubscriber = function (_super) {\n  __extends(ZipSubscriber, _super);\n\n  function ZipSubscriber(destination, project, values) {\n    if (values === void 0) {\n      values = Object.create(null);\n    }\n\n    _super.call(this, destination);\n\n    this.iterators = [];\n    this.active = 0;\n    this.project = typeof project === 'function' ? project : null;\n    this.values = values;\n  }\n\n  ZipSubscriber.prototype._next = function (value) {\n    var iterators = this.iterators;\n\n    if (isArray_1.isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[iterator_1.iterator] === 'function') {\n      iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  };\n\n  ZipSubscriber.prototype._complete = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  };\n\n  ZipSubscriber.prototype.notifyInactive = function () {\n    this.active--;\n\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  };\n\n  ZipSubscriber.prototype.checkIterators = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n    var destination = this.destination; // abort if not all of them have values\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    var shouldComplete = false;\n    var args = [];\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n      var result = iterator.next(); // check to see if it's completed now that you've gotten\n      // the next value.\n\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  };\n\n  ZipSubscriber.prototype._tryProject = function (args) {\n    var result;\n\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return ZipSubscriber;\n}(Subscriber_1.Subscriber);\n\nexports.ZipSubscriber = ZipSubscriber;\n\nvar StaticIterator = function () {\n  function StaticIterator(iterator) {\n    this.iterator = iterator;\n    this.nextResult = iterator.next();\n  }\n\n  StaticIterator.prototype.hasValue = function () {\n    return true;\n  };\n\n  StaticIterator.prototype.next = function () {\n    var result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  };\n\n  StaticIterator.prototype.hasCompleted = function () {\n    var nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  };\n\n  return StaticIterator;\n}();\n\nvar StaticArrayIterator = function () {\n  function StaticArrayIterator(array) {\n    this.array = array;\n    this.index = 0;\n    this.length = 0;\n    this.length = array.length;\n  }\n\n  StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n    return this;\n  };\n\n  StaticArrayIterator.prototype.next = function (value) {\n    var i = this.index++;\n    var array = this.array;\n    return i < this.length ? {\n      value: array[i],\n      done: false\n    } : {\n      value: null,\n      done: true\n    };\n  };\n\n  StaticArrayIterator.prototype.hasValue = function () {\n    return this.array.length > this.index;\n  };\n\n  StaticArrayIterator.prototype.hasCompleted = function () {\n    return this.array.length === this.index;\n  };\n\n  return StaticArrayIterator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar ZipBufferIterator = function (_super) {\n  __extends(ZipBufferIterator, _super);\n\n  function ZipBufferIterator(destination, parent, observable) {\n    _super.call(this, destination);\n\n    this.parent = parent;\n    this.observable = observable;\n    this.stillUnsubscribed = true;\n    this.buffer = [];\n    this.isComplete = false;\n  }\n\n  ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n    return this;\n  }; // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n\n\n  ZipBufferIterator.prototype.next = function () {\n    var buffer = this.buffer;\n\n    if (buffer.length === 0 && this.isComplete) {\n      return {\n        value: null,\n        done: true\n      };\n    } else {\n      return {\n        value: buffer.shift(),\n        done: false\n      };\n    }\n  };\n\n  ZipBufferIterator.prototype.hasValue = function () {\n    return this.buffer.length > 0;\n  };\n\n  ZipBufferIterator.prototype.hasCompleted = function () {\n    return this.buffer.length === 0 && this.isComplete;\n  };\n\n  ZipBufferIterator.prototype.notifyComplete = function () {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  };\n\n  ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  };\n\n  ZipBufferIterator.prototype.subscribe = function (value, index) {\n    return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n  };\n\n  return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber); //# sourceMappingURL=zip.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ng5-slider/node_modules/rxjs/operators/zip.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","ArrayObservable_1","require","isArray_1","Subscriber_1","OuterSubscriber_1","subscribeToResult_1","iterator_1","zip","observables","_i","arguments","length","zipOperatorFunction","source","lift","call","zipStatic","apply","concat","exports","project","pop","ArrayObservable","ZipOperator","subscriber","subscribe","ZipSubscriber","_super","destination","values","iterators","active","_next","value","isArray","push","StaticArrayIterator","iterator","StaticIterator","ZipBufferIterator","_complete","len","complete","i","stillUnsubscribed","add","notifyInactive","checkIterators","hasValue","shouldComplete","args","result","next","hasCompleted","done","_tryProject","err","error","Subscriber","nextResult","array","index","parent","observable","buffer","isComplete","shift","notifyComplete","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","subscribeToResult","OuterSubscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar Subscriber_1 = require('../Subscriber');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar iterator_1 = require('../symbol/iterator');\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\nexports.zip = zip;\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map"]},"metadata":{},"sourceType":"script"}