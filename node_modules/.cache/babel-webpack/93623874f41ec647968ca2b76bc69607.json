{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AsyncAction_1 = require('./AsyncAction');\n\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n\nvar VirtualTimeScheduler = function (_super) {\n  __extends(VirtualTimeScheduler, _super);\n\n  function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n    var _this = this;\n\n    if (SchedulerAction === void 0) {\n      SchedulerAction = VirtualAction;\n    }\n\n    if (maxFrames === void 0) {\n      maxFrames = Number.POSITIVE_INFINITY;\n    }\n\n    _super.call(this, SchedulerAction, function () {\n      return _this.frame;\n    });\n\n    this.maxFrames = maxFrames;\n    this.frame = 0;\n    this.index = -1;\n  }\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n\n\n  VirtualTimeScheduler.prototype.flush = function () {\n    var _a = this,\n        actions = _a.actions,\n        maxFrames = _a.maxFrames;\n\n    var error, action;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  VirtualTimeScheduler.frameTimeFactor = 10;\n  return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler);\n\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar VirtualAction = function (_super) {\n  __extends(VirtualAction, _super);\n\n  function VirtualAction(scheduler, work, index) {\n    if (index === void 0) {\n      index = scheduler.index += 1;\n    }\n\n    _super.call(this, scheduler, work);\n\n    this.scheduler = scheduler;\n    this.work = work;\n    this.index = index;\n    this.active = true;\n    this.index = scheduler.index = index;\n  }\n\n  VirtualAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (!this.id) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.active = false; // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n\n    var action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  };\n\n  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    this.delay = scheduler.frame + delay;\n    var actions = scheduler.actions;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  };\n\n  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return undefined;\n  };\n\n  VirtualAction.prototype._execute = function (state, delay) {\n    if (this.active === true) {\n      return _super.prototype._execute.call(this, state, delay);\n    }\n  };\n\n  VirtualAction.sortActions = function (a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n\n  return VirtualAction;\n}(AsyncAction_1.AsyncAction);\n\nexports.VirtualAction = VirtualAction; //# sourceMappingURL=VirtualTimeScheduler.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ng5-slider/node_modules/rxjs/scheduler/VirtualTimeScheduler.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","AsyncAction_1","require","AsyncScheduler_1","VirtualTimeScheduler","_super","SchedulerAction","maxFrames","_this","VirtualAction","Number","POSITIVE_INFINITY","call","frame","index","flush","_a","actions","error","action","shift","delay","execute","state","unsubscribe","frameTimeFactor","AsyncScheduler","exports","scheduler","work","active","schedule","id","add","requestAsyncId","push","sort","sortActions","recycleAsyncId","undefined","_execute","a","AsyncAction"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar VirtualTimeScheduler = (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        var _this = this;\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        _super.call(this, SchedulerAction, function () { return _this.frame; });\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nexports.VirtualAction = VirtualAction;\n//# sourceMappingURL=VirtualTimeScheduler.js.map"]},"metadata":{},"sourceType":"script"}