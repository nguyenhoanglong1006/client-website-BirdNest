{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\n\n\nfunction first(predicate, resultSelector, defaultValue) {\n  return function (source) {\n    return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n  };\n}\n\nexports.first = first;\n\nvar FirstOperator = function () {\n  function FirstOperator(predicate, resultSelector, defaultValue, source) {\n    this.predicate = predicate;\n    this.resultSelector = resultSelector;\n    this.defaultValue = defaultValue;\n    this.source = source;\n  }\n\n  FirstOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  };\n\n  return FirstOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar FirstSubscriber = function (_super) {\n  __extends(FirstSubscriber, _super);\n\n  function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n    _super.call(this, destination);\n\n    this.predicate = predicate;\n    this.resultSelector = resultSelector;\n    this.defaultValue = defaultValue;\n    this.source = source;\n    this.index = 0;\n    this.hasCompleted = false;\n    this._emitted = false;\n  }\n\n  FirstSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  };\n\n  FirstSubscriber.prototype._tryPredicate = function (value, index) {\n    var result;\n\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this._emit(value, index);\n    }\n  };\n\n  FirstSubscriber.prototype._emit = function (value, index) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n\n      return;\n    }\n\n    this._emitFinal(value);\n  };\n\n  FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n    var result;\n\n    try {\n      result = this.resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this._emitFinal(result);\n  };\n\n  FirstSubscriber.prototype._emitFinal = function (value) {\n    var destination = this.destination;\n\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  };\n\n  FirstSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError_1.EmptyError());\n    }\n  };\n\n  return FirstSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=first.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ng5-slider/node_modules/rxjs/operators/first.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","EmptyError_1","first","predicate","resultSelector","defaultValue","source","lift","FirstOperator","exports","call","observer","subscribe","FirstSubscriber","_super","destination","index","hasCompleted","_emitted","_next","value","_tryPredicate","_emit","result","err","error","_tryResultSelector","_emitFinal","next","complete","_complete","EmptyError","Subscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map"]},"metadata":{},"sourceType":"script"}