{"ast":null,"code":"import _classCallCheck from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createForOfIteratorHelper from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { HttpResponse, HttpHeaders, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable, ApplicationRef, NgModule, APP_INITIALIZER } from '@angular/core';\nimport { makeStateKey, TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { of } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\n\nfunction getHeadersMap(headers) {\n  var headersMap = {};\n\n  var _iterator = _createForOfIteratorHelper(headers.keys()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      headersMap[key] = headers.getAll(key);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return headersMap;\n}\n\nvar TransferHttpCacheInterceptor = /*#__PURE__*/function () {\n  function TransferHttpCacheInterceptor(appRef, transferState) {\n    var _this = this;\n\n    _classCallCheck(this, TransferHttpCacheInterceptor);\n\n    this.transferState = transferState;\n    this.isCacheActive = true; // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    // tslint:disable-next-line: no-floating-promises\n\n    appRef.isStable.pipe(filter(function (isStable) {\n      return isStable;\n    }), take(1)).toPromise().then(function () {\n      _this.isCacheActive = false;\n    });\n  }\n\n  return _createClass(TransferHttpCacheInterceptor, [{\n    key: \"invalidateCacheEntry\",\n    value: function invalidateCacheEntry(url) {\n      var _this2 = this;\n\n      Object.keys(this.transferState['store']).forEach(function (key) {\n        return key.includes(url) ? _this2.transferState.remove(makeStateKey(key)) : null;\n      });\n    }\n  }, {\n    key: \"makeCacheKey\",\n    value: function makeCacheKey(method, url, params) {\n      // make the params encoded same as a url so it's easy to identify\n      var encodedParams = params.keys().sort().map(function (k) {\n        return \"\".concat(k, \"=\").concat(params.getAll(k));\n      }).join('&');\n      var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n      return makeStateKey(key);\n    }\n  }, {\n    key: \"intercept\",\n    value: function intercept(req, next) {\n      var _this3 = this;\n\n      // Stop using the cache if there is a mutating call.\n      if (req.method !== 'GET' && req.method !== 'HEAD') {\n        this.isCacheActive = false;\n        this.invalidateCacheEntry(req.url);\n      }\n\n      if (!this.isCacheActive) {\n        // Cache is no longer active. Pass the request through.\n        return next.handle(req);\n      }\n\n      var storeKey = this.makeCacheKey(req.method, req.url, req.params);\n\n      if (this.transferState.hasKey(storeKey)) {\n        // Request found in cache. Respond using it.\n        var response = this.transferState.get(storeKey, {});\n        return of(new HttpResponse({\n          body: response.body,\n          headers: new HttpHeaders(response.headers),\n          status: response.status,\n          statusText: response.statusText,\n          url: response.url\n        }));\n      } else {\n        // Request not found in cache. Make the request and cache it.\n        var httpEvent = next.handle(req);\n        return httpEvent.pipe(tap(function (event) {\n          if (event instanceof HttpResponse) {\n            _this3.transferState.set(storeKey, {\n              body: event.body,\n              headers: getHeadersMap(event.headers),\n              status: event.status,\n              statusText: event.statusText,\n              url: event.url || ''\n            });\n          }\n        }));\n      }\n    }\n  }]);\n}();\n\nTransferHttpCacheInterceptor.ɵfac = function TransferHttpCacheInterceptor_Factory(t) {\n  return new (t || TransferHttpCacheInterceptor)(ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc1.TransferState));\n};\n\nTransferHttpCacheInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TransferHttpCacheInterceptor,\n  factory: TransferHttpCacheInterceptor.ɵfac\n});\n\nTransferHttpCacheInterceptor.ctorParameters = function () {\n  return [{\n    type: ApplicationRef\n  }, {\n    type: TransferState\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferHttpCacheInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc1.TransferState\n    }];\n  }, null);\n})();\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n\n\nvar TransferHttpCacheModule = /*#__PURE__*/_createClass(function TransferHttpCacheModule() {\n  _classCallCheck(this, TransferHttpCacheModule);\n});\n\nTransferHttpCacheModule.ɵfac = function TransferHttpCacheModule_Factory(t) {\n  return new (t || TransferHttpCacheModule)();\n};\n\nTransferHttpCacheModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TransferHttpCacheModule\n});\nTransferHttpCacheModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [TransferHttpCacheInterceptor, {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: TransferHttpCacheInterceptor,\n    multi: true\n  }],\n  imports: [[BrowserTransferStateModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TransferHttpCacheModule, {\n    imports: function imports() {\n      return [BrowserTransferStateModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferHttpCacheModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BrowserTransferStateModule],\n      providers: [TransferHttpCacheInterceptor, {\n        provide: HTTP_INTERCEPTORS,\n        useExisting: TransferHttpCacheInterceptor,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction domContentLoadedFactory(doc) {\n  return function () {\n    return new Promise(function (resolve, _reject) {\n      if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\n        resolve();\n        return;\n      }\n\n      var _contentLoaded = function contentLoaded() {\n        doc.removeEventListener('DOMContentLoaded', _contentLoaded);\n        resolve();\n      };\n\n      doc.addEventListener('DOMContentLoaded', _contentLoaded);\n    });\n  };\n}\n\nvar StateTransferInitializerModule = /*#__PURE__*/_createClass(function StateTransferInitializerModule() {\n  _classCallCheck(this, StateTransferInitializerModule);\n});\n\nStateTransferInitializerModule.ɵfac = function StateTransferInitializerModule_Factory(t) {\n  return new (t || StateTransferInitializerModule)();\n};\n\nStateTransferInitializerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: StateTransferInitializerModule\n});\nStateTransferInitializerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    useFactory: domContentLoadedFactory,\n    deps: [DOCUMENT]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StateTransferInitializerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: domContentLoadedFactory,\n        deps: [DOCUMENT]\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { StateTransferInitializerModule, TransferHttpCacheModule, TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor, domContentLoadedFactory as ɵnguniversal_modules_common_common_a }; //# sourceMappingURL=common.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@nguniversal/common/__ivy_ngcc__/fesm2015/common.js"],"names":["HttpResponse","HttpHeaders","HTTP_INTERCEPTORS","Injectable","ApplicationRef","NgModule","APP_INITIALIZER","makeStateKey","TransferState","BrowserTransferStateModule","of","filter","take","tap","DOCUMENT","ɵngcc0","ɵngcc1","getHeadersMap","headers","headersMap","keys","key","getAll","TransferHttpCacheInterceptor","appRef","transferState","isCacheActive","isStable","pipe","toPromise","then","invalidateCacheEntry","url","Object","forEach","includes","remove","makeCacheKey","method","params","encodedParams","sort","map","k","join","intercept","req","next","handle","storeKey","hasKey","response","get","body","status","statusText","httpEvent","event","set","ɵfac","TransferHttpCacheInterceptor_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","type","ngDevMode","ɵsetClassMetadata","TransferHttpCacheModule","TransferHttpCacheModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","provide","useExisting","multi","imports","ngJitMode","ɵɵsetNgModuleScope","args","domContentLoadedFactory","doc","Promise","resolve","_reject","readyState","contentLoaded","removeEventListener","addEventListener","StateTransferInitializerModule","StateTransferInitializerModule_Factory","useFactory","deps","ɵTransferHttpCacheInterceptor","ɵnguniversal_modules_common_common_a"],"mappings":"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","sourcesContent":["import { HttpResponse, HttpHeaders, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable, ApplicationRef, NgModule, APP_INITIALIZER } from '@angular/core';\nimport { makeStateKey, TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { of } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nfunction getHeadersMap(headers) {\n    const headersMap = {};\n    for (const key of headers.keys()) {\n        headersMap[key] = headers.getAll(key);\n    }\n    return headersMap;\n}\nclass TransferHttpCacheInterceptor {\n    constructor(appRef, transferState) {\n        this.transferState = transferState;\n        this.isCacheActive = true;\n        // Stop using the cache if the application has stabilized, indicating initial rendering is\n        // complete.\n        // tslint:disable-next-line: no-floating-promises\n        appRef.isStable\n            .pipe(filter((isStable) => isStable), take(1)).toPromise()\n            .then(() => { this.isCacheActive = false; });\n    }\n    invalidateCacheEntry(url) {\n        Object.keys(this.transferState['store'])\n            .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);\n    }\n    makeCacheKey(method, url, params) {\n        // make the params encoded same as a url so it's easy to identify\n        const encodedParams = params.keys().sort().map(k => `${k}=${params.getAll(k)}`).join('&');\n        const key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n        return makeStateKey(key);\n    }\n    intercept(req, next) {\n        // Stop using the cache if there is a mutating call.\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\n            this.isCacheActive = false;\n            this.invalidateCacheEntry(req.url);\n        }\n        if (!this.isCacheActive) {\n            // Cache is no longer active. Pass the request through.\n            return next.handle(req);\n        }\n        const storeKey = this.makeCacheKey(req.method, req.url, req.params);\n        if (this.transferState.hasKey(storeKey)) {\n            // Request found in cache. Respond using it.\n            const response = this.transferState.get(storeKey, {});\n            return of(new HttpResponse({\n                body: response.body,\n                headers: new HttpHeaders(response.headers),\n                status: response.status,\n                statusText: response.statusText,\n                url: response.url,\n            }));\n        }\n        else {\n            // Request not found in cache. Make the request and cache it.\n            const httpEvent = next.handle(req);\n            return httpEvent\n                .pipe(tap((event) => {\n                if (event instanceof HttpResponse) {\n                    this.transferState.set(storeKey, {\n                        body: event.body,\n                        headers: getHeadersMap(event.headers),\n                        status: event.status,\n                        statusText: event.statusText,\n                        url: event.url || '',\n                    });\n                }\n            }));\n        }\n    }\n}\nTransferHttpCacheInterceptor.ɵfac = function TransferHttpCacheInterceptor_Factory(t) { return new (t || TransferHttpCacheInterceptor)(ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc1.TransferState)); };\nTransferHttpCacheInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TransferHttpCacheInterceptor, factory: TransferHttpCacheInterceptor.ɵfac });\nTransferHttpCacheInterceptor.ctorParameters = () => [\n    { type: ApplicationRef },\n    { type: TransferState }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferHttpCacheInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ApplicationRef }, { type: ɵngcc1.TransferState }]; }, null); })();\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\nclass TransferHttpCacheModule {\n}\nTransferHttpCacheModule.ɵfac = function TransferHttpCacheModule_Factory(t) { return new (t || TransferHttpCacheModule)(); };\nTransferHttpCacheModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TransferHttpCacheModule });\nTransferHttpCacheModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        TransferHttpCacheInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n    ], imports: [[BrowserTransferStateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TransferHttpCacheModule, { imports: function () { return [BrowserTransferStateModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferHttpCacheModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BrowserTransferStateModule],\n                providers: [\n                    TransferHttpCacheInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction domContentLoadedFactory(doc) {\n    return () => new Promise((resolve, _reject) => {\n        if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\n            resolve();\n            return;\n        }\n        const contentLoaded = () => {\n            doc.removeEventListener('DOMContentLoaded', contentLoaded);\n            resolve();\n        };\n        doc.addEventListener('DOMContentLoaded', contentLoaded);\n    });\n}\nclass StateTransferInitializerModule {\n}\nStateTransferInitializerModule.ɵfac = function StateTransferInitializerModule_Factory(t) { return new (t || StateTransferInitializerModule)(); };\nStateTransferInitializerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: StateTransferInitializerModule });\nStateTransferInitializerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT] },\n    ] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StateTransferInitializerModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    { provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT] },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { StateTransferInitializerModule, TransferHttpCacheModule, TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor, domContentLoadedFactory as ɵnguniversal_modules_common_common_a };\n\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"module"}