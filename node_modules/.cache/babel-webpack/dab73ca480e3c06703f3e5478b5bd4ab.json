{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar EmptyError_1 = require('../util/EmptyError');\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\n\n\nfunction last(predicate, resultSelector, defaultValue) {\n  return function (source) {\n    return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n  };\n}\n\nexports.last = last;\n\nvar LastOperator = function () {\n  function LastOperator(predicate, resultSelector, defaultValue, source) {\n    this.predicate = predicate;\n    this.resultSelector = resultSelector;\n    this.defaultValue = defaultValue;\n    this.source = source;\n  }\n\n  LastOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  };\n\n  return LastOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar LastSubscriber = function (_super) {\n  __extends(LastSubscriber, _super);\n\n  function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n    _super.call(this, destination);\n\n    this.predicate = predicate;\n    this.resultSelector = resultSelector;\n    this.defaultValue = defaultValue;\n    this.source = source;\n    this.hasValue = false;\n    this.index = 0;\n\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  LastSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n\n        return;\n      }\n\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  };\n\n  LastSubscriber.prototype._tryPredicate = function (value, index) {\n    var result;\n\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n\n        return;\n      }\n\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  };\n\n  LastSubscriber.prototype._tryResultSelector = function (value, index) {\n    var result;\n\n    try {\n      result = this.resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.lastValue = result;\n    this.hasValue = true;\n  };\n\n  LastSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError_1.EmptyError());\n    }\n  };\n\n  return LastSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=last.js.map","map":{"version":3,"sources":["/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/ng5-slider/node_modules/rxjs/operators/last.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","EmptyError_1","last","predicate","resultSelector","defaultValue","source","lift","LastOperator","exports","call","observer","subscribe","LastSubscriber","_super","destination","hasValue","index","lastValue","_next","value","_tryPredicate","_tryResultSelector","result","err","error","_complete","next","complete","EmptyError","Subscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map"]},"metadata":{},"sourceType":"script"}