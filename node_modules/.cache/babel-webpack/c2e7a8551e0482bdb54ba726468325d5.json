{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar noop_1 = require('../util/noop');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\n\n\nfunction ignoreElements() {\n  return function ignoreElementsOperatorFunction(source) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nexports.ignoreElements = ignoreElements;\n\nvar IgnoreElementsOperator = function () {\n  function IgnoreElementsOperator() {}\n\n  IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  };\n\n  return IgnoreElementsOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar IgnoreElementsSubscriber = function (_super) {\n  __extends(IgnoreElementsSubscriber, _super);\n\n  function IgnoreElementsSubscriber() {\n    _super.apply(this, arguments);\n  }\n\n  IgnoreElementsSubscriber.prototype._next = function (unused) {\n    noop_1.noop();\n  };\n\n  return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=ignoreElements.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ng5-slider/node_modules/rxjs/operators/ignoreElements.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","noop_1","ignoreElements","ignoreElementsOperatorFunction","source","lift","IgnoreElementsOperator","exports","call","subscriber","subscribe","IgnoreElementsSubscriber","_super","apply","arguments","_next","unused","noop","Subscriber"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxD,OAAK,IAAIC,CAAT,IAAcD,CAAd,EAAiB,IAAIA,CAAC,CAACE,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBF,CAAC,CAACE,CAAD,CAAD,GAAOD,CAAC,CAACC,CAAD,CAAR;;AAC1C,WAASE,EAAT,GAAc;AAAE,SAAKC,WAAL,GAAmBL,CAAnB;AAAuB;;AACvCA,EAAAA,CAAC,CAACM,SAAF,GAAcL,CAAC,KAAK,IAAN,GAAaM,MAAM,CAACC,MAAP,CAAcP,CAAd,CAAb,IAAiCG,EAAE,CAACE,SAAH,GAAeL,CAAC,CAACK,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,CAJD;;AAKA,IAAIK,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,cAAT,GAA0B;AACtB,SAAO,SAASC,8BAAT,CAAwCC,MAAxC,EAAgD;AACnD,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,sBAAJ,EAAZ,CAAP;AACH,GAFD;AAGH;;AACDC,OAAO,CAACL,cAAR,GAAyBA,cAAzB;;AACA,IAAII,sBAAsB,GAAI,YAAY;AACtC,WAASA,sBAAT,GAAkC,CACjC;;AACDA,EAAAA,sBAAsB,CAACV,SAAvB,CAAiCY,IAAjC,GAAwC,UAAUC,UAAV,EAAsBL,MAAtB,EAA8B;AAClE,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,wBAAJ,CAA6BF,UAA7B,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOH,sBAAP;AACH,CAP6B,EAA9B;AAQA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,wBAAwB,GAAI,UAAUC,MAAV,EAAkB;AAC9CvB,EAAAA,SAAS,CAACsB,wBAAD,EAA2BC,MAA3B,CAAT;;AACA,WAASD,wBAAT,GAAoC;AAChCC,IAAAA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB;AACH;;AACDH,EAAAA,wBAAwB,CAACf,SAAzB,CAAmCmB,KAAnC,GAA2C,UAAUC,MAAV,EAAkB;AACzDf,IAAAA,MAAM,CAACgB,IAAP;AACH,GAFD;;AAGA,SAAON,wBAAP;AACH,CAT+B,CAS9BZ,YAAY,CAACmB,UATiB,CAAhC,C,CAUA","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar noop_1 = require('../util/noop');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nexports.ignoreElements = ignoreElements;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map"]},"metadata":{},"sourceType":"script"}