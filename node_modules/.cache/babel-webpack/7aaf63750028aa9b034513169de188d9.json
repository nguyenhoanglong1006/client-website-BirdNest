{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscription_1 = require('../Subscription');\n\nvar tryCatch_1 = require('../util/tryCatch');\n\nvar errorObject_1 = require('../util/errorObject');\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\n\n\nfunction bufferWhen(closingSelector) {\n  return function (source) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nexports.bufferWhen = bufferWhen;\n\nvar BufferWhenOperator = function () {\n  function BufferWhenOperator(closingSelector) {\n    this.closingSelector = closingSelector;\n  }\n\n  BufferWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  };\n\n  return BufferWhenOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar BufferWhenSubscriber = function (_super) {\n  __extends(BufferWhenSubscriber, _super);\n\n  function BufferWhenSubscriber(destination, closingSelector) {\n    _super.call(this, destination);\n\n    this.closingSelector = closingSelector;\n    this.subscribing = false;\n    this.openBuffer();\n  }\n\n  BufferWhenSubscriber.prototype._next = function (value) {\n    this.buffer.push(value);\n  };\n\n  BufferWhenSubscriber.prototype._complete = function () {\n    var buffer = this.buffer;\n\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n\n    _super.prototype._complete.call(this);\n  };\n  /** @deprecated internal use only */\n\n\n  BufferWhenSubscriber.prototype._unsubscribe = function () {\n    this.buffer = null;\n    this.subscribing = false;\n  };\n\n  BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.openBuffer();\n  };\n\n  BufferWhenSubscriber.prototype.notifyComplete = function () {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  };\n\n  BufferWhenSubscriber.prototype.openBuffer = function () {\n    var closingSubscription = this.closingSubscription;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    var buffer = this.buffer;\n\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n    var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject_1.errorObject) {\n      this.error(errorObject_1.errorObject.e);\n    } else {\n      closingSubscription = new Subscription_1.Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  };\n\n  return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber); //# sourceMappingURL=bufferWhen.js.map","map":{"version":3,"sources":["/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/ng5-slider/node_modules/rxjs/operators/bufferWhen.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscription_1","require","tryCatch_1","errorObject_1","OuterSubscriber_1","subscribeToResult_1","bufferWhen","closingSelector","source","lift","BufferWhenOperator","exports","call","subscriber","subscribe","BufferWhenSubscriber","_super","destination","subscribing","openBuffer","_next","value","buffer","push","_complete","next","_unsubscribe","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","complete","closingSubscription","remove","unsubscribe","closingNotifier","tryCatch","errorObject","error","e","Subscription","add","subscribeToResult","OuterSubscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map"]},"metadata":{},"sourceType":"script"}