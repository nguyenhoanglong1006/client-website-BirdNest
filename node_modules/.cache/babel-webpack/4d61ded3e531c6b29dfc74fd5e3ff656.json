{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createForOfIteratorHelper from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _createClass from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { Subject } from 'rxjs';\nimport { Renderer2, Directive, ElementRef, HostBinding, ChangeDetectorRef, Component, ViewChild, HostListener, Input, EventEmitter, Output, ContentChild, forwardRef, NgZone, NgModule } from '@angular/core';\nimport { throttleTime, tap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport detectPassiveEvents from 'detect-passive-events';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/** @enum {number} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"tooltipTemplate\"];\nvar _c1 = [\"leftOuterSelectionBar\"];\nvar _c2 = [\"rightOuterSelectionBar\"];\nvar _c3 = [\"fullBar\"];\nvar _c4 = [\"selectionBar\"];\nvar _c5 = [\"minHandle\"];\nvar _c6 = [\"maxHandle\"];\nvar _c7 = [\"floorLabel\"];\nvar _c8 = [\"ceilLabel\"];\nvar _c9 = [\"minHandleLabel\"];\nvar _c10 = [\"maxHandleLabel\"];\nvar _c11 = [\"combinedLabel\"];\nvar _c12 = [\"ticksElement\"];\n\nfunction SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng5-slider-tooltip-wrapper\", 31);\n  }\n\n  if (rf & 2) {\n    var t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r14.tooltipTemplate)(\"tooltip\", t_r13.valueTooltip)(\"placement\", t_r13.valueTooltipPlacement)(\"content\", t_r13.value);\n  }\n}\n\nfunction SliderComponent_span_28_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 32);\n  }\n\n  if (rf & 2) {\n    var t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", t_r13.legend, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nvar _c13 = function _c13(a0) {\n  return {\n    \"ng5-slider-selected\": a0\n  };\n};\n\nfunction SliderComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 27);\n    ɵngcc0.ɵɵelement(1, \"ng5-slider-tooltip-wrapper\", 28);\n    ɵngcc0.ɵɵtemplate(2, SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template, 1, 4, \"ng5-slider-tooltip-wrapper\", 29);\n    ɵngcc0.ɵɵtemplate(3, SliderComponent_span_28_span_3_Template, 1, 1, \"span\", 30);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var t_r13 = ctx.$implicit;\n    var ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c13, t_r13.selected))(\"ngStyle\", t_r13.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r12.tooltipTemplate)(\"tooltip\", t_r13.tooltip)(\"placement\", t_r13.tooltipPlacement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.value != null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.legend != null);\n  }\n}\n\nfunction TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template(rf, ctx) {}\n\nfunction TooltipWrapperComponent_ng_container_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nvar _c14 = function _c14(a0, a1, a2) {\n  return {\n    tooltip: a0,\n    placement: a1,\n    content: a2\n  };\n};\n\nfunction TooltipWrapperComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_0_1_Template, 1, 0, undefined, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c14, ctx_r0.tooltip, ctx_r0.placement, ctx_r0.content));\n  }\n}\n\nfunction TooltipWrapperComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r1.tooltip)(\"data-tooltip-placement\", ctx_r1.placement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.content, \" \");\n  }\n}\n\nvar PointerType = {\n  /** Low pointer */\n  Min: 0,\n\n  /** High pointer */\n  Max: 1\n};\nPointerType[PointerType.Min] = \"Min\";\nPointerType[PointerType.Max] = \"Max\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/** @enum {number} */\n\nvar LabelType = {\n  /** Label above low pointer */\n  Low: 0,\n\n  /** Label above high pointer */\n  High: 1,\n\n  /** Label for minimum slider value */\n  Floor: 2,\n\n  /** Label for maximum slider value */\n  Ceil: 3,\n\n  /** Label below legend tick */\n  TickValue: 4\n};\nLabelType[LabelType.Low] = \"Low\";\nLabelType[LabelType.High] = \"High\";\nLabelType[LabelType.Floor] = \"Floor\";\nLabelType[LabelType.Ceil] = \"Ceil\";\nLabelType[LabelType.TickValue] = \"TickValue\";\n/**\n * Custom step definition\n *\n * This can be used to specify custom values and legend values for slider ticks\n * @record\n */\n\n/**\n * Slider options\n */\n\nvar Options = /*#__PURE__*/_createClass(function Options() {\n  _classCallCheck(this, Options);\n\n  /**\n   * Minimum value for a slider.\n   * Not applicable when using stepsArray.\n   */\n  this.floor = 0;\n  /**\n   * Maximum value for a slider.\n   * Not applicable when using stepsArray.\n   */\n\n  this.ceil = null;\n  /**\n   * Step between each value.\n   * Not applicable when using stepsArray.\n   */\n\n  this.step = 1;\n  /**\n   * The minimum range authorized on the slider.\n   * Applies to range slider only.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n\n  this.minRange = null;\n  /**\n   * The maximum range authorized on the slider.\n   * Applies to range slider only.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n\n  this.maxRange = null;\n  /**\n   * Set to true to have a push behavior. When the min handle goes above the max,\n   * the max is moved as well (and vice-versa). The range between min and max is\n   * defined by the step option (defaults to 1) and can also be overriden by\n   * the minRange option. Applies to range slider only.\n   */\n\n  this.pushRange = false;\n  /**\n   * The minimum value authorized on the slider.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n\n  this.minLimit = null;\n  /**\n   * The maximum value authorized on the slider.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n\n  this.maxLimit = null;\n  /**\n   * Custom translate function. Use this if you want to translate values displayed\n   * on the slider.\n   */\n\n  this.translate = null;\n  /**\n   * Custom function for combining overlapping labels in range slider.\n   * It takes the min and max values (already translated with translate fuction)\n   * and should return how these two values should be combined.\n   * If not provided, the default function will join the two values with\n   * ' - ' as separator.\n   */\n\n  this.combineLabels = null;\n  /**\n   * Use to display legend under ticks (thus, it needs to be used along with\n   * showTicks or showTicksValues). The function will be called with each tick\n   * value and returned content will be displayed under the tick as a legend.\n   * If the returned value is null, then no legend is displayed under\n   * the corresponding tick.You can also directly provide the legend values\n   * in the stepsArray option.\n   */\n\n  this.getLegend = null;\n  /**\n   * If you want to display a slider with non linear/number steps.\n   * Just pass an array with each slider value and that's it; the floor, ceil and step settings\n   * of the slider will be computed automatically.\n   * By default, the value model and valueHigh model values will be the value of the selected item\n   * in the stepsArray.\n   * They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n   * option to true.\n   */\n\n  this.stepsArray = null;\n  /**\n   * Set to true to bind the index of the selected item to value model and valueHigh model.\n   */\n\n  this.bindIndexForStepsArray = false;\n  /**\n   * When set to true and using a range slider, the range can be dragged by the selection bar.\n   * Applies to range slider only.\n   */\n\n  this.draggableRange = false;\n  /**\n   * Same as draggableRange but the slider range can't be changed.\n   * Applies to range slider only.\n   */\n\n  this.draggableRangeOnly = false;\n  /**\n   * Set to true to always show the selection bar before the slider handle.\n   */\n\n  this.showSelectionBar = false;\n  /**\n   * Set to true to always show the selection bar after the slider handle.\n   */\n\n  this.showSelectionBarEnd = false;\n  /**\n   * Set a number to draw the selection bar between this value and the slider handle.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n\n  this.showSelectionBarFromValue = null;\n  /**\n   * Only for range slider. Set to true to visualize in different colour the areas\n   * on the left/right (top/bottom for vertical range slider) of selection bar between the handles.\n   */\n\n  this.showOuterSelectionBars = false;\n  /**\n   * Set to true to hide pointer labels\n   */\n\n  this.hidePointerLabels = false;\n  /**\n   * Set to true to hide min / max labels\n   */\n\n  this.hideLimitLabels = false;\n  /**\n   * Set to false to disable the auto-hiding behavior of the limit labels.\n   */\n\n  this.autoHideLimitLabels = true;\n  /**\n   * Set to true to make the slider read-only.\n   */\n\n  this.readOnly = false;\n  /**\n   * Set to true to disable the slider.\n   */\n\n  this.disabled = false;\n  /**\n   * Throttle interval for mouse events in milliseconds.\n   * This is provided to avoid a flood of events when moving the slider with mouse.\n   */\n\n  this.mouseEventsInterval = 50;\n  /**\n   * Throttle interval for touch events in milliseconds.\n   * This is provided to avoid a flood of events when moving the slider with touch gesture.\n   */\n\n  this.touchEventsInterval = 50;\n  /**\n   * Throttle interval for input changes (changes to bindings or reactive form inputs)\n   * This is provided to avoid a flood of events on frequent input binding changes affecting performance.\n   */\n\n  this.inputEventsInterval = 100;\n  /**\n   * Throttle interval for output changes (signalling changes to output bindings and user callbacks)\n   * This is provided to avoid a flood of outgoing events affecting Angular app performance.\n   */\n\n  this.outputEventsInterval = 100;\n  /**\n   * Set to true to display a tick for each step of the slider.\n   */\n\n  this.showTicks = false;\n  /**\n   * Set to true to display a tick and the step value for each step of the slider..\n   */\n\n  this.showTicksValues = false;\n  /* The step between each tick to display. If not set, the step value is used.\n      Not used when ticksArray is specified. */\n\n  this.tickStep = null;\n  /* The step between displaying each tick step value. */\n\n  this.tickValueStep = 1;\n  /**\n   * Use to display ticks at specific positions.\n   * The array contains the index of the ticks that should be displayed.\n   * For example, [0, 1, 5] will display a tick for the first, second and sixth values.\n   */\n\n  this.ticksArray = null;\n  /**\n   * Used to display a tooltip when a tick is hovered.\n   * Set to a function that returns the tooltip content for a given value.\n   */\n\n  this.ticksTooltip = null;\n  /**\n   * Same as ticksTooltip but for ticks values.\n   */\n\n  this.ticksValuesTooltip = null;\n  /**\n   * Set to true to display the slider vertically.\n   * The slider will take the full height of its parent.\n   * Changing this value at runtime is not currently supported.\n   */\n\n  this.vertical = false;\n  /**\n   * Function that returns the current color of the selection bar.\n   * If your color won't change, don't use this option but set it through CSS.\n   * If the returned color depends on a model value (either value or valueHigh),\n   * you should use the argument passed to the function.\n   * Indeed, when the function is called, there is no certainty that the model\n   * has already been updated.\n   */\n\n  this.getSelectionBarColor = null;\n  /**\n   * Function that returns the color of a tick. showTicks must be enabled.\n   */\n\n  this.getTickColor = null;\n  /**\n   * Function that returns the current color of a pointer.\n   * If your color won't change, don't use this option but set it through CSS.\n   * If the returned color depends on a model value (either value or valueHigh),\n   * you should use the argument passed to the function.\n   * Indeed, when the function is called, there is no certainty that the model has already been updated.\n   * To handle range slider pointers independently, you should evaluate pointerType within the given\n   * function where \"min\" stands for value model and \"max\" for valueHigh model values.\n   */\n\n  this.getPointerColor = null;\n  /**\n   * Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n   * Left/bottom arrows: -1\n   * Right/top arrows: +1\n   * Page-down: -10%\n   * Page-up: +10%\n   * Home: minimum value\n   * End: maximum value\n   */\n\n  this.keyboardSupport = true;\n  /**\n   * If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n   * so that the slider is rendered properly and the events are handled correctly.\n   */\n\n  this.scale = 1;\n  /**\n   * Set to true to force the value to be rounded to the step, even when modified from the outside.\n   * When set to false, if the model values are modified from outside the slider, they are not rounded\n   * and can be between two steps.\n   */\n\n  this.enforceStep = true;\n  /**\n   * Set to true to force the value to be normalised to allowed range (floor to ceil), even when modified from the outside.\n   * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n   * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n   */\n\n  this.enforceRange = true;\n  /**\n   * Set to true to prevent to user from switching the min and max handles. Applies to range slider only.\n   */\n\n  this.noSwitching = false;\n  /**\n   * Set to true to only bind events on slider handles.\n   */\n\n  this.onlyBindHandles = false;\n  /**\n   * Set to true to show graphs right to left.\n   * If vertical is true it will be from top to bottom and left / right arrow functions reversed.\n   */\n\n  this.rightToLeft = false;\n  /**\n   * Set to true to reverse keyboard navigation:\n   * Right/top arrows: -1\n   * Left/bottom arrows: +1\n   * Page-up: -10%\n   * Page-down: +10%\n   * End: minimum value\n   * Home: maximum value\n   */\n\n  this.reversedControls = false;\n  /**\n   * Set to true to keep the slider labels inside the slider bounds.\n   */\n\n  this.boundPointerLabels = true;\n  /**\n   * Set to true to use a logarithmic scale to display the slider.\n   */\n\n  this.logScale = false;\n  /**\n   * Function that returns the position on the slider for a given value.\n   * The position must be a percentage between 0 and 1.\n   * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n   */\n\n  this.customValueToPosition = null;\n  /**\n   * Function that returns the value for a given position on the slider.\n   * The position is a percentage between 0 and 1.\n   * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n   */\n\n  this.customPositionToValue = null;\n  /**\n   * Precision limit for calculated values.\n   * Values used in calculations will be rounded to this number of significant digits\n   * to prevent accumulating small floating-point errors.\n   */\n\n  this.precisionLimit = 12;\n  /**\n   * Use to display the selection bar as a gradient.\n   * The given object must contain from and to properties which are colors.\n   */\n\n  this.selectionBarGradient = null;\n  /**\n   * Use to add a label directly to the slider for accessibility. Adds the aria-label attribute.\n   */\n\n  this.ariaLabel = null;\n  /**\n   * Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n   * Adds the aria-labelledby attribute.\n   */\n\n  this.ariaLabelledBy = null;\n  /**\n   * Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute.\n   */\n\n  this.ariaLabelHigh = null;\n  /**\n   * Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n   * Adds the aria-labelledby attribute.\n   */\n\n  this.ariaLabelledByHigh = null;\n  /**\n   * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle\n   */\n\n  this.handleDimension = null;\n  /**\n   * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar\n   */\n\n  this.barDimension = null;\n  /**\n   * Enable/disable CSS animations\n   */\n\n  this.animate = true;\n});\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar ChangeContext = /*#__PURE__*/_createClass(function ChangeContext() {\n  _classCallCheck(this, ChangeContext);\n});\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\n\n\nvar ValueHelper = /*#__PURE__*/function () {\n  function ValueHelper() {\n    _classCallCheck(this, ValueHelper);\n  }\n\n  return _createClass(ValueHelper, null, [{\n    key: \"isNullOrUndefined\",\n    value:\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isNullOrUndefined(value) {\n      return value === undefined || value === null;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n\n  }, {\n    key: \"linearValueToPosition\",\n    value: function linearValueToPosition(val, minVal, maxVal) {\n      var\n      /** @type {?} */\n      range = maxVal - minVal;\n      return (val - minVal) / range;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n\n  }, {\n    key: \"logValueToPosition\",\n    value: function logValueToPosition(val, minVal, maxVal) {\n      val = Math.log(val);\n      minVal = Math.log(minVal);\n      maxVal = Math.log(maxVal);\n      var\n      /** @type {?} */\n      range = maxVal - minVal;\n      return (val - minVal) / range;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n\n  }, {\n    key: \"linearPositionToValue\",\n    value: function linearPositionToValue(percent, minVal, maxVal) {\n      return percent * (maxVal - minVal) + minVal;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n\n  }, {\n    key: \"logPositionToValue\",\n    value: function logPositionToValue(percent, minVal, maxVal) {\n      minVal = Math.log(minVal);\n      maxVal = Math.log(maxVal);\n      var\n      /** @type {?} */\n      value = percent * (maxVal - minVal) + minVal;\n      return Math.exp(value);\n    }\n    /**\n     * @param {?} modelValue\n     * @param {?} stepsArray\n     * @return {?}\n     */\n\n  }, {\n    key: \"findStepIndex\",\n    value: function findStepIndex(modelValue, stepsArray) {\n      var\n      /** @type {?} */\n      differences = stepsArray.map(function (step) {\n        return Math.abs(modelValue - step.value);\n      });\n      var\n      /** @type {?} */\n      minDifferenceIndex = 0;\n\n      for (var\n      /** @type {?} */\n      index = 0; index < stepsArray.length; index++) {\n        if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n          minDifferenceIndex = index;\n        }\n      }\n\n      return minDifferenceIndex;\n    }\n  }]);\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Helper with compatibility functions to support different browsers\n */\n\n\nvar CompatibilityHelper = /*#__PURE__*/function () {\n  function CompatibilityHelper() {\n    _classCallCheck(this, CompatibilityHelper);\n  }\n\n  return _createClass(CompatibilityHelper, null, [{\n    key: \"isTouchEvent\",\n    value:\n    /**\n     * Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari)\n     * @param {?} event\n     * @return {?}\n     */\n    function isTouchEvent(event) {\n      if (\n      /** @type {?} */\n      window.TouchEvent !== undefined) {\n        return event instanceof TouchEvent;\n      }\n\n      return event.touches !== undefined;\n    }\n    /**\n     * Detect presence of ResizeObserver API\n     * @return {?}\n     */\n\n  }, {\n    key: \"isResizeObserverAvailable\",\n    value: function isResizeObserverAvailable() {\n      return (\n        /** @type {?} */\n        window.ResizeObserver !== undefined\n      );\n    }\n  }]);\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Helper with mathematical functions\n */\n\n\nvar MathHelper = /*#__PURE__*/function () {\n  function MathHelper() {\n    _classCallCheck(this, MathHelper);\n  }\n\n  return _createClass(MathHelper, null, [{\n    key: \"roundToPrecisionLimit\",\n    value:\n    /**\n     * @param {?} value\n     * @param {?} precisionLimit\n     * @return {?}\n     */\n    function roundToPrecisionLimit(value, precisionLimit) {\n      return +value.toPrecision(precisionLimit);\n    }\n    /**\n     * @param {?} value\n     * @param {?} floor\n     * @param {?} ceil\n     * @return {?}\n     */\n\n  }, {\n    key: \"clampToRange\",\n    value: function clampToRange(value, floor, ceil) {\n      return Math.min(Math.max(value, floor), ceil);\n    }\n  }]);\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar EventListener = /*#__PURE__*/_createClass(function EventListener() {\n  _classCallCheck(this, EventListener);\n\n  this.eventName = null;\n  this.events = null;\n  this.eventsSubscription = null;\n  this.teardownCallback = null;\n});\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\n\n\nvar EventListenerHelper = /*#__PURE__*/function () {\n  /**\n   * @param {?} renderer\n   */\n  function EventListenerHelper(renderer) {\n    _classCallCheck(this, EventListenerHelper);\n\n    this.renderer = renderer;\n  }\n  /**\n   * @param {?} nativeElement\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} throttleInterval\n   * @return {?}\n   */\n\n\n  return _createClass(EventListenerHelper, [{\n    key: \"attachPassiveEventListener\",\n    value: function attachPassiveEventListener(nativeElement, eventName, callback, throttleInterval) {\n      // Only use passive event listeners if the browser supports it\n      if (detectPassiveEvents.hasSupport !== true) {\n        return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n      } // Angular doesn't support passive event handlers (yet), so we need to roll our own code using native functions\n\n\n      var\n      /** @type {?} */\n      listener = new EventListener();\n      listener.eventName = eventName;\n      listener.events = new Subject();\n\n      var\n      /** @type {?} */\n      observerCallback = function observerCallback(event) {\n        listener.events.next(event);\n      };\n\n      nativeElement.addEventListener(eventName, observerCallback, {\n        passive: true,\n        capture: false\n      });\n\n      listener.teardownCallback = function () {\n        nativeElement.removeEventListener(eventName, observerCallback, {\n          passive: true,\n          capture: false\n        });\n      };\n\n      listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n        leading: true,\n        trailing: true\n      }) : tap(function () {}) // no-op\n      ).subscribe(function (event) {\n        callback(event);\n      });\n      return listener;\n    }\n    /**\n     * @param {?} eventListener\n     * @return {?}\n     */\n\n  }, {\n    key: \"detachEventListener\",\n    value: function detachEventListener(eventListener) {\n      if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n        eventListener.eventsSubscription.unsubscribe();\n        eventListener.eventsSubscription = null;\n      }\n\n      if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n        eventListener.events.complete();\n        eventListener.events = null;\n      }\n\n      if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n        eventListener.teardownCallback();\n        eventListener.teardownCallback = null;\n      }\n    }\n    /**\n     * @param {?} nativeElement\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} throttleInterval\n     * @return {?}\n     */\n\n  }, {\n    key: \"attachEventListener\",\n    value: function attachEventListener(nativeElement, eventName, callback, throttleInterval) {\n      var\n      /** @type {?} */\n      listener = new EventListener();\n      listener.eventName = eventName;\n      listener.events = new Subject();\n\n      var\n      /** @type {?} */\n      observerCallback = function observerCallback(event) {\n        listener.events.next(event);\n      };\n\n      listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n      listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n        leading: true,\n        trailing: true\n      }) : tap(function () {}) // no-op\n      ).subscribe(function (event) {\n        callback(event);\n      });\n      return listener;\n    }\n  }]);\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar SliderElementDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  function SliderElementDirective(elemRef, renderer, changeDetectionRef) {\n    _classCallCheck(this, SliderElementDirective);\n\n    this.elemRef = elemRef;\n    this.renderer = renderer;\n    this.changeDetectionRef = changeDetectionRef;\n    this._position = 0;\n    this._dimension = 0;\n    this._alwaysHide = false;\n    this._vertical = false;\n    this._scale = 1;\n    this.opacity = 1;\n    this.visibility = 'visible';\n    this.left = '';\n    this.bottom = '';\n    this.height = '';\n    this.width = '';\n    this.eventListeners = [];\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  return _createClass(SliderElementDirective, [{\n    key: \"position\",\n    get: function get() {\n      return this._position;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"dimension\",\n    get: function get() {\n      return this._dimension;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"alwaysHide\",\n    get: function get() {\n      return this._alwaysHide;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"vertical\",\n    get: function get() {\n      return this._vertical;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"scale\",\n    get: function get() {\n      return this._scale;\n    }\n    /**\n     * @param {?} hide\n     * @return {?}\n     */\n\n  }, {\n    key: \"setAlwaysHide\",\n    value: function setAlwaysHide(hide) {\n      this._alwaysHide = hide;\n\n      if (hide) {\n        this.visibility = 'hidden';\n      } else {\n        this.visibility = 'visible';\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.opacity = 0;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.alwaysHide) {\n        return;\n      }\n\n      this.opacity = 1;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      if (this.alwaysHide) {\n        return false;\n      }\n\n      return this.opacity !== 0;\n    }\n    /**\n     * @param {?} vertical\n     * @return {?}\n     */\n\n  }, {\n    key: \"setVertical\",\n    value: function setVertical(vertical) {\n      this._vertical = vertical;\n\n      if (this._vertical) {\n        this.left = '';\n        this.width = '';\n      } else {\n        this.bottom = '';\n        this.height = '';\n      }\n    }\n    /**\n     * @param {?} scale\n     * @return {?}\n     */\n\n  }, {\n    key: \"setScale\",\n    value: function setScale(scale) {\n      this._scale = scale;\n    }\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(pos) {\n      if (this._position !== pos && !this.isRefDestroyed()) {\n        this.changeDetectionRef.markForCheck();\n      }\n\n      this._position = pos;\n\n      if (this._vertical) {\n        this.bottom = Math.round(pos) + 'px';\n      } else {\n        this.left = Math.round(pos) + 'px';\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension() {\n      var\n      /** @type {?} */\n      val = this.getBoundingClientRect();\n\n      if (this.vertical) {\n        this._dimension = (val.bottom - val.top) * this.scale;\n      } else {\n        this._dimension = (val.right - val.left) * this.scale;\n      }\n    }\n    /**\n     * @param {?} dim\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDimension\",\n    value: function setDimension(dim) {\n      if (this._dimension !== dim && !this.isRefDestroyed()) {\n        this.changeDetectionRef.markForCheck();\n      }\n\n      this._dimension = dim;\n\n      if (this._vertical) {\n        this.height = Math.round(dim) + 'px';\n      } else {\n        this.width = Math.round(dim) + 'px';\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getBoundingClientRect\",\n    value: function getBoundingClientRect() {\n      return this.elemRef.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback, debounceInterval) {\n      var\n      /** @type {?} */\n      listener = this.eventListenerHelper.attachEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n      this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n\n  }, {\n    key: \"onPassive\",\n    value: function onPassive(eventName, callback, debounceInterval) {\n      var\n      /** @type {?} */\n      listener = this.eventListenerHelper.attachPassiveEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n      this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?=} eventName\n     * @return {?}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(eventName) {\n      var\n      /** @type {?} */\n      listenersToKeep;\n      var\n      /** @type {?} */\n      listenersToRemove;\n\n      if (!ValueHelper.isNullOrUndefined(eventName)) {\n        listenersToKeep = this.eventListeners.filter(function (event) {\n          return event.eventName !== eventName;\n        });\n        listenersToRemove = this.eventListeners.filter(function (event) {\n          return event.eventName === eventName;\n        });\n      } else {\n        listenersToKeep = [];\n        listenersToRemove = this.eventListeners;\n      }\n\n      var _iterator = _createForOfIteratorHelper(listenersToRemove),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var listener = _step.value;\n          this.eventListenerHelper.detachEventListener(listener);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.eventListeners = listenersToKeep;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isRefDestroyed\",\n    value: function isRefDestroyed() {\n      return ValueHelper.isNullOrUndefined(this.changeDetectionRef) || this.changeDetectionRef['destroyed'];\n    }\n  }]);\n}();\n\nSliderElementDirective.ɵfac = function SliderElementDirective_Factory(t) {\n  return new (t || SliderElementDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nSliderElementDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SliderElementDirective,\n  selectors: [[\"\", \"ng5SliderElement\", \"\"]],\n  hostVars: 12,\n  hostBindings: function SliderElementDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"opacity\", ctx.opacity)(\"visibility\", ctx.visibility)(\"left\", ctx.left)(\"bottom\", ctx.bottom)(\"height\", ctx.height)(\"width\", ctx.width);\n    }\n  }\n});\n/** @nocollapse */\n\nSliderElementDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nSliderElementDirective.propDecorators = {\n  \"opacity\": [{\n    type: HostBinding,\n    args: ['style.opacity']\n  }],\n  \"visibility\": [{\n    type: HostBinding,\n    args: ['style.visibility']\n  }],\n  \"left\": [{\n    type: HostBinding,\n    args: ['style.left']\n  }],\n  \"bottom\": [{\n    type: HostBinding,\n    args: ['style.bottom']\n  }],\n  \"height\": [{\n    type: HostBinding,\n    args: ['style.height']\n  }],\n  \"width\": [{\n    type: HostBinding,\n    args: ['style.width']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderElementDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng5SliderElement]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    opacity: [{\n      type: HostBinding,\n      args: ['style.opacity']\n    }],\n    visibility: [{\n      type: HostBinding,\n      args: ['style.visibility']\n    }],\n    left: [{\n      type: HostBinding,\n      args: ['style.left']\n    }],\n    bottom: [{\n      type: HostBinding,\n      args: ['style.bottom']\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar SliderHandleDirective = /*#__PURE__*/function (_SliderElementDirecti) {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  function SliderHandleDirective(elemRef, renderer, changeDetectionRef) {\n    var _this;\n\n    _classCallCheck(this, SliderHandleDirective);\n\n    _this = _callSuper(this, SliderHandleDirective, [elemRef, renderer, changeDetectionRef]);\n    _this.active = false;\n    _this.role = '';\n    _this.tabindex = '';\n    _this.ariaOrientation = '';\n    _this.ariaLabel = '';\n    _this.ariaLabelledBy = '';\n    _this.ariaValueNow = '';\n    _this.ariaValueText = '';\n    _this.ariaValueMin = '';\n    _this.ariaValueMax = '';\n    return _this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _inherits(SliderHandleDirective, _SliderElementDirecti);\n\n  return _createClass(SliderHandleDirective, [{\n    key: \"focus\",\n    value: function focus() {\n      this.elemRef.nativeElement.focus();\n    }\n  }]);\n}(SliderElementDirective);\n\nSliderHandleDirective.ɵfac = function SliderHandleDirective_Factory(t) {\n  return new (t || SliderHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nSliderHandleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SliderHandleDirective,\n  selectors: [[\"\", \"ng5SliderHandle\", \"\"]],\n  hostVars: 11,\n  hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex)(\"aria-orientation\", ctx.ariaOrientation)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-valuenow\", ctx.ariaValueNow)(\"aria-valuetext\", ctx.ariaValueText)(\"aria-valuemin\", ctx.ariaValueMin)(\"aria-valuemax\", ctx.ariaValueMax);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-active\", ctx.active);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nSliderHandleDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nSliderHandleDirective.propDecorators = {\n  \"active\": [{\n    type: HostBinding,\n    args: ['class.ng5-slider-active']\n  }],\n  \"role\": [{\n    type: HostBinding,\n    args: ['attr.role']\n  }],\n  \"tabindex\": [{\n    type: HostBinding,\n    args: ['attr.tabindex']\n  }],\n  \"ariaOrientation\": [{\n    type: HostBinding,\n    args: ['attr.aria-orientation']\n  }],\n  \"ariaLabel\": [{\n    type: HostBinding,\n    args: ['attr.aria-label']\n  }],\n  \"ariaLabelledBy\": [{\n    type: HostBinding,\n    args: ['attr.aria-labelledby']\n  }],\n  \"ariaValueNow\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuenow']\n  }],\n  \"ariaValueText\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuetext']\n  }],\n  \"ariaValueMin\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuemin']\n  }],\n  \"ariaValueMax\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuemax']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng5SliderHandle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    active: [{\n      type: HostBinding,\n      args: ['class.ng5-slider-active']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    tabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    ariaOrientation: [{\n      type: HostBinding,\n      args: ['attr.aria-orientation']\n    }],\n    ariaLabel: [{\n      type: HostBinding,\n      args: ['attr.aria-label']\n    }],\n    ariaLabelledBy: [{\n      type: HostBinding,\n      args: ['attr.aria-labelledby']\n    }],\n    ariaValueNow: [{\n      type: HostBinding,\n      args: ['attr.aria-valuenow']\n    }],\n    ariaValueText: [{\n      type: HostBinding,\n      args: ['attr.aria-valuetext']\n    }],\n    ariaValueMin: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemin']\n    }],\n    ariaValueMax: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemax']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar SliderLabelDirective = /*#__PURE__*/function (_SliderElementDirecti2) {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  function SliderLabelDirective(elemRef, renderer, changeDetectionRef) {\n    var _this2;\n\n    _classCallCheck(this, SliderLabelDirective);\n\n    _this2 = _callSuper(this, SliderLabelDirective, [elemRef, renderer, changeDetectionRef]);\n    _this2._value = null;\n    return _this2;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _inherits(SliderLabelDirective, _SliderElementDirecti2);\n\n  return _createClass(SliderLabelDirective, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var\n      /** @type {?} */\n      recalculateDimension = false;\n\n      if (!this.alwaysHide && (ValueHelper.isNullOrUndefined(this.value) || this.value.length !== value.length || this.value.length > 0 && this.dimension === 0)) {\n        recalculateDimension = true;\n      }\n\n      this._value = value;\n      this.elemRef.nativeElement.innerHTML = value; // Update dimension only when length of the label have changed\n\n      if (recalculateDimension) {\n        this.calculateDimension();\n      }\n    }\n  }]);\n}(SliderElementDirective);\n\nSliderLabelDirective.ɵfac = function SliderLabelDirective_Factory(t) {\n  return new (t || SliderLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nSliderLabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SliderLabelDirective,\n  selectors: [[\"\", \"ng5SliderLabel\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nSliderLabelDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng5SliderLabel]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar Tick = /*#__PURE__*/_createClass(function Tick() {\n  _classCallCheck(this, Tick);\n\n  this.selected = false;\n  this.style = {};\n  this.tooltip = null;\n  this.tooltipPlacement = null;\n  this.value = null;\n  this.valueTooltip = null;\n  this.valueTooltipPlacement = null;\n  this.legend = null;\n});\n\nvar Dragging = /*#__PURE__*/_createClass(function Dragging() {\n  _classCallCheck(this, Dragging);\n\n  this.active = false;\n  this.value = 0;\n  this.difference = 0;\n  this.position = 0;\n  this.lowLimit = 0;\n  this.highLimit = 0;\n});\n\nvar ModelValues = /*#__PURE__*/function () {\n  function ModelValues() {\n    _classCallCheck(this, ModelValues);\n  }\n\n  return _createClass(ModelValues, null, [{\n    key: \"compare\",\n    value:\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    function compare(x, y) {\n      if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n        return false;\n      }\n\n      if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n        return false;\n      }\n\n      return x.value === y.value && x.highValue === y.highValue;\n    }\n  }]);\n}();\n\nvar ModelChange = /*#__PURE__*/function (_ModelValues) {\n  function ModelChange() {\n    _classCallCheck(this, ModelChange);\n\n    return _callSuper(this, ModelChange, arguments);\n  }\n\n  _inherits(ModelChange, _ModelValues);\n\n  return _createClass(ModelChange, null, [{\n    key: \"compare\",\n    value:\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    function compare(x, y) {\n      if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n        return false;\n      }\n\n      if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n        return false;\n      }\n\n      return x.value === y.value && x.highValue === y.highValue && x.forceChange === y.forceChange;\n    }\n  }]);\n}(ModelValues);\n\nvar NG5_SLIDER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(function () {\n    return SliderComponent;\n  }),\n  multi: true\n};\n\nvar SliderComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} renderer\n   * @param {?} elementRef\n   * @param {?} changeDetectionRef\n   * @param {?} zone\n   */\n  function SliderComponent(renderer, elementRef, changeDetectionRef, zone) {\n    _classCallCheck(this, SliderComponent);\n\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.changeDetectionRef = changeDetectionRef;\n    this.zone = zone; // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n\n    this.value = null; // Output for low value slider to support two-way bindings\n\n    this.valueChange = new EventEmitter(); // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n\n    this.highValue = null; // Output for high value slider to support two-way bindings\n\n    this.highValueChange = new EventEmitter(); // An object with all the other options of the slider.\n    // Each option can be updated at runtime and the slider will automatically be re-rendered.\n\n    this.options = new Options(); // Event emitted when user starts interaction with the slider\n\n    this.userChangeStart = new EventEmitter(); // Event emitted on each change coming from user interaction\n\n    this.userChange = new EventEmitter(); // Event emitted when user finishes interaction with the slider\n\n    this.userChangeEnd = new EventEmitter();\n    this.initHasRun = false;\n    this.inputModelChangeSubject = new Subject();\n    this.inputModelChangeSubscription = null;\n    this.outputModelChangeSubject = new Subject();\n    this.outputModelChangeSubscription = null;\n    this.viewLowValue = null;\n    this.viewHighValue = null;\n    this.viewOptions = new Options();\n    this.handleHalfDimension = 0;\n    this.maxHandlePosition = 0;\n    this.currentTrackingPointer = null;\n    this.currentFocusPointer = null;\n    this.firstKeyDown = false;\n    this.touchId = null;\n    this.dragging = new Dragging(); // Host element class bindings\n\n    this.sliderElementVerticalClass = false;\n    this.sliderElementAnimateClass = false;\n    this.sliderElementDisabledAttr = null;\n    this.barStyle = {};\n    this.minPointerStyle = {};\n    this.maxPointerStyle = {};\n    this.fullBarTransparentClass = false;\n    this.selectionBarDraggableClass = false;\n    this.ticksUnderValuesClass = false;\n    this.intermediateTicks = false;\n    this.ticks = [];\n    this.eventListenerHelper = null;\n    this.onMoveEventListener = null;\n    this.onEndEventListener = null;\n    this.resizeObserver = null;\n    this.onTouchedCallback = null;\n    this.onChangeCallback = null;\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n  /**\n   * @param {?} manualRefresh\n   * @return {?}\n   */\n\n\n  return _createClass(SliderComponent, [{\n    key: \"manualRefresh\",\n    set: function set(manualRefresh) {\n      var _this3 = this;\n\n      this.unsubscribeManualRefresh();\n      this.manualRefreshSubscription = manualRefresh.subscribe(function () {\n        setTimeout(function () {\n          return _this3.calculateViewDimensionsAndDetectChanges();\n        });\n      });\n    }\n    /**\n     * @param {?} triggerFocus\n     * @return {?}\n     */\n\n  }, {\n    key: \"triggerFocus\",\n    set: function set(triggerFocus) {\n      var _this4 = this;\n\n      this.unsubscribeTriggerFocus();\n      this.triggerFocusSubscription = triggerFocus.subscribe(function (pointerType) {\n        _this4.focusPointer(pointerType);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"range\",\n    get: function get() {\n      return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"showTicks\",\n    get: function get() {\n      return this.viewOptions.showTicks;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.viewOptions = new Options();\n      Object.assign(this.viewOptions, this.options); // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n      // because these two settings are set through @HostBinding and Angular change detection\n      // mechanism doesn't like them changing in ngAfterViewInit()\n\n      this.updateDisabledState();\n      this.updateVerticalState();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.applyOptions();\n      this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n      this.subscribeOutputModelChangeSubject(this.viewOptions.outputEventsInterval); // Once we apply options, we need to normalise model values for the first time\n\n      this.renormaliseModelValues();\n      this.viewLowValue = this.modelValueToViewValue(this.value);\n\n      if (this.range) {\n        this.viewHighValue = this.modelValueToViewValue(this.highValue);\n      } else {\n        this.viewHighValue = null;\n      }\n\n      this.updateVerticalState(); // need to run this again to cover changes to slider elements\n\n      this.manageElementsStyle();\n      this.updateDisabledState();\n      this.calculateViewDimensions();\n      this.addAccessibility();\n      this.updateCeilLabel();\n      this.updateFloorLabel();\n      this.initHandles();\n      this.manageEventsBindings();\n      this.subscribeResizeObserver();\n      this.initHasRun = true; // Run change detection manually to resolve some issues when init procedure changes values used in the view\n\n      if (!this.isRefDestroyed()) {\n        this.changeDetectionRef.detectChanges();\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      // Always apply options first\n      if (!ValueHelper.isNullOrUndefined(changes[\"options\"])) {\n        this.onChangeOptions();\n      } // Then value changes\n\n\n      if (!ValueHelper.isNullOrUndefined(changes[\"value\"]) || !ValueHelper.isNullOrUndefined(changes[\"highValue\"])) {\n        this.inputModelChangeSubject.next({\n          value: this.value,\n          highValue: this.highValue,\n          forceChange: false,\n          internalChange: false\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unbindEvents();\n      this.unsubscribeResizeObserver();\n      this.unsubscribeInputModelChangeSubject();\n      this.unsubscribeOutputModelChangeSubject();\n      this.unsubscribeManualRefresh();\n      this.unsubscribeTriggerFocus();\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(obj) {\n      if (obj instanceof Array) {\n        this.value = obj[0];\n        this.highValue = obj[1];\n      } else {\n        this.value = obj;\n      } // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n\n\n      this.inputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: false,\n        internalChange: false\n      });\n    }\n    /**\n     * @param {?} onChangeCallback\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(onChangeCallback) {\n      this.onChangeCallback = onChangeCallback;\n    }\n    /**\n     * @param {?} onTouchedCallback\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(onTouchedCallback) {\n      this.onTouchedCallback = onTouchedCallback;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.viewOptions.disabled = isDisabled;\n      this.updateDisabledState();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onResize\",\n    value: function onResize(event) {\n      this.calculateViewDimensionsAndDetectChanges();\n    }\n    /**\n     * @param {?=} interval\n     * @return {?}\n     */\n\n  }, {\n    key: \"subscribeInputModelChangeSubject\",\n    value: function subscribeInputModelChangeSubject(interval) {\n      var _this5 = this;\n\n      this.inputModelChangeSubscription = this.inputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare), // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n      // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n      filter(function (modelChange) {\n        return !modelChange.forceChange && !modelChange.internalChange;\n      }), !ValueHelper.isNullOrUndefined(interval) ? throttleTime(interval, undefined, {\n        leading: true,\n        trailing: true\n      }) : tap(function () {}) // no-op\n      ).subscribe(function (modelChange) {\n        return _this5.applyInputModelChange(modelChange);\n      });\n    }\n    /**\n     * @param {?=} interval\n     * @return {?}\n     */\n\n  }, {\n    key: \"subscribeOutputModelChangeSubject\",\n    value: function subscribeOutputModelChangeSubject(interval) {\n      var _this6 = this;\n\n      this.outputModelChangeSubscription = this.outputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare), !ValueHelper.isNullOrUndefined(interval) ? throttleTime(interval, undefined, {\n        leading: true,\n        trailing: true\n      }) : tap(function () {}) // no-op\n      ).subscribe(function (modelChange) {\n        return _this6.publishOutputModelChange(modelChange);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"subscribeResizeObserver\",\n    value: function subscribeResizeObserver() {\n      var _this7 = this;\n\n      if (CompatibilityHelper.isResizeObserverAvailable()) {\n        this.resizeObserver = new ResizeObserver(function () {\n          return _this7.calculateViewDimensionsAndDetectChanges();\n        });\n        this.resizeObserver.observe(this.elementRef.nativeElement);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeResizeObserver\",\n    value: function unsubscribeResizeObserver() {\n      if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeOnMove\",\n    value: function unsubscribeOnMove() {\n      if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n        this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n        this.onMoveEventListener = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeOnEnd\",\n    value: function unsubscribeOnEnd() {\n      if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n        this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n        this.onEndEventListener = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeInputModelChangeSubject\",\n    value: function unsubscribeInputModelChangeSubject() {\n      if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n        this.inputModelChangeSubscription.unsubscribe();\n        this.inputModelChangeSubscription = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeOutputModelChangeSubject\",\n    value: function unsubscribeOutputModelChangeSubject() {\n      if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n        this.outputModelChangeSubscription.unsubscribe();\n        this.outputModelChangeSubscription = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeManualRefresh\",\n    value: function unsubscribeManualRefresh() {\n      if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n        this.manualRefreshSubscription.unsubscribe();\n        this.manualRefreshSubscription = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeTriggerFocus\",\n    value: function unsubscribeTriggerFocus() {\n      if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n        this.triggerFocusSubscription.unsubscribe();\n        this.triggerFocusSubscription = null;\n      }\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n\n  }, {\n    key: \"getPointerElement\",\n    value: function getPointerElement(pointerType) {\n      if (pointerType === PointerType.Min) {\n        return this.minHandleElement;\n      } else if (pointerType === PointerType.Max) {\n        return this.maxHandleElement;\n      }\n\n      return null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getCurrentTrackingValue\",\n    value: function getCurrentTrackingValue() {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        return this.viewLowValue;\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        return this.viewHighValue;\n      }\n\n      return null;\n    }\n    /**\n     * @param {?} modelValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"modelValueToViewValue\",\n    value: function modelValueToViewValue(modelValue) {\n      if (ValueHelper.isNullOrUndefined(modelValue)) {\n        return NaN;\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n        return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n      }\n\n      return +modelValue;\n    }\n    /**\n     * @param {?} viewValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"viewValueToModelValue\",\n    value: function viewValueToModelValue(viewValue) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n        return this.getStepValue(viewValue);\n      }\n\n      return viewValue;\n    }\n    /**\n     * @param {?} sliderValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"getStepValue\",\n    value: function getStepValue(sliderValue) {\n      var\n      /** @type {?} */\n      step = this.viewOptions.stepsArray[sliderValue];\n      return !ValueHelper.isNullOrUndefined(step) ? step.value : NaN;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyViewChange\",\n    value: function applyViewChange() {\n      this.value = this.viewValueToModelValue(this.viewLowValue);\n\n      if (this.range) {\n        this.highValue = this.viewValueToModelValue(this.viewHighValue);\n      }\n\n      this.outputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        userEventInitiated: true,\n        forceChange: false\n      }); // At this point all changes are applied and outputs are emitted, so we should be done.\n      // However, input changes are communicated in different stream and we need to be ready to\n      // act on the next input change even if it is exactly the same as last input change.\n      // Therefore, we send a special event to reset the stream.\n\n      this.inputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: false,\n        internalChange: true\n      });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyInputModelChange\",\n    value: function applyInputModelChange(modelChange) {\n      var\n      /** @type {?} */\n      normalisedModelChange = this.normaliseModelValues(modelChange); // If normalised model change is different, apply the change to the model values\n\n      var\n      /** @type {?} */\n      normalisationChange = !ModelValues.compare(modelChange, normalisedModelChange);\n\n      if (normalisationChange) {\n        this.value = normalisedModelChange.value;\n        this.highValue = normalisedModelChange.highValue;\n      }\n\n      this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n\n      if (this.range) {\n        this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n      } else {\n        this.viewHighValue = null;\n      }\n\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n\n      if (this.range) {\n        this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      }\n\n      this.updateSelectionBar();\n      this.updateTicksScale();\n      this.updateAriaAttributes();\n\n      if (this.range) {\n        this.updateCombinedLabel();\n      } // At the end, we need to communicate the model change to the outputs as well\n      // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n\n\n      this.outputModelChangeSubject.next({\n        value: normalisedModelChange.value,\n        highValue: normalisedModelChange.highValue,\n        forceChange: normalisationChange,\n        userEventInitiated: false\n      });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n\n  }, {\n    key: \"publishOutputModelChange\",\n    value: function publishOutputModelChange(modelChange) {\n      var _this8 = this;\n\n      var\n      /** @type {?} */\n      emitOutputs = function emitOutputs() {\n        _this8.valueChange.emit(modelChange.value);\n\n        if (_this8.range) {\n          _this8.highValueChange.emit(modelChange.highValue);\n        }\n\n        if (!ValueHelper.isNullOrUndefined(_this8.onChangeCallback)) {\n          if (_this8.range) {\n            _this8.onChangeCallback([modelChange.value, modelChange.highValue]);\n          } else {\n            _this8.onChangeCallback(modelChange.value);\n          }\n        }\n\n        if (!ValueHelper.isNullOrUndefined(_this8.onTouchedCallback)) {\n          if (_this8.range) {\n            _this8.onTouchedCallback([modelChange.value, modelChange.highValue]);\n          } else {\n            _this8.onTouchedCallback(modelChange.value);\n          }\n        }\n      };\n\n      if (modelChange.userEventInitiated) {\n        // If this change was initiated by a user event, we can emit outputs in the same tick\n        emitOutputs();\n        this.userChange.emit(this.getChangeContext());\n      } else {\n        // But, if the change was initated by something else like a change in input bindings,\n        // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n        setTimeout(function () {\n          emitOutputs();\n        });\n      }\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"normaliseModelValues\",\n    value: function normaliseModelValues(input) {\n      var\n      /** @type {?} */\n      normalisedInput = new ModelValues();\n      normalisedInput.value = input.value;\n      normalisedInput.highValue = input.highValue;\n\n      if (this.viewOptions.enforceStep) {\n        normalisedInput.value = this.roundStep(normalisedInput.value);\n\n        if (this.range) {\n          normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n        }\n      } // Don't attempt to normalise further when using steps array (steps may be out of order and that is perfectly fine)\n\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) || !this.viewOptions.enforceRange) {\n        return normalisedInput;\n      }\n\n      normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n\n      if (this.range) {\n        normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n      } // Make sure that range slider invariant (value <= highValue) is always satisfied\n\n\n      if (this.range && input.value > input.highValue) {\n        // We know that both values are now clamped correctly, they may just be in the wrong order\n        // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n        if (this.viewOptions.noSwitching) {\n          normalisedInput.value = normalisedInput.highValue;\n        } else {\n          var\n          /** @type {?} */\n          tempValue = input.value;\n          normalisedInput.value = input.highValue;\n          normalisedInput.highValue = tempValue;\n        }\n      }\n\n      return normalisedInput;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"renormaliseModelValues\",\n    value: function renormaliseModelValues() {\n      var\n      /** @type {?} */\n      previousModelValues = {\n        value: this.value,\n        highValue: this.highValue\n      };\n      var\n      /** @type {?} */\n      normalisedModelValues = this.normaliseModelValues(previousModelValues);\n\n      if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n        this.value = normalisedModelValues.value;\n        this.highValue = normalisedModelValues.highValue;\n        this.outputModelChangeSubject.next({\n          value: this.value,\n          highValue: this.highValue,\n          forceChange: true,\n          userEventInitiated: false\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onChangeOptions\",\n    value: function onChangeOptions() {\n      if (!this.initHasRun) {\n        return;\n      }\n\n      var\n      /** @type {?} */\n      previousInputEventsInterval = this.viewOptions.inputEventsInterval;\n      var\n      /** @type {?} */\n      previousOutputEventsInterval = this.viewOptions.outputEventsInterval;\n      this.applyOptions();\n\n      if (previousInputEventsInterval !== this.viewOptions.inputEventsInterval) {\n        this.unsubscribeInputModelChangeSubject();\n        this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n      }\n\n      if (previousOutputEventsInterval !== this.viewOptions.outputEventsInterval) {\n        this.unsubscribeInputModelChangeSubject();\n        this.subscribeInputModelChangeSubject(this.viewOptions.outputEventsInterval);\n      } // With new options, we need to re-normalise model values if necessary\n\n\n      this.renormaliseModelValues();\n      this.viewLowValue = this.modelValueToViewValue(this.value);\n\n      if (this.range) {\n        this.viewHighValue = this.modelValueToViewValue(this.highValue);\n      } else {\n        this.viewHighValue = null;\n      }\n\n      this.resetSlider();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyOptions\",\n    value: function applyOptions() {\n      this.viewOptions = new Options();\n      Object.assign(this.viewOptions, this.options);\n      this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n      this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n\n      if (this.viewOptions.draggableRangeOnly) {\n        this.viewOptions.draggableRange = true;\n      }\n\n      this.viewOptions.showTicks = this.viewOptions.showTicks || this.viewOptions.showTicksValues || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n\n      if (this.viewOptions.showTicks && (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n        this.intermediateTicks = true;\n      }\n\n      this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar || this.viewOptions.showSelectionBarEnd || !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n        this.applyStepsArrayOptions();\n      } else {\n        this.applyFloorCeilOptions();\n      }\n\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n        this.viewOptions.combineLabels = function (minValue, maxValue) {\n          return minValue + ' - ' + maxValue;\n        };\n      }\n\n      if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n        throw Error('Can\\'t use floor=0 with logarithmic scale');\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyStepsArrayOptions\",\n    value: function applyStepsArrayOptions() {\n      var _this9 = this;\n\n      this.viewOptions.floor = 0;\n      this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n      this.viewOptions.step = 1;\n\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n        this.viewOptions.translate = function (modelValue) {\n          if (_this9.viewOptions.bindIndexForStepsArray) {\n            return String(_this9.getStepValue(modelValue));\n          }\n\n          return String(modelValue);\n        };\n      }\n\n      this.viewOptions.getLegend = function (index) {\n        var\n        /** @type {?} */\n        step = _this9.viewOptions.stepsArray[index];\n        return step.legend;\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyFloorCeilOptions\",\n    value: function applyFloorCeilOptions() {\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n        this.viewOptions.step = 1;\n      } else {\n        this.viewOptions.step = +this.viewOptions.step;\n\n        if (this.viewOptions.step <= 0) {\n          this.viewOptions.step = 1;\n        }\n      }\n\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) || ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n        throw Error('floor and ceil options must be supplied');\n      }\n\n      this.viewOptions.ceil = +this.viewOptions.ceil;\n      this.viewOptions.floor = +this.viewOptions.floor;\n\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n        this.viewOptions.translate = function (value) {\n          return String(value);\n        };\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"resetSlider\",\n    value: function resetSlider() {\n      this.manageElementsStyle();\n      this.addAccessibility();\n      this.updateCeilLabel();\n      this.updateFloorLabel();\n      this.unbindEvents();\n      this.manageEventsBindings();\n      this.updateDisabledState();\n      this.calculateViewDimensions();\n      this.refocusPointerIfNeeded();\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n\n  }, {\n    key: \"focusPointer\",\n    value: function focusPointer(pointerType) {\n      // If not supplied, use min pointer as default\n      if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n        pointerType = PointerType.Min;\n      }\n\n      if (pointerType === PointerType.Min) {\n        this.minHandleElement.focus();\n      } else if (this.range && pointerType === PointerType.Max) {\n        this.maxHandleElement.focus();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refocusPointerIfNeeded\",\n    value: function refocusPointerIfNeeded() {\n      if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n        this.onPointerFocus(this.currentFocusPointer);\n        var\n        /** @type {?} */\n        element = this.getPointerElement(this.currentFocusPointer);\n        element.focus();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"manageElementsStyle\",\n    value: function manageElementsStyle() {\n      var _this10 = this;\n\n      this.updateScale();\n      this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n      this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n      var\n      /** @type {?} */\n      hideLabelsForTicks = this.viewOptions.showTicksValues && !this.intermediateTicks;\n      this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n      this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n      this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n      this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n      this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n      this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n      this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n      this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n      this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n\n      if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n        this.updateVerticalState(); // The above change in host component class will not be applied until the end of this cycle\n        // However, functions calculating the slider position expect the slider to be already styled as vertical\n        // So as a workaround, we need to reset the slider once again to compute the correct values\n\n        setTimeout(function () {\n          _this10.resetSlider();\n        });\n      } // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n      // after all is properly set up\n\n\n      if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n        setTimeout(function () {\n          _this10.sliderElementAnimateClass = _this10.viewOptions.animate;\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"manageEventsBindings\",\n    value: function manageEventsBindings() {\n      if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n        this.unbindEvents();\n      } else {\n        this.bindEvents();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateDisabledState\",\n    value: function updateDisabledState() {\n      this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateVerticalState\",\n    value: function updateVerticalState() {\n      this.sliderElementVerticalClass = this.viewOptions.vertical;\n\n      var _iterator2 = _createForOfIteratorHelper(this.getAllSliderElements()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var element = _step2.value;\n\n          // This is also called before ngAfterInit, so need to check that view child bindings work\n          if (!ValueHelper.isNullOrUndefined(element)) {\n            element.setVertical(this.viewOptions.vertical);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateScale\",\n    value: function updateScale() {\n      var _iterator3 = _createForOfIteratorHelper(this.getAllSliderElements()),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var element = _step3.value;\n          element.setScale(this.viewOptions.scale);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAllSliderElements\",\n    value: function getAllSliderElements() {\n      return [this.leftOuterSelectionBarElement, this.rightOuterSelectionBarElement, this.fullBarElement, this.selectionBarElement, this.minHandleElement, this.maxHandleElement, this.floorLabelElement, this.ceilLabelElement, this.minHandleLabelElement, this.maxHandleLabelElement, this.combinedLabelElement, this.ticksElement];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"initHandles\",\n    value: function initHandles() {\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n      /*\n         the order here is important since the selection bar should be\n         updated after the high handle but before the combined label\n         */\n\n      if (this.range) {\n        this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      }\n\n      this.updateSelectionBar();\n\n      if (this.range) {\n        this.updateCombinedLabel();\n      }\n\n      this.updateTicksScale();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"addAccessibility\",\n    value: function addAccessibility() {\n      this.updateAriaAttributes();\n      this.minHandleElement.role = 'slider';\n\n      if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n        this.minHandleElement.tabindex = '0';\n      } else {\n        this.minHandleElement.tabindex = '';\n      }\n\n      if (this.viewOptions.vertical) {\n        this.minHandleElement.ariaOrientation = 'vertical';\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n        this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n        this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n      }\n\n      if (this.range) {\n        this.maxHandleElement.role = 'slider';\n\n        if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n          this.maxHandleElement.tabindex = '0';\n        } else {\n          this.maxHandleElement.tabindex = '';\n        }\n\n        this.maxHandleElement.ariaOrientation = this.viewOptions.vertical ? 'vertical' : 'horizontal';\n\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n          this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n        } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n          this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateAriaAttributes\",\n    value: function updateAriaAttributes() {\n      this.minHandleElement.ariaValueNow = (+this.value).toString();\n      this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n      this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n      this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n\n      if (this.range) {\n        this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n        this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n        this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n        this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"calculateViewDimensions\",\n    value: function calculateViewDimensions() {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n        this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n      } else {\n        this.minHandleElement.calculateDimension();\n      }\n\n      var\n      /** @type {?} */\n      handleWidth = this.minHandleElement.dimension;\n      this.handleHalfDimension = handleWidth / 2;\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n        this.fullBarElement.setDimension(this.viewOptions.barDimension);\n      } else {\n        this.fullBarElement.calculateDimension();\n      }\n\n      this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n\n      if (this.initHasRun) {\n        this.updateFloorLabel();\n        this.updateCeilLabel();\n        this.initHandles();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"calculateViewDimensionsAndDetectChanges\",\n    value: function calculateViewDimensionsAndDetectChanges() {\n      this.calculateViewDimensions();\n\n      if (!this.isRefDestroyed()) {\n        this.changeDetectionRef.detectChanges();\n      }\n    }\n    /**\n     * If the slider reference is already destroyed\n     * @return {?} boolean - true if ref is destroyed\n     */\n\n  }, {\n    key: \"isRefDestroyed\",\n    value: function isRefDestroyed() {\n      return this.changeDetectionRef['destroyed'];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateTicksScale\",\n    value: function updateTicksScale() {\n      var _this11 = this;\n\n      if (!this.viewOptions.showTicks) {\n        return;\n      }\n\n      var\n      /** @type {?} */\n      ticksArray = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray) ? this.viewOptions.ticksArray : this.getTicksArray();\n      var\n      /** @type {?} */\n      translate = this.viewOptions.vertical ? 'translateY' : 'translateX';\n\n      if (this.viewOptions.rightToLeft) {\n        ticksArray.reverse();\n      }\n\n      var\n      /** @type {?} */\n      newTicks = ticksArray.map(function (value) {\n        var\n        /** @type {?} */\n        position = _this11.valueToPosition(value);\n\n        if (_this11.viewOptions.vertical) {\n          position = _this11.maxHandlePosition - position;\n        }\n\n        var\n        /** @type {?} */\n        translation = translate + '(' + Math.round(position) + 'px)';\n        var\n        /** @type {?} */\n        tick = new Tick();\n        tick.selected = _this11.isTickSelected(value);\n        tick.style = {\n          '-webkit-transform': translation,\n          '-moz-transform': translation,\n          '-o-transform': translation,\n          '-ms-transform': translation,\n          transform: translation\n        };\n\n        if (tick.selected && !ValueHelper.isNullOrUndefined(_this11.viewOptions.getSelectionBarColor)) {\n          tick.style['background-color'] = _this11.getSelectionBarColor();\n        }\n\n        if (!tick.selected && !ValueHelper.isNullOrUndefined(_this11.viewOptions.getTickColor)) {\n          tick.style['background-color'] = _this11.getTickColor(value);\n        }\n\n        if (!ValueHelper.isNullOrUndefined(_this11.viewOptions.ticksTooltip)) {\n          tick.tooltip = _this11.viewOptions.ticksTooltip(value);\n          tick.tooltipPlacement = _this11.viewOptions.vertical ? 'right' : 'top';\n        }\n\n        if (_this11.viewOptions.showTicksValues && value % _this11.viewOptions.tickValueStep === 0) {\n          tick.value = _this11.getDisplayValue(value, LabelType.TickValue);\n\n          if (!ValueHelper.isNullOrUndefined(_this11.viewOptions.ticksValuesTooltip)) {\n            tick.valueTooltip = _this11.viewOptions.ticksValuesTooltip(value);\n            tick.valueTooltipPlacement = _this11.viewOptions.vertical ? 'right' : 'top';\n          }\n        }\n\n        if (!ValueHelper.isNullOrUndefined(_this11.viewOptions.getLegend)) {\n          var\n          /** @type {?} */\n          legend = _this11.viewOptions.getLegend(value);\n\n          if (!ValueHelper.isNullOrUndefined(legend)) {\n            tick.legend = legend;\n          }\n        }\n\n        return tick;\n      }); // We should avoid re-creating the ticks array if possible\n      // This both improves performance and makes CSS animations work correctly\n\n      if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n        for (var\n        /** @type {?} */\n        i = 0; i < newTicks.length; ++i) {\n          Object.assign(this.ticks[i], newTicks[i]);\n        }\n      } else {\n        this.ticks = newTicks;\n      }\n\n      if (!this.isRefDestroyed()) {\n        this.changeDetectionRef.detectChanges();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getTicksArray\",\n    value: function getTicksArray() {\n      var\n      /** @type {?} */\n      step = !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) ? this.viewOptions.tickStep : this.viewOptions.step;\n      var\n      /** @type {?} */\n      ticksArray = [];\n\n      for (var\n      /** @type {?} */\n      value = this.viewOptions.floor; value <= this.viewOptions.ceil; value += step) {\n        ticksArray.push(value);\n      }\n\n      return ticksArray;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"isTickSelected\",\n    value: function isTickSelected(value) {\n      if (!this.range) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n          var\n          /** @type {?} */\n          center = this.viewOptions.showSelectionBarFromValue;\n\n          if (this.viewLowValue > center && value >= center && value <= this.viewLowValue) {\n            return true;\n          } else if (this.viewLowValue < center && value <= center && value >= this.viewLowValue) {\n            return true;\n          }\n        } else if (this.viewOptions.showSelectionBarEnd) {\n          if (value >= this.viewLowValue) {\n            return true;\n          }\n        } else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n          return true;\n        }\n      }\n\n      if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateFloorLabel\",\n    value: function updateFloorLabel() {\n      if (!this.floorLabelElement.alwaysHide) {\n        this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n        this.floorLabelElement.calculateDimension();\n        var\n        /** @type {?} */\n        position = this.viewOptions.rightToLeft ? this.fullBarElement.dimension - this.floorLabelElement.dimension : 0;\n        this.floorLabelElement.setPosition(position);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateCeilLabel\",\n    value: function updateCeilLabel() {\n      if (!this.ceilLabelElement.alwaysHide) {\n        this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n        this.ceilLabelElement.calculateDimension();\n        var\n        /** @type {?} */\n        position = this.viewOptions.rightToLeft ? 0 : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n        this.ceilLabelElement.setPosition(position);\n      }\n    }\n    /**\n     * @param {?} which\n     * @param {?} newPos\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateHandles\",\n    value: function updateHandles(which, newPos) {\n      if (which === PointerType.Min) {\n        this.updateLowHandle(newPos);\n      } else if (which === PointerType.Max) {\n        this.updateHighHandle(newPos);\n      }\n\n      this.updateSelectionBar();\n      this.updateTicksScale();\n\n      if (this.range) {\n        this.updateCombinedLabel();\n      }\n    }\n    /**\n     * @param {?} labelType\n     * @param {?} newPos\n     * @return {?}\n     */\n\n  }, {\n    key: \"getHandleLabelPos\",\n    value: function getHandleLabelPos(labelType, newPos) {\n      var\n      /** @type {?} */\n      labelDimension = labelType === PointerType.Min ? this.minHandleLabelElement.dimension : this.maxHandleLabelElement.dimension;\n      var\n      /** @type {?} */\n      nearHandlePos = newPos - labelDimension / 2 + this.handleHalfDimension;\n      var\n      /** @type {?} */\n      endOfBarPos = this.fullBarElement.dimension - labelDimension;\n\n      if (!this.viewOptions.boundPointerLabels) {\n        return nearHandlePos;\n      }\n\n      if (this.viewOptions.rightToLeft && labelType === PointerType.Min || !this.viewOptions.rightToLeft && labelType === PointerType.Max) {\n        return Math.min(nearHandlePos, endOfBarPos);\n      } else {\n        return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n      }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateLowHandle\",\n    value: function updateLowHandle(newPos) {\n      this.minHandleElement.setPosition(newPos);\n      this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n      this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n        this.minPointerStyle = {\n          backgroundColor: this.getPointerColor(PointerType.Min)\n        };\n      }\n\n      if (this.viewOptions.autoHideLimitLabels) {\n        this.updateFloorAndCeilLabelsVisibility();\n      }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateHighHandle\",\n    value: function updateHighHandle(newPos) {\n      this.maxHandleElement.setPosition(newPos);\n      this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n      this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n        this.maxPointerStyle = {\n          backgroundColor: this.getPointerColor(PointerType.Max)\n        };\n      }\n\n      if (this.viewOptions.autoHideLimitLabels) {\n        this.updateFloorAndCeilLabelsVisibility();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateFloorAndCeilLabelsVisibility\",\n    value: function updateFloorAndCeilLabelsVisibility() {\n      // Show based only on hideLimitLabels if pointer labels are hidden\n      if (this.viewOptions.hidePointerLabels) {\n        return;\n      }\n\n      var\n      /** @type {?} */\n      floorLabelHidden = false;\n      var\n      /** @type {?} */\n      ceilLabelHidden = false;\n      var\n      /** @type {?} */\n      isMinLabelAtFloor = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n      var\n      /** @type {?} */\n      isMinLabelAtCeil = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n      var\n      /** @type {?} */\n      isMaxLabelAtCeil = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n      var\n      /** @type {?} */\n      isCombinedLabelAtFloor = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n      var\n      /** @type {?} */\n      isCombinedLabelAtCeil = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n\n      if (isMinLabelAtFloor) {\n        floorLabelHidden = true;\n        this.floorLabelElement.hide();\n      } else {\n        floorLabelHidden = false;\n        this.floorLabelElement.show();\n      }\n\n      if (isMinLabelAtCeil) {\n        ceilLabelHidden = true;\n        this.ceilLabelElement.hide();\n      } else {\n        ceilLabelHidden = false;\n        this.ceilLabelElement.show();\n      }\n\n      if (this.range) {\n        var\n        /** @type {?} */\n        hideCeil = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n        var\n        /** @type {?} */\n        hideFloor = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n\n        if (hideCeil) {\n          this.ceilLabelElement.hide();\n        } else if (!ceilLabelHidden) {\n          this.ceilLabelElement.show();\n        } // Hide or show floor label\n\n\n        if (hideFloor) {\n          this.floorLabelElement.hide();\n        } else if (!floorLabelHidden) {\n          this.floorLabelElement.show();\n        }\n      }\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n\n  }, {\n    key: \"isLabelBelowFloorLabel\",\n    value: function isLabelBelowFloorLabel(label) {\n      var\n      /** @type {?} */\n      pos = label.position;\n      var\n      /** @type {?} */\n      dim = label.dimension;\n      var\n      /** @type {?} */\n      floorPos = this.floorLabelElement.position;\n      var\n      /** @type {?} */\n      floorDim = this.floorLabelElement.dimension;\n      return this.viewOptions.rightToLeft ? pos + dim >= floorPos - 2 : pos <= floorPos + floorDim + 2;\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n\n  }, {\n    key: \"isLabelAboveCeilLabel\",\n    value: function isLabelAboveCeilLabel(label) {\n      var\n      /** @type {?} */\n      pos = label.position;\n      var\n      /** @type {?} */\n      dim = label.dimension;\n      var\n      /** @type {?} */\n      ceilPos = this.ceilLabelElement.position;\n      var\n      /** @type {?} */\n      ceilDim = this.ceilLabelElement.dimension;\n      return this.viewOptions.rightToLeft ? pos <= ceilPos + ceilDim + 2 : pos + dim >= ceilPos - 2;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateSelectionBar\",\n    value: function updateSelectionBar() {\n      var\n      /** @type {?} */\n      position = 0;\n      var\n      /** @type {?} */\n      dimension = 0;\n      var\n      /** @type {?} */\n      isSelectionBarFromRight = this.viewOptions.rightToLeft ? !this.viewOptions.showSelectionBarEnd : this.viewOptions.showSelectionBarEnd;\n      var\n      /** @type {?} */\n      positionForRange = this.viewOptions.rightToLeft ? this.maxHandleElement.position + this.handleHalfDimension : this.minHandleElement.position + this.handleHalfDimension;\n\n      if (this.range) {\n        dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n        position = positionForRange;\n      } else {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n          var\n          /** @type {?} */\n          center = this.viewOptions.showSelectionBarFromValue;\n          var\n          /** @type {?} */\n          centerPosition = this.valueToPosition(center);\n          var\n          /** @type {?} */\n          isModelGreaterThanCenter = this.viewOptions.rightToLeft ? this.viewLowValue <= center : this.viewLowValue > center;\n\n          if (isModelGreaterThanCenter) {\n            dimension = this.minHandleElement.position - centerPosition;\n            position = centerPosition + this.handleHalfDimension;\n          } else {\n            dimension = centerPosition - this.minHandleElement.position;\n            position = this.minHandleElement.position + this.handleHalfDimension;\n          }\n        } else if (isSelectionBarFromRight) {\n          dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n          position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n        } else {\n          dimension = this.minHandleElement.position + this.handleHalfDimension;\n          position = 0;\n        }\n      }\n\n      this.selectionBarElement.setDimension(dimension);\n      this.selectionBarElement.setPosition(position);\n\n      if (this.range && this.viewOptions.showOuterSelectionBars) {\n        if (this.viewOptions.rightToLeft) {\n          this.rightOuterSelectionBarElement.setDimension(position);\n          this.rightOuterSelectionBarElement.setPosition(0);\n          this.fullBarElement.calculateDimension();\n          this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n          this.leftOuterSelectionBarElement.setPosition(position + dimension);\n        } else {\n          this.leftOuterSelectionBarElement.setDimension(position);\n          this.leftOuterSelectionBarElement.setPosition(0);\n          this.fullBarElement.calculateDimension();\n          this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n          this.rightOuterSelectionBarElement.setPosition(position + dimension);\n        }\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n        var\n        /** @type {?} */\n        color = this.getSelectionBarColor();\n        this.barStyle = {\n          backgroundColor: color\n        };\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n        var\n        /** @type {?} */\n        offset = !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue) ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue) : 0;\n        var\n        /** @type {?} */\n        reversed = offset - position > 0 && !isSelectionBarFromRight || offset - position <= 0 && isSelectionBarFromRight;\n        var\n        /** @type {?} */\n        direction = this.viewOptions.vertical ? reversed ? 'bottom' : 'top' : reversed ? 'left' : 'right';\n        this.barStyle = {\n          backgroundImage: 'linear-gradient(to ' + direction + ', ' + this.viewOptions.selectionBarGradient.from + ' 0%,' + this.viewOptions.selectionBarGradient.to + ' 100%)'\n        };\n\n        if (this.viewOptions.vertical) {\n          this.barStyle.backgroundPosition = 'center ' + (offset + dimension + position + (reversed ? -this.handleHalfDimension : 0)) + 'px';\n          this.barStyle.backgroundSize = '100% ' + (this.fullBarElement.dimension - this.handleHalfDimension) + 'px';\n        } else {\n          this.barStyle.backgroundPosition = offset - position + (reversed ? this.handleHalfDimension : 0) + 'px center';\n          this.barStyle.backgroundSize = this.fullBarElement.dimension - this.handleHalfDimension + 'px 100%';\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getSelectionBarColor\",\n    value: function getSelectionBarColor() {\n      if (this.range) {\n        return this.viewOptions.getSelectionBarColor(this.value, this.highValue);\n      }\n\n      return this.viewOptions.getSelectionBarColor(this.value);\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n\n  }, {\n    key: \"getPointerColor\",\n    value: function getPointerColor(pointerType) {\n      if (pointerType === PointerType.Max) {\n        return this.viewOptions.getPointerColor(this.highValue, pointerType);\n      }\n\n      return this.viewOptions.getPointerColor(this.value, pointerType);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"getTickColor\",\n    value: function getTickColor(value) {\n      return this.viewOptions.getTickColor(value);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateCombinedLabel\",\n    value: function updateCombinedLabel() {\n      var\n      /** @type {?} */\n      isLabelOverlap = null;\n\n      if (this.viewOptions.rightToLeft) {\n        isLabelOverlap = this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n      } else {\n        isLabelOverlap = this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n      }\n\n      if (isLabelOverlap) {\n        var\n        /** @type {?} */\n        lowDisplayValue = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n        var\n        /** @type {?} */\n        highDisplayValue = this.getDisplayValue(this.viewHighValue, LabelType.High);\n        var\n        /** @type {?} */\n        combinedLabelValue = this.viewOptions.rightToLeft ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue) : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n        this.combinedLabelElement.setValue(combinedLabelValue);\n        var\n        /** @type {?} */\n        pos = this.viewOptions.boundPointerLabels ? Math.min(Math.max(this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2, 0), this.fullBarElement.dimension - this.combinedLabelElement.dimension) : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n        this.combinedLabelElement.setPosition(pos);\n        this.minHandleLabelElement.hide();\n        this.maxHandleLabelElement.hide();\n        this.combinedLabelElement.show();\n      } else {\n        this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        this.maxHandleLabelElement.show();\n        this.minHandleLabelElement.show();\n        this.combinedLabelElement.hide();\n      }\n\n      if (this.viewOptions.autoHideLimitLabels) {\n        this.updateFloorAndCeilLabelsVisibility();\n      }\n    }\n    /**\n     * @param {?} value\n     * @param {?} which\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDisplayValue\",\n    value: function getDisplayValue(value, which) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n        value = this.getStepValue(value);\n      }\n\n      return this.viewOptions.translate(value, which);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} customStep\n     * @return {?}\n     */\n\n  }, {\n    key: \"roundStep\",\n    value: function roundStep(value, customStep) {\n      var\n      /** @type {?} */\n      step = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n      var\n      /** @type {?} */\n      steppedDifference = MathHelper.roundToPrecisionLimit((value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n      steppedDifference = Math.round(steppedDifference) * step;\n      return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n\n  }, {\n    key: \"valueToPosition\",\n    value: function valueToPosition(val) {\n      var\n      /** @type {?} */\n      fn = ValueHelper.linearValueToPosition;\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n        fn = this.viewOptions.customValueToPosition;\n      } else if (this.viewOptions.logScale) {\n        fn = ValueHelper.logValueToPosition;\n      }\n\n      val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n      var\n      /** @type {?} */\n      percent = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n\n      if (ValueHelper.isNullOrUndefined(percent)) {\n        percent = 0;\n      }\n\n      if (this.viewOptions.rightToLeft) {\n        percent = 1 - percent;\n      }\n\n      return percent * this.maxHandlePosition;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n\n  }, {\n    key: \"positionToValue\",\n    value: function positionToValue(position) {\n      var\n      /** @type {?} */\n      percent = position / this.maxHandlePosition;\n\n      if (this.viewOptions.rightToLeft) {\n        percent = 1 - percent;\n      }\n\n      var\n      /** @type {?} */\n      fn = ValueHelper.linearPositionToValue;\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n        fn = this.viewOptions.customPositionToValue;\n      } else if (this.viewOptions.logScale) {\n        fn = ValueHelper.logPositionToValue;\n      }\n\n      var\n      /** @type {?} */\n      value = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n      return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n\n  }, {\n    key: \"getEventXY\",\n    value: function getEventXY(event, targetTouchId) {\n      if (event instanceof MouseEvent) {\n        return this.viewOptions.vertical ? event.clientY : event.clientX;\n      }\n\n      var\n      /** @type {?} */\n      touchIndex = 0;\n      var\n      /** @type {?} */\n      touches = event.touches;\n\n      if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n        for (var\n        /** @type {?} */\n        i = 0; i < touches.length; i++) {\n          if (touches[i].identifier === targetTouchId) {\n            touchIndex = i;\n            break;\n          }\n        }\n      } // Return the target touch or if the target touch was not found in the event\n      // returns the coordinates of the first touch\n\n\n      return this.viewOptions.vertical ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n\n  }, {\n    key: \"getEventPosition\",\n    value: function getEventPosition(event, targetTouchId) {\n      var\n      /** @type {?} */\n      sliderElementBoundingRect = this.elementRef.nativeElement.getBoundingClientRect();\n      var\n      /** @type {?} */\n      sliderPos = this.viewOptions.vertical ? sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n      var\n      /** @type {?} */\n      eventPos = 0;\n\n      if (this.viewOptions.vertical) {\n        eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n      } else {\n        eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n      }\n\n      return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"getNearestHandle\",\n    value: function getNearestHandle(event) {\n      if (!this.range) {\n        return PointerType.Min;\n      }\n\n      var\n      /** @type {?} */\n      position = this.getEventPosition(event);\n      var\n      /** @type {?} */\n      distanceMin = Math.abs(position - this.minHandleElement.position);\n      var\n      /** @type {?} */\n      distanceMax = Math.abs(position - this.maxHandleElement.position);\n\n      if (distanceMin < distanceMax) {\n        return PointerType.Min;\n      } else if (distanceMin > distanceMax) {\n        return PointerType.Max;\n      } else if (!this.viewOptions.rightToLeft) {\n        // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n        return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n      } // reverse in rtl\n\n\n      return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this12 = this;\n\n      var\n      /** @type {?} */\n      draggableRange = this.viewOptions.draggableRange;\n\n      if (!this.viewOptions.onlyBindHandles) {\n        this.selectionBarElement.on('mousedown', function (event) {\n          return _this12.onBarStart(null, draggableRange, event, true, true, true);\n        });\n      }\n\n      if (this.viewOptions.draggableRangeOnly) {\n        this.minHandleElement.on('mousedown', function (event) {\n          return _this12.onBarStart(PointerType.Min, draggableRange, event, true, true);\n        });\n        this.maxHandleElement.on('mousedown', function (event) {\n          return _this12.onBarStart(PointerType.Max, draggableRange, event, true, true);\n        });\n      } else {\n        this.minHandleElement.on('mousedown', function (event) {\n          return _this12.onStart(PointerType.Min, event, true, true);\n        });\n\n        if (this.range) {\n          this.maxHandleElement.on('mousedown', function (event) {\n            return _this12.onStart(PointerType.Max, event, true, true);\n          });\n        }\n\n        if (!this.viewOptions.onlyBindHandles) {\n          this.fullBarElement.on('mousedown', function (event) {\n            return _this12.onStart(null, event, true, true, true);\n          });\n          this.ticksElement.on('mousedown', function (event) {\n            return _this12.onStart(null, event, true, true, true, true);\n          });\n        }\n      }\n\n      if (!this.viewOptions.onlyBindHandles) {\n        this.selectionBarElement.onPassive('touchstart', function (event) {\n          return _this12.onBarStart(null, draggableRange, event, true, true, true);\n        });\n      }\n\n      if (this.viewOptions.draggableRangeOnly) {\n        this.minHandleElement.onPassive('touchstart', function (event) {\n          return _this12.onBarStart(PointerType.Min, draggableRange, event, true, true);\n        });\n        this.maxHandleElement.onPassive('touchstart', function (event) {\n          return _this12.onBarStart(PointerType.Max, draggableRange, event, true, true);\n        });\n      } else {\n        this.minHandleElement.onPassive('touchstart', function (event) {\n          return _this12.onStart(PointerType.Min, event, true, true);\n        });\n\n        if (this.range) {\n          this.maxHandleElement.onPassive('touchstart', function (event) {\n            return _this12.onStart(PointerType.Max, event, true, true);\n          });\n        }\n\n        if (!this.viewOptions.onlyBindHandles) {\n          this.fullBarElement.onPassive('touchstart', function (event) {\n            return _this12.onStart(null, event, true, true, true);\n          });\n          this.ticksElement.onPassive('touchstart', function (event) {\n            return _this12.onStart(null, event, false, false, true, true);\n          });\n        }\n      }\n\n      if (this.viewOptions.keyboardSupport) {\n        this.minHandleElement.on('focus', function () {\n          return _this12.onPointerFocus(PointerType.Min);\n        });\n\n        if (this.range) {\n          this.maxHandleElement.on('focus', function () {\n            return _this12.onPointerFocus(PointerType.Max);\n          });\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      this.unsubscribeOnMove();\n      this.unsubscribeOnEnd();\n\n      var _iterator4 = _createForOfIteratorHelper(this.getAllSliderElements()),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var element = _step4.value;\n\n          if (!ValueHelper.isNullOrUndefined(element)) {\n            element.off();\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} draggableRange\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBarStart\",\n    value: function onBarStart(pointerType, draggableRange, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n      if (draggableRange) {\n        this.onDragStart(pointerType, event, bindMove, bindEnd);\n      } else {\n        this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n      }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n\n  }, {\n    key: \"onStart\",\n    value: function onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n      var _this13 = this;\n\n      event.stopPropagation(); // Only call preventDefault() when handling non-passive events (passive events don't need it)\n\n      if (!CompatibilityHelper.isTouchEvent(event) || !detectPassiveEvents.hasSupport) {\n        event.preventDefault();\n      } // We have to do this in case the HTML where the sliders are on\n      // have been animated into view.\n\n\n      this.calculateViewDimensions();\n\n      if (ValueHelper.isNullOrUndefined(pointerType)) {\n        pointerType = this.getNearestHandle(event);\n      }\n\n      this.currentTrackingPointer = pointerType;\n      var\n      /** @type {?} */\n      pointerElement = this.getPointerElement(pointerType);\n      pointerElement.active = true;\n\n      if (this.viewOptions.keyboardSupport) {\n        pointerElement.focus();\n      }\n\n      if (bindMove) {\n        this.unsubscribeOnMove();\n\n        var\n        /** @type {?} */\n        onMoveCallback = function onMoveCallback(e) {\n          return _this13.dragging.active ? _this13.onDragMove(e) : _this13.onMove(e);\n        };\n\n        if (CompatibilityHelper.isTouchEvent(event)) {\n          this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchmove', onMoveCallback, this.viewOptions.touchEventsInterval);\n        } else {\n          this.onMoveEventListener = this.eventListenerHelper.attachEventListener(document, 'mousemove', onMoveCallback, this.viewOptions.mouseEventsInterval);\n        }\n      }\n\n      if (bindEnd) {\n        this.unsubscribeOnEnd();\n\n        var\n        /** @type {?} */\n        onEndCallback = function onEndCallback(e) {\n          return _this13.onEnd(e);\n        };\n\n        if (CompatibilityHelper.isTouchEvent(event)) {\n          this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchend', onEndCallback);\n        } else {\n          this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, 'mouseup', onEndCallback);\n        }\n      }\n\n      this.userChangeStart.emit(this.getChangeContext());\n\n      if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined(\n      /** @type {?} */\n      event.changedTouches)) {\n        // Store the touch identifier\n        if (ValueHelper.isNullOrUndefined(this.touchId)) {\n          this.touchId =\n          /** @type {?} */\n          event.changedTouches[0].identifier;\n        }\n      } // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n      // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n      // As a workaround, we simulate the first move event and the end event if it's necessary\n\n\n      if (simulateImmediateMove) {\n        this.onMove(event, true);\n      }\n\n      if (simulateImmediateEnd) {\n        this.onEnd(event);\n      }\n    }\n    /**\n     * @param {?} event\n     * @param {?=} fromTick\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMove\",\n    value: function onMove(event, fromTick) {\n      var\n      /** @type {?} */\n      touchForThisSlider = null;\n\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        var\n        /** @type {?} */\n        changedTouches =\n        /** @type {?} */\n        event.changedTouches;\n\n        for (var\n        /** @type {?} */\n        i = 0; i < changedTouches.length; i++) {\n          if (changedTouches[i].identifier === this.touchId) {\n            touchForThisSlider = changedTouches[i];\n            break;\n          }\n        }\n\n        if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n          return;\n        }\n      }\n\n      var\n      /** @type {?} */\n      newPos = !ValueHelper.isNullOrUndefined(touchForThisSlider) ? this.getEventPosition(event, touchForThisSlider.identifier) : this.getEventPosition(event);\n      var\n      /** @type {?} */\n      newValue;\n      var\n      /** @type {?} */\n      ceilValue = this.viewOptions.rightToLeft ? this.viewOptions.floor : this.viewOptions.ceil;\n      var\n      /** @type {?} */\n      floorValue = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n\n      if (newPos <= 0) {\n        newValue = floorValue;\n      } else if (newPos >= this.maxHandlePosition) {\n        newValue = ceilValue;\n      } else {\n        newValue = this.positionToValue(newPos);\n\n        if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n          newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n        } else {\n          newValue = this.roundStep(newValue);\n        }\n      }\n\n      this.positionTrackingHandle(newValue);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(event) {\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        var\n        /** @type {?} */\n        changedTouches =\n        /** @type {?} */\n        event.changedTouches;\n\n        if (changedTouches[0].identifier !== this.touchId) {\n          return;\n        }\n      }\n\n      this.touchId = null;\n\n      if (!this.viewOptions.keyboardSupport) {\n        this.minHandleElement.active = false;\n        this.maxHandleElement.active = false;\n        this.currentTrackingPointer = null;\n      }\n\n      this.dragging.active = false;\n      this.unsubscribeOnMove();\n      this.unsubscribeOnEnd();\n      this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n\n  }, {\n    key: \"onPointerFocus\",\n    value: function onPointerFocus(pointerType) {\n      var _this14 = this;\n\n      var\n      /** @type {?} */\n      pointerElement = this.getPointerElement(pointerType);\n      pointerElement.on('blur', function () {\n        return _this14.onPointerBlur(pointerElement);\n      });\n      pointerElement.on('keydown', function (event) {\n        return _this14.onKeyboardEvent(event);\n      });\n      pointerElement.on('keyup', function () {\n        return _this14.onKeyUp();\n      });\n      pointerElement.active = true;\n      this.currentTrackingPointer = pointerType;\n      this.currentFocusPointer = pointerType;\n      this.firstKeyDown = true;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.firstKeyDown = true;\n      this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointer\n     * @return {?}\n     */\n\n  }, {\n    key: \"onPointerBlur\",\n    value: function onPointerBlur(pointer) {\n      pointer.off('blur');\n      pointer.off('keydown');\n      pointer.off('keyup');\n      pointer.active = false;\n\n      if (ValueHelper.isNullOrUndefined(this.touchId)) {\n        this.currentTrackingPointer = null;\n        this.currentFocusPointer = null;\n      }\n    }\n    /**\n     * @param {?} currentValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"getKeyActions\",\n    value: function getKeyActions(currentValue) {\n      var\n      /** @type {?} */\n      valueRange = this.viewOptions.ceil - this.viewOptions.floor;\n      var\n      /** @type {?} */\n      increaseStep = currentValue + this.viewOptions.step;\n      var\n      /** @type {?} */\n      decreaseStep = currentValue - this.viewOptions.step;\n      var\n      /** @type {?} */\n      increasePage = currentValue + valueRange / 10;\n      var\n      /** @type {?} */\n      decreasePage = currentValue - valueRange / 10;\n\n      if (this.viewOptions.reversedControls) {\n        increaseStep = currentValue - this.viewOptions.step;\n        decreaseStep = currentValue + this.viewOptions.step;\n        increasePage = currentValue - valueRange / 10;\n        decreasePage = currentValue + valueRange / 10;\n      } // Left to right default actions\n\n\n      var\n      /** @type {?} */\n      actions = {\n        UP: increaseStep,\n        DOWN: decreaseStep,\n        LEFT: decreaseStep,\n        RIGHT: increaseStep,\n        PAGEUP: increasePage,\n        PAGEDOWN: decreasePage,\n        HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n        END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil\n      }; // right to left means swapping right and left arrows\n\n      if (this.viewOptions.rightToLeft) {\n        actions[\"LEFT\"] = increaseStep;\n        actions[\"RIGHT\"] = decreaseStep; // right to left and vertical means we also swap up and down\n\n        if (this.viewOptions.vertical) {\n          actions[\"UP\"] = decreaseStep;\n          actions[\"DOWN\"] = increaseStep;\n        }\n      }\n\n      return actions;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onKeyboardEvent\",\n    value: function onKeyboardEvent(event) {\n      var\n      /** @type {?} */\n      currentValue = this.getCurrentTrackingValue();\n      var\n      /** @type {?} */\n      keyCode = !ValueHelper.isNullOrUndefined(event.keyCode) ? event.keyCode : event.which;\n      var\n      /** @type {?} */\n      keys = {\n        38: 'UP',\n        40: 'DOWN',\n        37: 'LEFT',\n        39: 'RIGHT',\n        33: 'PAGEUP',\n        34: 'PAGEDOWN',\n        36: 'HOME',\n        35: 'END'\n      };\n      var\n      /** @type {?} */\n      actions = this.getKeyActions(currentValue);\n      var\n      /** @type {?} */\n      key = keys[keyCode];\n      var\n      /** @type {?} */\n      action = actions[key];\n\n      if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (this.firstKeyDown) {\n        this.firstKeyDown = false;\n        this.userChangeStart.emit(this.getChangeContext());\n      }\n\n      var\n      /** @type {?} */\n      actionValue = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n      var\n      /** @type {?} */\n      newValue = this.roundStep(actionValue);\n\n      if (!this.viewOptions.draggableRangeOnly) {\n        this.positionTrackingHandle(newValue);\n      } else {\n        var\n        /** @type {?} */\n        difference = this.viewHighValue - this.viewLowValue;\n        var\n        /** @type {?} */\n        newMinValue;\n        var\n        /** @type {?} */\n        newMaxValue;\n\n        if (this.currentTrackingPointer === PointerType.Min) {\n          newMinValue = newValue;\n          newMaxValue = newValue + difference;\n\n          if (newMaxValue > this.viewOptions.ceil) {\n            newMaxValue = this.viewOptions.ceil;\n            newMinValue = newMaxValue - difference;\n          }\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          newMaxValue = newValue;\n          newMinValue = newValue - difference;\n\n          if (newMinValue < this.viewOptions.floor) {\n            newMinValue = this.viewOptions.floor;\n            newMaxValue = newMinValue + difference;\n          }\n        }\n\n        this.positionTrackingBar(newMinValue, newMaxValue);\n      }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(pointerType, event, bindMove, bindEnd) {\n      var\n      /** @type {?} */\n      position = this.getEventPosition(event);\n      this.dragging = new Dragging();\n      this.dragging.active = true;\n      this.dragging.value = this.positionToValue(position);\n      this.dragging.difference = this.viewHighValue - this.viewLowValue;\n      this.dragging.lowLimit = this.viewOptions.rightToLeft ? this.minHandleElement.position - position : position - this.minHandleElement.position;\n      this.dragging.highLimit = this.viewOptions.rightToLeft ? position - this.maxHandleElement.position : this.maxHandleElement.position - position;\n      this.onStart(pointerType, event, bindMove, bindEnd);\n    }\n    /**\n     * Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMinValue\",\n    value: function getMinValue(newPos, outOfBounds, isAbove) {\n      var\n      /** @type {?} */\n      isRTL = this.viewOptions.rightToLeft;\n      var\n      /** @type {?} */\n      value = null;\n\n      if (outOfBounds) {\n        if (isAbove) {\n          value = isRTL ? this.viewOptions.floor : this.viewOptions.ceil - this.dragging.difference;\n        } else {\n          value = isRTL ? this.viewOptions.ceil - this.dragging.difference : this.viewOptions.floor;\n        }\n      } else {\n        value = isRTL ? this.positionToValue(newPos + this.dragging.lowLimit) : this.positionToValue(newPos - this.dragging.lowLimit);\n      }\n\n      return this.roundStep(value);\n    }\n    /**\n     * Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMaxValue\",\n    value: function getMaxValue(newPos, outOfBounds, isAbove) {\n      var\n      /** @type {?} */\n      isRTL = this.viewOptions.rightToLeft;\n      var\n      /** @type {?} */\n      value = null;\n\n      if (outOfBounds) {\n        if (isAbove) {\n          value = isRTL ? this.viewOptions.floor + this.dragging.difference : this.viewOptions.ceil;\n        } else {\n          value = isRTL ? this.viewOptions.ceil : this.viewOptions.floor + this.dragging.difference;\n        }\n      } else {\n        if (isRTL) {\n          value = this.positionToValue(newPos + this.dragging.lowLimit) + this.dragging.difference;\n        } else {\n          value = this.positionToValue(newPos - this.dragging.lowLimit) + this.dragging.difference;\n        }\n      }\n\n      return this.roundStep(value);\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragMove\",\n    value: function onDragMove(event) {\n      var\n      /** @type {?} */\n      newPos = this.getEventPosition(event);\n      var\n      /** @type {?} */\n      ceilLimit,\n      /** @type {?} */\n      floorLimit,\n      /** @type {?} */\n      floorHandleElement,\n      /** @type {?} */\n      ceilHandleElement;\n\n      if (this.viewOptions.rightToLeft) {\n        ceilLimit = this.dragging.lowLimit;\n        floorLimit = this.dragging.highLimit;\n        floorHandleElement = this.maxHandleElement;\n        ceilHandleElement = this.minHandleElement;\n      } else {\n        ceilLimit = this.dragging.highLimit;\n        floorLimit = this.dragging.lowLimit;\n        floorHandleElement = this.minHandleElement;\n        ceilHandleElement = this.maxHandleElement;\n      }\n\n      var\n      /** @type {?} */\n      isUnderFloorLimit = newPos <= floorLimit;\n      var\n      /** @type {?} */\n      isOverCeilLimit = newPos >= this.maxHandlePosition - ceilLimit;\n      var\n      /** @type {?} */\n      newMinValue;\n      var\n      /** @type {?} */\n      newMaxValue;\n\n      if (isUnderFloorLimit) {\n        if (floorHandleElement.position === 0) {\n          return;\n        }\n\n        newMinValue = this.getMinValue(newPos, true, false);\n        newMaxValue = this.getMaxValue(newPos, true, false);\n      } else if (isOverCeilLimit) {\n        if (ceilHandleElement.position === this.maxHandlePosition) {\n          return;\n        }\n\n        newMaxValue = this.getMaxValue(newPos, true, true);\n        newMinValue = this.getMinValue(newPos, true, true);\n      } else {\n        newMinValue = this.getMinValue(newPos, false, false);\n        newMaxValue = this.getMaxValue(newPos, false, false);\n      }\n\n      this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n    /**\n     * @param {?} newMinValue\n     * @param {?} newMaxValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"positionTrackingBar\",\n    value: function positionTrackingBar(newMinValue, newMaxValue) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newMinValue < this.viewOptions.minLimit) {\n        newMinValue = this.viewOptions.minLimit;\n        newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newMaxValue > this.viewOptions.maxLimit) {\n        newMaxValue = this.viewOptions.maxLimit;\n        newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n      }\n\n      this.viewLowValue = newMinValue;\n      this.viewHighValue = newMaxValue;\n      this.applyViewChange();\n      this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n      this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"positionTrackingHandle\",\n    value: function positionTrackingHandle(newValue) {\n      newValue = this.applyMinMaxLimit(newValue);\n\n      if (this.range) {\n        if (this.viewOptions.pushRange) {\n          newValue = this.applyPushRange(newValue);\n        } else {\n          if (this.viewOptions.noSwitching) {\n            if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n              newValue = this.applyMinMaxRange(this.viewHighValue);\n            } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n              newValue = this.applyMinMaxRange(this.viewLowValue);\n            }\n          }\n\n          newValue = this.applyMinMaxRange(newValue);\n          /* This is to check if we need to switch the min and max handles */\n\n          if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n            this.viewLowValue = this.viewHighValue;\n            this.applyViewChange();\n            this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n            this.updateAriaAttributes();\n            this.currentTrackingPointer = PointerType.Max;\n            this.minHandleElement.active = false;\n            this.maxHandleElement.active = true;\n\n            if (this.viewOptions.keyboardSupport) {\n              this.maxHandleElement.focus();\n            }\n          } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n            this.viewHighValue = this.viewLowValue;\n            this.applyViewChange();\n            this.updateHandles(PointerType.Max, this.minHandleElement.position);\n            this.updateAriaAttributes();\n            this.currentTrackingPointer = PointerType.Min;\n            this.maxHandleElement.active = false;\n            this.minHandleElement.active = true;\n\n            if (this.viewOptions.keyboardSupport) {\n              this.minHandleElement.focus();\n            }\n          }\n        }\n      }\n\n      if (this.getCurrentTrackingValue() !== newValue) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          this.viewLowValue = newValue;\n          this.applyViewChange();\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          this.viewHighValue = newValue;\n          this.applyViewChange();\n        }\n\n        this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n        this.updateAriaAttributes();\n      }\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyMinMaxLimit\",\n    value: function applyMinMaxLimit(newValue) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n        return this.viewOptions.minLimit;\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n        return this.viewOptions.maxLimit;\n      }\n\n      return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyMinMaxRange\",\n    value: function applyMinMaxRange(newValue) {\n      var\n      /** @type {?} */\n      oppositeValue = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue : this.viewLowValue;\n      var\n      /** @type {?} */\n      difference = Math.abs(newValue - oppositeValue);\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n        if (difference < this.viewOptions.minRange) {\n          if (this.currentTrackingPointer === PointerType.Min) {\n            return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n          } else if (this.currentTrackingPointer === PointerType.Max) {\n            return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n          }\n        }\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n        if (difference > this.viewOptions.maxRange) {\n          if (this.currentTrackingPointer === PointerType.Min) {\n            return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n          } else if (this.currentTrackingPointer === PointerType.Max) {\n            return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n          }\n        }\n      }\n\n      return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyPushRange\",\n    value: function applyPushRange(newValue) {\n      var\n      /** @type {?} */\n      difference = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue - newValue : newValue - this.viewLowValue;\n      var\n      /** @type {?} */\n      minRange = !ValueHelper.isNullOrUndefined(this.viewOptions.minRange) ? this.viewOptions.minRange : this.viewOptions.step;\n      var\n      /** @type {?} */\n      maxRange = this.viewOptions.maxRange; // if smaller than minRange\n\n      if (difference < minRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n          newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n          newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n        }\n\n        this.updateAriaAttributes();\n      } else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n        // if greater than maxRange\n        if (this.currentTrackingPointer === PointerType.Min) {\n          this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n        }\n\n        this.updateAriaAttributes();\n      }\n\n      return newValue;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getChangeContext\",\n    value: function getChangeContext() {\n      var\n      /** @type {?} */\n      changeContext = new ChangeContext();\n      changeContext.pointerType = this.currentTrackingPointer;\n      changeContext.value = +this.value;\n\n      if (this.range) {\n        changeContext.highValue = +this.highValue;\n      }\n\n      return changeContext;\n    }\n  }]);\n}();\n\nSliderComponent.ɵfac = function SliderComponent_Factory(t) {\n  return new (t || SliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nSliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SliderComponent,\n  selectors: [[\"ng5-slider\"]],\n  contentQueries: function SliderComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function SliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c1, 1, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c2, 1, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c3, 1, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c4, 1, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c5, 1, SliderHandleDirective);\n      ɵngcc0.ɵɵviewQuery(_c6, 1, SliderHandleDirective);\n      ɵngcc0.ɵɵviewQuery(_c7, 1, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c8, 1, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c9, 1, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c10, 1, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c11, 1, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c12, 1, SliderElementDirective);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftOuterSelectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightOuterSelectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.floorLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ceilLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.combinedLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ng5-slider\"],\n  hostVars: 5,\n  hostBindings: function SliderComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"disabled\", ctx.sliderElementDisabledAttr);\n      ɵngcc0.ɵɵclassProp(\"vertical\", ctx.sliderElementVerticalClass)(\"animate\", ctx.sliderElementAnimateClass);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    highValue: \"highValue\",\n    options: \"options\",\n    manualRefresh: \"manualRefresh\",\n    triggerFocus: \"triggerFocus\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    highValueChange: \"highValueChange\",\n    userChangeStart: \"userChangeStart\",\n    userChange: \"userChange\",\n    userChangeEnd: \"userChangeEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NG5_SLIDER_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 29,\n  vars: 13,\n  consts: [[\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-left-out-selection\"], [\"leftOuterSelectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-right-out-selection\"], [\"rightOuterSelectionBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-full-bar\"], [\"fullBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-selection-bar\"], [\"selectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\", \"ng5-slider-selection\", 3, \"ngStyle\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-min\", 3, \"ngStyle\"], [\"minHandle\", \"\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-max\", 3, \"ngStyle\"], [\"maxHandle\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-floor\"], [\"floorLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-ceil\"], [\"ceilLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-value\"], [\"minHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-high\"], [\"maxHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-combined\"], [\"combinedLabel\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-ticks\", 3, \"hidden\"], [\"ticksElement\", \"\"], [\"class\", \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\"], [3, \"template\", \"tooltip\", \"placement\"], [\"class\", \"ng5-slider-span ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\", 4, \"ngIf\"], [\"class\", \"ng5-slider-span ng5-slider-tick-legend\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-legend\", 3, \"innerHTML\"]],\n  template: function SliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3, 4);\n      ɵngcc0.ɵɵelement(5, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"span\", 5, 6);\n      ɵngcc0.ɵɵelement(8, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(9, \"span\", 7, 8);\n      ɵngcc0.ɵɵelement(11, \"span\", 9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(12, \"span\", 10, 11);\n      ɵngcc0.ɵɵelement(14, \"span\", 12, 13);\n      ɵngcc0.ɵɵelement(16, \"span\", 14, 15);\n      ɵngcc0.ɵɵelement(18, \"span\", 16, 17);\n      ɵngcc0.ɵɵelement(20, \"span\", 18, 19);\n      ɵngcc0.ɵɵelement(22, \"span\", 20, 21);\n      ɵngcc0.ɵɵelement(24, \"span\", 22, 23);\n      ɵngcc0.ɵɵelementStart(26, \"span\", 24, 25);\n      ɵngcc0.ɵɵtemplate(28, SliderComponent_span_28_Template, 4, 9, \"span\", 26);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(6);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-transparent\", ctx.fullBarTransparentClass);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-draggable\", ctx.selectionBarDraggableClass);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.barStyle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.minPointerStyle);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.range ? \"inherit\" : \"none\");\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.maxPointerStyle);\n      ɵngcc0.ɵɵadvance(12);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-ticks-values-under\", ctx.ticksUnderValuesClass);\n      ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showTicks);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  directives: function directives() {\n    return [SliderElementDirective, ɵngcc1.NgStyle, SliderHandleDirective, SliderLabelDirective, ɵngcc1.NgForOf, ɵngcc1.NgClass, TooltipWrapperComponent, ɵngcc1.NgIf];\n  },\n  styles: [\".ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}  .ng5-slider.with-legend{margin-bottom:40px}  .ng5-slider[disabled]{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}  .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}  .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}  .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}  .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}  .ng5-slider .ng5-slider-draggable{cursor:move}  .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}  .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}  .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}  .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}  .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}  .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}  .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}  .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}  .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}  .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}  .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}  .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}  .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}  .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}  .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}  .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}  .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}  .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}  .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}  .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}  .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}  .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}  .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}  .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}  .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}  .ng5-slider *{-webkit-transition:none;transition:none}  .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}  .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}\"]\n});\n/** @nocollapse */\n\nSliderComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }];\n};\n\nSliderComponent.propDecorators = {\n  \"value\": [{\n    type: Input\n  }],\n  \"valueChange\": [{\n    type: Output\n  }],\n  \"highValue\": [{\n    type: Input\n  }],\n  \"highValueChange\": [{\n    type: Output\n  }],\n  \"options\": [{\n    type: Input\n  }],\n  \"userChangeStart\": [{\n    type: Output\n  }],\n  \"userChange\": [{\n    type: Output\n  }],\n  \"userChangeEnd\": [{\n    type: Output\n  }],\n  \"manualRefresh\": [{\n    type: Input\n  }],\n  \"triggerFocus\": [{\n    type: Input\n  }],\n  \"leftOuterSelectionBarElement\": [{\n    type: ViewChild,\n    args: ['leftOuterSelectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"rightOuterSelectionBarElement\": [{\n    type: ViewChild,\n    args: ['rightOuterSelectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"fullBarElement\": [{\n    type: ViewChild,\n    args: ['fullBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"selectionBarElement\": [{\n    type: ViewChild,\n    args: ['selectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"minHandleElement\": [{\n    type: ViewChild,\n    args: ['minHandle', {\n      read: SliderHandleDirective\n    }]\n  }],\n  \"maxHandleElement\": [{\n    type: ViewChild,\n    args: ['maxHandle', {\n      read: SliderHandleDirective\n    }]\n  }],\n  \"floorLabelElement\": [{\n    type: ViewChild,\n    args: ['floorLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"ceilLabelElement\": [{\n    type: ViewChild,\n    args: ['ceilLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"minHandleLabelElement\": [{\n    type: ViewChild,\n    args: ['minHandleLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"maxHandleLabelElement\": [{\n    type: ViewChild,\n    args: ['maxHandleLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"combinedLabelElement\": [{\n    type: ViewChild,\n    args: ['combinedLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"ticksElement\": [{\n    type: ViewChild,\n    args: ['ticksElement', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"tooltipTemplate\": [{\n    type: ContentChild,\n    args: ['tooltipTemplate']\n  }],\n  \"sliderElementVerticalClass\": [{\n    type: HostBinding,\n    args: ['class.vertical']\n  }],\n  \"sliderElementAnimateClass\": [{\n    type: HostBinding,\n    args: ['class.animate']\n  }],\n  \"sliderElementDisabledAttr\": [{\n    type: HostBinding,\n    args: ['attr.disabled']\n  }],\n  \"onResize\": [{\n    type: HostListener,\n    args: ['window:resize', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng5-slider',\n      template: \"<!-- // 0 Left selection bar outside two handles -->\\n<span ng5SliderElement #leftOuterSelectionBar class=\\\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-left-out-selection\\\">\\n  <span class=\\\"ng5-slider-span ng5-slider-bar\\\"></span>\\n</span>\\n<!-- // 1 Right selection bar outside two handles -->\\n<span ng5SliderElement #rightOuterSelectionBar class=\\\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-right-out-selection\\\">\\n  <span class=\\\"ng5-slider-span ng5-slider-bar\\\"></span>\\n</span>\\n<!-- // 2 The whole slider bar -->\\n<span ng5SliderElement #fullBar [class.ng5-slider-transparent]=\\\"fullBarTransparentClass\\\" class=\\\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-full-bar\\\">\\n  <span class=\\\"ng5-slider-span ng5-slider-bar\\\"></span>\\n</span>\\n<!-- // 3 Selection bar between two handles -->\\n<span ng5SliderElement #selectionBar [class.ng5-slider-draggable]=\\\"selectionBarDraggableClass\\\" class=\\\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-selection-bar\\\">\\n  <span class=\\\"ng5-slider-span ng5-slider-bar ng5-slider-selection\\\" [ngStyle]=\\\"barStyle\\\"></span>\\n</span>\\n<!-- // 4 Low slider handle -->\\n<span ng5SliderHandle #minHandle class=\\\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-min\\\" [ngStyle]=minPointerStyle></span>\\n<!-- // 5 High slider handle -->\\n<span ng5SliderHandle #maxHandle [style.display]=\\\"range ? 'inherit' : 'none'\\\" class=\\\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-max\\\" [ngStyle]=maxPointerStyle></span>\\n<!-- // 6 Floor label -->\\n<span ng5SliderLabel #floorLabel class=\\\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-floor\\\"></span>\\n<!-- // 7 Ceiling label -->\\n<span ng5SliderLabel #ceilLabel class=\\\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-ceil\\\"></span>\\n<!-- // 8 Label above the low slider handle -->\\n<span ng5SliderLabel #minHandleLabel class=\\\"ng5-slider-span ng5-slider-bubble ng5-slider-model-value\\\"></span>\\n<!-- // 9 Label above the high slider handle -->\\n<span ng5SliderLabel #maxHandleLabel class=\\\"ng5-slider-span ng5-slider-bubble ng5-slider-model-high\\\"></span>\\n<!-- // 10 Combined range label when the slider handles are close ex. 15 - 17 -->\\n<span ng5SliderLabel #combinedLabel class=\\\"ng5-slider-span ng5-slider-bubble ng5-slider-combined\\\"></span>\\n<!-- // 11 The ticks -->\\n<span ng5SliderElement #ticksElement [hidden]=\\\"!showTicks\\\" [class.ng5-slider-ticks-values-under]=\\\"ticksUnderValuesClass\\\" class=\\\"ng5-slider-ticks\\\">\\n  <span *ngFor=\\\"let t of ticks\\\" class=\\\"ng5-slider-tick\\\" [ngClass]=\\\"{'ng5-slider-selected': t.selected}\\\" [ngStyle]=\\\"t.style\\\">\\n    <ng5-slider-tooltip-wrapper [template]=\\\"tooltipTemplate\\\" [tooltip]=\\\"t.tooltip\\\" [placement]=\\\"t.tooltipPlacement\\\"></ng5-slider-tooltip-wrapper>\\n    <ng5-slider-tooltip-wrapper *ngIf=\\\"t.value != null\\\" class=\\\"ng5-slider-span ng5-slider-tick-value\\\"\\n        [template]=\\\"tooltipTemplate\\\" [tooltip]=\\\"t.valueTooltip\\\" [placement]=\\\"t.valueTooltipPlacement\\\" [content]=\\\"t.value\\\"></ng5-slider-tooltip-wrapper>\\n    <span *ngIf=\\\"t.legend != null\\\" class=\\\"ng5-slider-span ng5-slider-tick-legend\\\" [innerHTML]=\\\"t.legend\\\"></span>\\n  </span>\\n</span>\",\n      styles: [\"::ng-deep .ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}::ng-deep .ng5-slider.with-legend{margin-bottom:40px}::ng-deep .ng5-slider[disabled]{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}::ng-deep .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}::ng-deep .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}::ng-deep .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}::ng-deep .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}::ng-deep .ng5-slider .ng5-slider-draggable{cursor:move}::ng-deep .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}::ng-deep .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}::ng-deep .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}::ng-deep .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}::ng-deep .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}::ng-deep .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}::ng-deep .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}::ng-deep .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}::ng-deep .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}::ng-deep .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}::ng-deep .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}::ng-deep .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}::ng-deep .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}::ng-deep .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}::ng-deep .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}::ng-deep .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}::ng-deep .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}::ng-deep .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}::ng-deep .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}::ng-deep .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}::ng-deep .ng5-slider *{-webkit-transition:none;transition:none}::ng-deep .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}\"],\n      host: {\n        class: 'ng5-slider'\n      },\n      providers: [NG5_SLIDER_CONTROL_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    highValue: [{\n      type: Input\n    }],\n    highValueChange: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    userChangeStart: [{\n      type: Output\n    }],\n    userChange: [{\n      type: Output\n    }],\n    userChangeEnd: [{\n      type: Output\n    }],\n    sliderElementVerticalClass: [{\n      type: HostBinding,\n      args: ['class.vertical']\n    }],\n    sliderElementAnimateClass: [{\n      type: HostBinding,\n      args: ['class.animate']\n    }],\n    sliderElementDisabledAttr: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    manualRefresh: [{\n      type: Input\n    }],\n    triggerFocus: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }],\n    leftOuterSelectionBarElement: [{\n      type: ViewChild,\n      args: ['leftOuterSelectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    rightOuterSelectionBarElement: [{\n      type: ViewChild,\n      args: ['rightOuterSelectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    fullBarElement: [{\n      type: ViewChild,\n      args: ['fullBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    selectionBarElement: [{\n      type: ViewChild,\n      args: ['selectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    minHandleElement: [{\n      type: ViewChild,\n      args: ['minHandle', {\n        read: SliderHandleDirective\n      }]\n    }],\n    maxHandleElement: [{\n      type: ViewChild,\n      args: ['maxHandle', {\n        read: SliderHandleDirective\n      }]\n    }],\n    floorLabelElement: [{\n      type: ViewChild,\n      args: ['floorLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    ceilLabelElement: [{\n      type: ViewChild,\n      args: ['ceilLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    minHandleLabelElement: [{\n      type: ViewChild,\n      args: ['minHandleLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    maxHandleLabelElement: [{\n      type: ViewChild,\n      args: ['maxHandleLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    combinedLabelElement: [{\n      type: ViewChild,\n      args: ['combinedLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksElement', {\n        read: SliderElementDirective\n      }]\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar TooltipWrapperComponent = /*#__PURE__*/_createClass(function TooltipWrapperComponent() {\n  _classCallCheck(this, TooltipWrapperComponent);\n});\n\nTooltipWrapperComponent.ɵfac = function TooltipWrapperComponent_Factory(t) {\n  return new (t || TooltipWrapperComponent)();\n};\n\nTooltipWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TooltipWrapperComponent,\n  selectors: [[\"ng5-slider-tooltip-wrapper\"]],\n  inputs: {\n    template: \"template\",\n    tooltip: \"tooltip\",\n    placement: \"placement\",\n    content: \"content\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ng5-slider-inner-tooltip\"]],\n  template: function TooltipWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_Template, 2, 6, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\".ng5-slider-inner-tooltip[_ngcontent-%COMP%]{height:100%}\"]\n});\n/** @nocollapse */\n\nTooltipWrapperComponent.ctorParameters = function () {\n  return [];\n};\n\nTooltipWrapperComponent.propDecorators = {\n  \"template\": [{\n    type: Input\n  }],\n  \"tooltip\": [{\n    type: Input\n  }],\n  \"placement\": [{\n    type: Input\n  }],\n  \"content\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng5-slider-tooltip-wrapper',\n      template: \"<ng-container *ngIf=\\\"template\\\">\\n  <ng-template *ngTemplateOutlet=\\\"template; context: {tooltip: tooltip, placement: placement, content: content}\\\"></ng-template>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!template\\\">\\n  <div class=\\\"ng5-slider-inner-tooltip\\\" [attr.title]=\\\"tooltip\\\" [attr.data-tooltip-placement]=\\\"placement\\\">\\n    {{content}}\\n  </div>\\n</ng-container>\",\n      styles: [\".ng5-slider-inner-tooltip{height:100%}\"]\n    }]\n  }], null, {\n    template: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Ng5Slider module\n *\n * The module exports the slider component\n */\n\n\nvar Ng5SliderModule = /*#__PURE__*/_createClass(function Ng5SliderModule() {\n  _classCallCheck(this, Ng5SliderModule);\n});\n\nNg5SliderModule.ɵfac = function Ng5SliderModule_Factory(t) {\n  return new (t || Ng5SliderModule)();\n};\n\nNg5SliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: Ng5SliderModule\n});\nNg5SliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n/** @nocollapse */\n\nNg5SliderModule.ctorParameters = function () {\n  return [];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng5SliderModule, {\n    declarations: function declarations() {\n      return [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [SliderComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng5SliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent],\n      exports: [SliderComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Ng5SliderModule, ChangeContext, PointerType, LabelType, Options, SliderElementDirective as ɵb, SliderHandleDirective as ɵc, SliderLabelDirective as ɵd, SliderComponent as ɵa, TooltipWrapperComponent as ɵe }; //# sourceMappingURL=ng5-slider.js.map","map":{"version":3,"sources":["/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/ng5-slider/__ivy_ngcc__/esm2015/ng5-slider.js"],"names":["Subject","Renderer2","Directive","ElementRef","HostBinding","ChangeDetectorRef","Component","ViewChild","HostListener","Input","EventEmitter","Output","ContentChild","forwardRef","NgZone","NgModule","throttleTime","tap","distinctUntilChanged","filter","detectPassiveEvents","NG_VALUE_ACCESSOR","CommonModule","ɵngcc0","ɵngcc1","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template","rf","ctx","ɵɵelement","t_r13","ɵɵnextContext","$implicit","ctx_r14","ɵɵproperty","tooltipTemplate","valueTooltip","valueTooltipPlacement","value","SliderComponent_span_28_span_3_Template","legend","ɵɵsanitizeHtml","_c13","a0","SliderComponent_span_28_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r12","ɵɵpureFunction1","selected","style","ɵɵadvance","tooltip","tooltipPlacement","TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template","TooltipWrapperComponent_ng_container_0_1_Template","_c14","a1","a2","placement","content","TooltipWrapperComponent_ng_container_0_Template","ɵɵelementContainerStart","undefined","ɵɵelementContainerEnd","ctx_r0","template","ɵɵpureFunction3","TooltipWrapperComponent_ng_container_1_Template","ɵɵtext","ctx_r1","ɵɵattribute","ɵɵtextInterpolate1","PointerType","Min","Max","LabelType","Low","High","Floor","Ceil","TickValue","Options","floor","ceil","step","minRange","maxRange","pushRange","minLimit","maxLimit","translate","combineLabels","getLegend","stepsArray","bindIndexForStepsArray","draggableRange","draggableRangeOnly","showSelectionBar","showSelectionBarEnd","showSelectionBarFromValue","showOuterSelectionBars","hidePointerLabels","hideLimitLabels","autoHideLimitLabels","readOnly","disabled","mouseEventsInterval","touchEventsInterval","inputEventsInterval","outputEventsInterval","showTicks","showTicksValues","tickStep","tickValueStep","ticksArray","ticksTooltip","ticksValuesTooltip","vertical","getSelectionBarColor","getTickColor","getPointerColor","keyboardSupport","scale","enforceStep","enforceRange","noSwitching","onlyBindHandles","rightToLeft","reversedControls","boundPointerLabels","logScale","customValueToPosition","customPositionToValue","precisionLimit","selectionBarGradient","ariaLabel","ariaLabelledBy","ariaLabelHigh","ariaLabelledByHigh","handleDimension","barDimension","animate","ChangeContext","ValueHelper","isNullOrUndefined","linearValueToPosition","val","minVal","maxVal","range","logValueToPosition","Math","log","linearPositionToValue","percent","logPositionToValue","exp","findStepIndex","modelValue","differences","map","abs","minDifferenceIndex","index","length","CompatibilityHelper","isTouchEvent","event","window","TouchEvent","touches","isResizeObserverAvailable","ResizeObserver","MathHelper","roundToPrecisionLimit","toPrecision","clampToRange","min","max","EventListener","eventName","events","eventsSubscription","teardownCallback","EventListenerHelper","renderer","attachPassiveEventListener","nativeElement","callback","throttleInterval","hasSupport","attachEventListener","listener","observerCallback","next","addEventListener","passive","capture","removeEventListener","pipe","leading","trailing","subscribe","detachEventListener","eventListener","unsubscribe","complete","listen","SliderElementDirective","elemRef","changeDetectionRef","_position","_dimension","_alwaysHide","_vertical","_scale","opacity","visibility","left","bottom","height","width","eventListeners","eventListenerHelper","setAlwaysHide","hide","show","alwaysHide","isVisible","setVertical","setScale","setPosition","pos","isRefDestroyed","markForCheck","round","calculateDimension","getBoundingClientRect","top","right","setDimension","dim","on","debounceInterval","push","onPassive","off","listenersToKeep","listenersToRemove","ɵfac","SliderElementDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","SliderElementDirective_HostBindings","ɵɵstyleProp","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","SliderHandleDirective","active","role","tabindex","ariaOrientation","ariaValueNow","ariaValueText","ariaValueMin","ariaValueMax","focus","SliderHandleDirective_Factory","SliderHandleDirective_HostBindings","ɵɵclassProp","features","ɵɵInheritDefinitionFeature","SliderLabelDirective","_value","setValue","recalculateDimension","dimension","innerHTML","SliderLabelDirective_Factory","Tick","Dragging","difference","position","lowLimit","highLimit","ModelValues","compare","x","y","highValue","ModelChange","forceChange","NG5_SLIDER_CONTROL_VALUE_ACCESSOR","provide","useExisting","SliderComponent","multi","elementRef","zone","valueChange","highValueChange","options","userChangeStart","userChange","userChangeEnd","initHasRun","inputModelChangeSubject","inputModelChangeSubscription","outputModelChangeSubject","outputModelChangeSubscription","viewLowValue","viewHighValue","viewOptions","handleHalfDimension","maxHandlePosition","currentTrackingPointer","currentFocusPointer","firstKeyDown","touchId","dragging","sliderElementVerticalClass","sliderElementAnimateClass","sliderElementDisabledAttr","barStyle","minPointerStyle","maxPointerStyle","fullBarTransparentClass","selectionBarDraggableClass","ticksUnderValuesClass","intermediateTicks","ticks","onMoveEventListener","onEndEventListener","resizeObserver","onTouchedCallback","onChangeCallback","manualRefresh","unsubscribeManualRefresh","manualRefreshSubscription","setTimeout","calculateViewDimensionsAndDetectChanges","triggerFocus","unsubscribeTriggerFocus","triggerFocusSubscription","pointerType","focusPointer","ngOnInit","Object","assign","updateDisabledState","updateVerticalState","ngAfterViewInit","applyOptions","subscribeInputModelChangeSubject","subscribeOutputModelChangeSubject","renormaliseModelValues","modelValueToViewValue","manageElementsStyle","calculateViewDimensions","addAccessibility","updateCeilLabel","updateFloorLabel","initHandles","manageEventsBindings","subscribeResizeObserver","detectChanges","ngOnChanges","changes","onChangeOptions","internalChange","ngOnDestroy","unbindEvents","unsubscribeResizeObserver","unsubscribeInputModelChangeSubject","unsubscribeOutputModelChangeSubject","writeValue","obj","Array","registerOnChange","registerOnTouched","setDisabledState","isDisabled","onResize","interval","modelChange","applyInputModelChange","publishOutputModelChange","observe","disconnect","unsubscribeOnMove","unsubscribeOnEnd","getPointerElement","minHandleElement","maxHandleElement","getCurrentTrackingValue","NaN","viewValueToModelValue","viewValue","getStepValue","sliderValue","applyViewChange","userEventInitiated","normalisedModelChange","normaliseModelValues","normalisationChange","updateLowHandle","valueToPosition","updateHighHandle","updateSelectionBar","updateTicksScale","updateAriaAttributes","updateCombinedLabel","emitOutputs","emit","getChangeContext","input","normalisedInput","roundStep","tempValue","previousModelValues","normalisedModelValues","previousInputEventsInterval","previousOutputEventsInterval","resetSlider","applyStepsArrayOptions","applyFloorCeilOptions","minValue","maxValue","Error","String","refocusPointerIfNeeded","onPointerFocus","element","updateScale","floorLabelElement","ceilLabelElement","hideLabelsForTicks","minHandleLabelElement","maxHandleLabelElement","combinedLabelElement","selectionBarElement","leftOuterSelectionBarElement","rightOuterSelectionBarElement","bindEvents","getAllSliderElements","fullBarElement","ticksElement","toString","handleWidth","getTicksArray","reverse","newTicks","translation","tick","isTickSelected","transform","getDisplayValue","i","center","updateHandles","which","newPos","getHandleLabelPos","labelType","labelDimension","nearHandlePos","endOfBarPos","backgroundColor","updateFloorAndCeilLabelsVisibility","floorLabelHidden","ceilLabelHidden","isMinLabelAtFloor","isLabelBelowFloorLabel","isMinLabelAtCeil","isLabelAboveCeilLabel","isMaxLabelAtCeil","isCombinedLabelAtFloor","isCombinedLabelAtCeil","hideCeil","hideFloor","label","floorPos","floorDim","ceilPos","ceilDim","isSelectionBarFromRight","positionForRange","centerPosition","isModelGreaterThanCenter","color","offset","reversed","direction","backgroundImage","from","to","backgroundPosition","backgroundSize","isLabelOverlap","lowDisplayValue","highDisplayValue","combinedLabelValue","customStep","steppedDifference","fn","positionToValue","getEventXY","targetTouchId","MouseEvent","clientY","clientX","touchIndex","identifier","getEventPosition","sliderElementBoundingRect","sliderPos","eventPos","getNearestHandle","distanceMin","distanceMax","onBarStart","onStart","bindMove","bindEnd","simulateImmediateMove","simulateImmediateEnd","onDragStart","stopPropagation","preventDefault","pointerElement","onMoveCallback","e","onDragMove","onMove","document","onEndCallback","onEnd","changedTouches","fromTick","touchForThisSlider","newValue","ceilValue","floorValue","positionTrackingHandle","onPointerBlur","onKeyboardEvent","onKeyUp","pointer","getKeyActions","currentValue","valueRange","increaseStep","decreaseStep","increasePage","decreasePage","actions","UP","DOWN","LEFT","RIGHT","PAGEUP","PAGEDOWN","HOME","END","keyCode","keys","key","action","actionValue","newMinValue","newMaxValue","positionTrackingBar","getMinValue","outOfBounds","isAbove","isRTL","getMaxValue","ceilLimit","floorLimit","floorHandleElement","ceilHandleElement","isUnderFloorLimit","isOverCeilLimit","applyMinMaxLimit","applyPushRange","applyMinMaxRange","oppositeValue","changeContext","SliderComponent_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","SliderComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","SliderComponent_Query","ɵɵviewQuery","hostAttrs","SliderComponent_HostBindings","ɵɵlistener","SliderComponent_resize_HostBindingHandler","$event","ɵɵresolveWindow","inputs","outputs","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","SliderComponent_Template","directives","NgStyle","NgForOf","NgClass","TooltipWrapperComponent","NgIf","styles","read","host","class","providers","TooltipWrapperComponent_Factory","TooltipWrapperComponent_Template","NgTemplateOutlet","Ng5SliderModule","Ng5SliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ɵb","ɵc","ɵd","ɵa","ɵe"],"mappings":"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IAA1B;AACA;AACR;AACA;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,OAAKC,oBAAL,GAA4B,IAA5B;AACA;AACR;AACA;;AACQ,OAAKC,YAAL,GAAoB,IAApB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,OAAKC,eAAL,GAAuB,IAAvB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,OAAKC,eAAL,GAAuB,IAAvB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,KAAL,GAAa,CAAb;AACA;AACR;AACA;AACA;AACA;;AACQ,OAAKC,WAAL,GAAmB,IAAnB;AACA;AACR;AACA;AACA;AACA;;AACQ,OAAKC,YAAL,GAAoB,IAApB;AACA;AACR;AACA;;AACQ,OAAKC,WAAL,GAAmB,KAAnB;AACA;AACR;AACA;;AACQ,OAAKC,eAAL,GAAuB,KAAvB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,WAAL,GAAmB,KAAnB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,OAAKC,gBAAL,GAAwB,KAAxB;AACA;AACR;AACA;;AACQ,OAAKC,kBAAL,GAA0B,IAA1B;AACA;AACR;AACA;;AACQ,OAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;AACA;AACA;;AACQ,OAAKC,qBAAL,GAA6B,IAA7B;AACA;AACR;AACA;AACA;AACA;;AACQ,OAAKC,qBAAL,GAA6B,IAA7B;AACA;AACR;AACA;AACA;AACA;;AACQ,OAAKC,cAAL,GAAsB,EAAtB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,oBAAL,GAA4B,IAA5B;AACA;AACR;AACA;;AACQ,OAAKC,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,cAAL,GAAsB,IAAtB;AACA;AACR;AACA;;AACQ,OAAKC,aAAL,GAAqB,IAArB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,kBAAL,GAA0B,IAA1B;AACA;AACR;AACA;;AACQ,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","sourcesContent":["import { Subject } from 'rxjs';\nimport { Renderer2, Directive, ElementRef, HostBinding, ChangeDetectorRef, Component, ViewChild, HostListener, Input, EventEmitter, Output, ContentChild, forwardRef, NgZone, NgModule } from '@angular/core';\nimport { throttleTime, tap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport detectPassiveEvents from 'detect-passive-events';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"tooltipTemplate\"];\nconst _c1 = [\"leftOuterSelectionBar\"];\nconst _c2 = [\"rightOuterSelectionBar\"];\nconst _c3 = [\"fullBar\"];\nconst _c4 = [\"selectionBar\"];\nconst _c5 = [\"minHandle\"];\nconst _c6 = [\"maxHandle\"];\nconst _c7 = [\"floorLabel\"];\nconst _c8 = [\"ceilLabel\"];\nconst _c9 = [\"minHandleLabel\"];\nconst _c10 = [\"maxHandleLabel\"];\nconst _c11 = [\"combinedLabel\"];\nconst _c12 = [\"ticksElement\"];\nfunction SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng5-slider-tooltip-wrapper\", 31);\n} if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r14.tooltipTemplate)(\"tooltip\", t_r13.valueTooltip)(\"placement\", t_r13.valueTooltipPlacement)(\"content\", t_r13.value);\n} }\nfunction SliderComponent_span_28_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 32);\n} if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", t_r13.legend, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c13 = function (a0) { return { \"ng5-slider-selected\": a0 }; };\nfunction SliderComponent_span_28_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 27);\n    ɵngcc0.ɵɵelement(1, \"ng5-slider-tooltip-wrapper\", 28);\n    ɵngcc0.ɵɵtemplate(2, SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template, 1, 4, \"ng5-slider-tooltip-wrapper\", 29);\n    ɵngcc0.ɵɵtemplate(3, SliderComponent_span_28_span_3_Template, 1, 1, \"span\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const t_r13 = ctx.$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c13, t_r13.selected))(\"ngStyle\", t_r13.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r12.tooltipTemplate)(\"tooltip\", t_r13.tooltip)(\"placement\", t_r13.tooltipPlacement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.value != null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.legend != null);\n} }\nfunction TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template(rf, ctx) { }\nfunction TooltipWrapperComponent_ng_container_0_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n} }\nconst _c14 = function (a0, a1, a2) { return { tooltip: a0, placement: a1, content: a2 }; };\nfunction TooltipWrapperComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_0_1_Template, 1, 0, undefined, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c14, ctx_r0.tooltip, ctx_r0.placement, ctx_r0.content));\n} }\nfunction TooltipWrapperComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r1.tooltip)(\"data-tooltip-placement\", ctx_r1.placement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.content, \" \");\n} }\nconst PointerType = {\n    /** Low pointer */\n    Min: 0,\n    /** High pointer */\n    Max: 1,\n};\nPointerType[PointerType.Min] = \"Min\";\nPointerType[PointerType.Max] = \"Max\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nconst LabelType = {\n    /** Label above low pointer */\n    Low: 0,\n    /** Label above high pointer */\n    High: 1,\n    /** Label for minimum slider value */\n    Floor: 2,\n    /** Label for maximum slider value */\n    Ceil: 3,\n    /** Label below legend tick */\n    TickValue: 4,\n};\nLabelType[LabelType.Low] = \"Low\";\nLabelType[LabelType.High] = \"High\";\nLabelType[LabelType.Floor] = \"Floor\";\nLabelType[LabelType.Ceil] = \"Ceil\";\nLabelType[LabelType.TickValue] = \"TickValue\";\n/**\n * Custom step definition\n *\n * This can be used to specify custom values and legend values for slider ticks\n * @record\n */\n\n/**\n * Slider options\n */\nclass Options {\n    constructor() {\n        /**\n         * Minimum value for a slider.\n         * Not applicable when using stepsArray.\n         */\n        this.floor = 0;\n        /**\n         * Maximum value for a slider.\n         * Not applicable when using stepsArray.\n         */\n        this.ceil = null;\n        /**\n         * Step between each value.\n         * Not applicable when using stepsArray.\n         */\n        this.step = 1;\n        /**\n         * The minimum range authorized on the slider.\n         * Applies to range slider only.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.minRange = null;\n        /**\n         * The maximum range authorized on the slider.\n         * Applies to range slider only.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.maxRange = null;\n        /**\n         * Set to true to have a push behavior. When the min handle goes above the max,\n         * the max is moved as well (and vice-versa). The range between min and max is\n         * defined by the step option (defaults to 1) and can also be overriden by\n         * the minRange option. Applies to range slider only.\n         */\n        this.pushRange = false;\n        /**\n         * The minimum value authorized on the slider.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.minLimit = null;\n        /**\n         * The maximum value authorized on the slider.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.maxLimit = null;\n        /**\n         * Custom translate function. Use this if you want to translate values displayed\n         * on the slider.\n         */\n        this.translate = null;\n        /**\n         * Custom function for combining overlapping labels in range slider.\n         * It takes the min and max values (already translated with translate fuction)\n         * and should return how these two values should be combined.\n         * If not provided, the default function will join the two values with\n         * ' - ' as separator.\n         */\n        this.combineLabels = null;\n        /**\n         * Use to display legend under ticks (thus, it needs to be used along with\n         * showTicks or showTicksValues). The function will be called with each tick\n         * value and returned content will be displayed under the tick as a legend.\n         * If the returned value is null, then no legend is displayed under\n         * the corresponding tick.You can also directly provide the legend values\n         * in the stepsArray option.\n         */\n        this.getLegend = null;\n        /**\n         * If you want to display a slider with non linear/number steps.\n         * Just pass an array with each slider value and that's it; the floor, ceil and step settings\n         * of the slider will be computed automatically.\n         * By default, the value model and valueHigh model values will be the value of the selected item\n         * in the stepsArray.\n         * They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n         * option to true.\n         */\n        this.stepsArray = null;\n        /**\n         * Set to true to bind the index of the selected item to value model and valueHigh model.\n         */\n        this.bindIndexForStepsArray = false;\n        /**\n         * When set to true and using a range slider, the range can be dragged by the selection bar.\n         * Applies to range slider only.\n         */\n        this.draggableRange = false;\n        /**\n         * Same as draggableRange but the slider range can't be changed.\n         * Applies to range slider only.\n         */\n        this.draggableRangeOnly = false;\n        /**\n         * Set to true to always show the selection bar before the slider handle.\n         */\n        this.showSelectionBar = false;\n        /**\n         * Set to true to always show the selection bar after the slider handle.\n         */\n        this.showSelectionBarEnd = false;\n        /**\n         * Set a number to draw the selection bar between this value and the slider handle.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.showSelectionBarFromValue = null;\n        /**\n         * Only for range slider. Set to true to visualize in different colour the areas\n         * on the left/right (top/bottom for vertical range slider) of selection bar between the handles.\n         */\n        this.showOuterSelectionBars = false;\n        /**\n         * Set to true to hide pointer labels\n         */\n        this.hidePointerLabels = false;\n        /**\n         * Set to true to hide min / max labels\n         */\n        this.hideLimitLabels = false;\n        /**\n         * Set to false to disable the auto-hiding behavior of the limit labels.\n         */\n        this.autoHideLimitLabels = true;\n        /**\n         * Set to true to make the slider read-only.\n         */\n        this.readOnly = false;\n        /**\n         * Set to true to disable the slider.\n         */\n        this.disabled = false;\n        /**\n         * Throttle interval for mouse events in milliseconds.\n         * This is provided to avoid a flood of events when moving the slider with mouse.\n         */\n        this.mouseEventsInterval = 50;\n        /**\n         * Throttle interval for touch events in milliseconds.\n         * This is provided to avoid a flood of events when moving the slider with touch gesture.\n         */\n        this.touchEventsInterval = 50;\n        /**\n         * Throttle interval for input changes (changes to bindings or reactive form inputs)\n         * This is provided to avoid a flood of events on frequent input binding changes affecting performance.\n         */\n        this.inputEventsInterval = 100;\n        /**\n         * Throttle interval for output changes (signalling changes to output bindings and user callbacks)\n         * This is provided to avoid a flood of outgoing events affecting Angular app performance.\n         */\n        this.outputEventsInterval = 100;\n        /**\n         * Set to true to display a tick for each step of the slider.\n         */\n        this.showTicks = false;\n        /**\n         * Set to true to display a tick and the step value for each step of the slider..\n         */\n        this.showTicksValues = false;\n        /* The step between each tick to display. If not set, the step value is used.\n            Not used when ticksArray is specified. */\n        this.tickStep = null;\n        /* The step between displaying each tick step value. */\n        this.tickValueStep = 1;\n        /**\n         * Use to display ticks at specific positions.\n         * The array contains the index of the ticks that should be displayed.\n         * For example, [0, 1, 5] will display a tick for the first, second and sixth values.\n         */\n        this.ticksArray = null;\n        /**\n         * Used to display a tooltip when a tick is hovered.\n         * Set to a function that returns the tooltip content for a given value.\n         */\n        this.ticksTooltip = null;\n        /**\n         * Same as ticksTooltip but for ticks values.\n         */\n        this.ticksValuesTooltip = null;\n        /**\n         * Set to true to display the slider vertically.\n         * The slider will take the full height of its parent.\n         * Changing this value at runtime is not currently supported.\n         */\n        this.vertical = false;\n        /**\n         * Function that returns the current color of the selection bar.\n         * If your color won't change, don't use this option but set it through CSS.\n         * If the returned color depends on a model value (either value or valueHigh),\n         * you should use the argument passed to the function.\n         * Indeed, when the function is called, there is no certainty that the model\n         * has already been updated.\n         */\n        this.getSelectionBarColor = null;\n        /**\n         * Function that returns the color of a tick. showTicks must be enabled.\n         */\n        this.getTickColor = null;\n        /**\n         * Function that returns the current color of a pointer.\n         * If your color won't change, don't use this option but set it through CSS.\n         * If the returned color depends on a model value (either value or valueHigh),\n         * you should use the argument passed to the function.\n         * Indeed, when the function is called, there is no certainty that the model has already been updated.\n         * To handle range slider pointers independently, you should evaluate pointerType within the given\n         * function where \"min\" stands for value model and \"max\" for valueHigh model values.\n         */\n        this.getPointerColor = null;\n        /**\n         * Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n         * Left/bottom arrows: -1\n         * Right/top arrows: +1\n         * Page-down: -10%\n         * Page-up: +10%\n         * Home: minimum value\n         * End: maximum value\n         */\n        this.keyboardSupport = true;\n        /**\n         * If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n         * so that the slider is rendered properly and the events are handled correctly.\n         */\n        this.scale = 1;\n        /**\n         * Set to true to force the value to be rounded to the step, even when modified from the outside.\n         * When set to false, if the model values are modified from outside the slider, they are not rounded\n         * and can be between two steps.\n         */\n        this.enforceStep = true;\n        /**\n         * Set to true to force the value to be normalised to allowed range (floor to ceil), even when modified from the outside.\n         * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n         * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n         */\n        this.enforceRange = true;\n        /**\n         * Set to true to prevent to user from switching the min and max handles. Applies to range slider only.\n         */\n        this.noSwitching = false;\n        /**\n         * Set to true to only bind events on slider handles.\n         */\n        this.onlyBindHandles = false;\n        /**\n         * Set to true to show graphs right to left.\n         * If vertical is true it will be from top to bottom and left / right arrow functions reversed.\n         */\n        this.rightToLeft = false;\n        /**\n         * Set to true to reverse keyboard navigation:\n         * Right/top arrows: -1\n         * Left/bottom arrows: +1\n         * Page-up: -10%\n         * Page-down: +10%\n         * End: minimum value\n         * Home: maximum value\n         */\n        this.reversedControls = false;\n        /**\n         * Set to true to keep the slider labels inside the slider bounds.\n         */\n        this.boundPointerLabels = true;\n        /**\n         * Set to true to use a logarithmic scale to display the slider.\n         */\n        this.logScale = false;\n        /**\n         * Function that returns the position on the slider for a given value.\n         * The position must be a percentage between 0 and 1.\n         * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n         */\n        this.customValueToPosition = null;\n        /**\n         * Function that returns the value for a given position on the slider.\n         * The position is a percentage between 0 and 1.\n         * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n         */\n        this.customPositionToValue = null;\n        /**\n         * Precision limit for calculated values.\n         * Values used in calculations will be rounded to this number of significant digits\n         * to prevent accumulating small floating-point errors.\n         */\n        this.precisionLimit = 12;\n        /**\n         * Use to display the selection bar as a gradient.\n         * The given object must contain from and to properties which are colors.\n         */\n        this.selectionBarGradient = null;\n        /**\n         * Use to add a label directly to the slider for accessibility. Adds the aria-label attribute.\n         */\n        this.ariaLabel = null;\n        /**\n         * Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n         * Adds the aria-labelledby attribute.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute.\n         */\n        this.ariaLabelHigh = null;\n        /**\n         * Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n         * Adds the aria-labelledby attribute.\n         */\n        this.ariaLabelledByHigh = null;\n        /**\n         * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle\n         */\n        this.handleDimension = null;\n        /**\n         * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar\n         */\n        this.barDimension = null;\n        /**\n         * Enable/disable CSS animations\n         */\n        this.animate = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass ChangeContext {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\nclass ValueHelper {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static isNullOrUndefined(value) {\n        return value === undefined || value === null;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static linearValueToPosition(val, minVal, maxVal) {\n        const /** @type {?} */ range = maxVal - minVal;\n        return (val - minVal) / range;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static logValueToPosition(val, minVal, maxVal) {\n        val = Math.log(val);\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        const /** @type {?} */ range = maxVal - minVal;\n        return (val - minVal) / range;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static linearPositionToValue(percent, minVal, maxVal) {\n        return percent * (maxVal - minVal) + minVal;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static logPositionToValue(percent, minVal, maxVal) {\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        const /** @type {?} */ value = percent * (maxVal - minVal) + minVal;\n        return Math.exp(value);\n    }\n    /**\n     * @param {?} modelValue\n     * @param {?} stepsArray\n     * @return {?}\n     */\n    static findStepIndex(modelValue, stepsArray) {\n        const /** @type {?} */ differences = stepsArray.map((step) => Math.abs(modelValue - step.value));\n        let /** @type {?} */ minDifferenceIndex = 0;\n        for (let /** @type {?} */ index = 0; index < stepsArray.length; index++) {\n            if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n                minDifferenceIndex = index;\n            }\n        }\n        return minDifferenceIndex;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Helper with compatibility functions to support different browsers\n */\nclass CompatibilityHelper {\n    /**\n     * Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari)\n     * @param {?} event\n     * @return {?}\n     */\n    static isTouchEvent(event) {\n        if ((/** @type {?} */ (window)).TouchEvent !== undefined) {\n            return event instanceof TouchEvent;\n        }\n        return event.touches !== undefined;\n    }\n    /**\n     * Detect presence of ResizeObserver API\n     * @return {?}\n     */\n    static isResizeObserverAvailable() {\n        return (/** @type {?} */ (window)).ResizeObserver !== undefined;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Helper with mathematical functions\n */\nclass MathHelper {\n    /**\n     * @param {?} value\n     * @param {?} precisionLimit\n     * @return {?}\n     */\n    static roundToPrecisionLimit(value, precisionLimit) {\n        return +(value.toPrecision(precisionLimit));\n    }\n    /**\n     * @param {?} value\n     * @param {?} floor\n     * @param {?} ceil\n     * @return {?}\n     */\n    static clampToRange(value, floor, ceil) {\n        return Math.min(Math.max(value, floor), ceil);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass EventListener {\n    constructor() {\n        this.eventName = null;\n        this.events = null;\n        this.eventsSubscription = null;\n        this.teardownCallback = null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\nclass EventListenerHelper {\n    /**\n     * @param {?} renderer\n     */\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    /**\n     * @param {?} nativeElement\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} throttleInterval\n     * @return {?}\n     */\n    attachPassiveEventListener(nativeElement, eventName, callback, throttleInterval) {\n        // Only use passive event listeners if the browser supports it\n        if (detectPassiveEvents.hasSupport !== true) {\n            return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n        }\n        // Angular doesn't support passive event handlers (yet), so we need to roll our own code using native functions\n        const /** @type {?} */ listener = new EventListener();\n        listener.eventName = eventName;\n        listener.events = new Subject();\n        const /** @type {?} */ observerCallback = (event) => {\n            listener.events.next(event);\n        };\n        nativeElement.addEventListener(eventName, observerCallback, { passive: true, capture: false });\n        listener.teardownCallback = () => {\n            nativeElement.removeEventListener(eventName, observerCallback, { passive: true, capture: false });\n        };\n        listener.eventsSubscription = listener.events\n            .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n            ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((event) => {\n            callback(event);\n        });\n        return listener;\n    }\n    /**\n     * @param {?} eventListener\n     * @return {?}\n     */\n    detachEventListener(eventListener) {\n        if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n            eventListener.eventsSubscription.unsubscribe();\n            eventListener.eventsSubscription = null;\n        }\n        if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n            eventListener.events.complete();\n            eventListener.events = null;\n        }\n        if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n            eventListener.teardownCallback();\n            eventListener.teardownCallback = null;\n        }\n    }\n    /**\n     * @param {?} nativeElement\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} throttleInterval\n     * @return {?}\n     */\n    attachEventListener(nativeElement, eventName, callback, throttleInterval) {\n        const /** @type {?} */ listener = new EventListener();\n        listener.eventName = eventName;\n        listener.events = new Subject();\n        const /** @type {?} */ observerCallback = (event) => {\n            listener.events.next(event);\n        };\n        listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n        listener.eventsSubscription = listener.events\n            .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n            ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((event) => { callback(event); });\n        return listener;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        this.elemRef = elemRef;\n        this.renderer = renderer;\n        this.changeDetectionRef = changeDetectionRef;\n        this._position = 0;\n        this._dimension = 0;\n        this._alwaysHide = false;\n        this._vertical = false;\n        this._scale = 1;\n        this.opacity = 1;\n        this.visibility = 'visible';\n        this.left = '';\n        this.bottom = '';\n        this.height = '';\n        this.width = '';\n        this.eventListeners = [];\n        this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    /**\n     * @return {?}\n     */\n    get position() {\n        return this._position;\n    }\n    /**\n     * @return {?}\n     */\n    get dimension() {\n        return this._dimension;\n    }\n    /**\n     * @return {?}\n     */\n    get alwaysHide() {\n        return this._alwaysHide;\n    }\n    /**\n     * @return {?}\n     */\n    get vertical() {\n        return this._vertical;\n    }\n    /**\n     * @return {?}\n     */\n    get scale() {\n        return this._scale;\n    }\n    /**\n     * @param {?} hide\n     * @return {?}\n     */\n    setAlwaysHide(hide) {\n        this._alwaysHide = hide;\n        if (hide) {\n            this.visibility = 'hidden';\n        }\n        else {\n            this.visibility = 'visible';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        this.opacity = 0;\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        if (this.alwaysHide) {\n            return;\n        }\n        this.opacity = 1;\n    }\n    /**\n     * @return {?}\n     */\n    isVisible() {\n        if (this.alwaysHide) {\n            return false;\n        }\n        return this.opacity !== 0;\n    }\n    /**\n     * @param {?} vertical\n     * @return {?}\n     */\n    setVertical(vertical) {\n        this._vertical = vertical;\n        if (this._vertical) {\n            this.left = '';\n            this.width = '';\n        }\n        else {\n            this.bottom = '';\n            this.height = '';\n        }\n    }\n    /**\n     * @param {?} scale\n     * @return {?}\n     */\n    setScale(scale) {\n        this._scale = scale;\n    }\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n    setPosition(pos) {\n        if (this._position !== pos && !this.isRefDestroyed()) {\n            this.changeDetectionRef.markForCheck();\n        }\n        this._position = pos;\n        if (this._vertical) {\n            this.bottom = Math.round(pos) + 'px';\n        }\n        else {\n            this.left = Math.round(pos) + 'px';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateDimension() {\n        const /** @type {?} */ val = this.getBoundingClientRect();\n        if (this.vertical) {\n            this._dimension = (val.bottom - val.top) * this.scale;\n        }\n        else {\n            this._dimension = (val.right - val.left) * this.scale;\n        }\n    }\n    /**\n     * @param {?} dim\n     * @return {?}\n     */\n    setDimension(dim) {\n        if (this._dimension !== dim && !this.isRefDestroyed()) {\n            this.changeDetectionRef.markForCheck();\n        }\n        this._dimension = dim;\n        if (this._vertical) {\n            this.height = Math.round(dim) + 'px';\n        }\n        else {\n            this.width = Math.round(dim) + 'px';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getBoundingClientRect() {\n        return this.elemRef.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n    on(eventName, callback, debounceInterval) {\n        const /** @type {?} */ listener = this.eventListenerHelper.attachEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n        this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n    onPassive(eventName, callback, debounceInterval) {\n        const /** @type {?} */ listener = this.eventListenerHelper.attachPassiveEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n        this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?=} eventName\n     * @return {?}\n     */\n    off(eventName) {\n        let /** @type {?} */ listenersToKeep;\n        let /** @type {?} */ listenersToRemove;\n        if (!ValueHelper.isNullOrUndefined(eventName)) {\n            listenersToKeep = this.eventListeners.filter((event) => event.eventName !== eventName);\n            listenersToRemove = this.eventListeners.filter((event) => event.eventName === eventName);\n        }\n        else {\n            listenersToKeep = [];\n            listenersToRemove = this.eventListeners;\n        }\n        for (const /** @type {?} */ listener of listenersToRemove) {\n            this.eventListenerHelper.detachEventListener(listener);\n        }\n        this.eventListeners = listenersToKeep;\n    }\n    /**\n     * @return {?}\n     */\n    isRefDestroyed() {\n        return ValueHelper.isNullOrUndefined(this.changeDetectionRef) || this.changeDetectionRef['destroyed'];\n    }\n}\nSliderElementDirective.ɵfac = function SliderElementDirective_Factory(t) { return new (t || SliderElementDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderElementDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SliderElementDirective, selectors: [[\"\", \"ng5SliderElement\", \"\"]], hostVars: 12, hostBindings: function SliderElementDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"opacity\", ctx.opacity)(\"visibility\", ctx.visibility)(\"left\", ctx.left)(\"bottom\", ctx.bottom)(\"height\", ctx.height)(\"width\", ctx.width);\n    } } });\n/** @nocollapse */\nSliderElementDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n];\nSliderElementDirective.propDecorators = {\n    \"opacity\": [{ type: HostBinding, args: ['style.opacity',] },],\n    \"visibility\": [{ type: HostBinding, args: ['style.visibility',] },],\n    \"left\": [{ type: HostBinding, args: ['style.left',] },],\n    \"bottom\": [{ type: HostBinding, args: ['style.bottom',] },],\n    \"height\": [{ type: HostBinding, args: ['style.height',] },],\n    \"width\": [{ type: HostBinding, args: ['style.width',] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderElementDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng5SliderElement]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { opacity: [{\n            type: HostBinding,\n            args: ['style.opacity']\n        }], visibility: [{\n            type: HostBinding,\n            args: ['style.visibility']\n        }], left: [{\n            type: HostBinding,\n            args: ['style.left']\n        }], bottom: [{\n            type: HostBinding,\n            args: ['style.bottom']\n        }], height: [{\n            type: HostBinding,\n            args: ['style.height']\n        }], width: [{\n            type: HostBinding,\n            args: ['style.width']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass SliderHandleDirective extends SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        super(elemRef, renderer, changeDetectionRef);\n        this.active = false;\n        this.role = '';\n        this.tabindex = '';\n        this.ariaOrientation = '';\n        this.ariaLabel = '';\n        this.ariaLabelledBy = '';\n        this.ariaValueNow = '';\n        this.ariaValueText = '';\n        this.ariaValueMin = '';\n        this.ariaValueMax = '';\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elemRef.nativeElement.focus();\n    }\n}\nSliderHandleDirective.ɵfac = function SliderHandleDirective_Factory(t) { return new (t || SliderHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderHandleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SliderHandleDirective, selectors: [[\"\", \"ng5SliderHandle\", \"\"]], hostVars: 11, hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex)(\"aria-orientation\", ctx.ariaOrientation)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-valuenow\", ctx.ariaValueNow)(\"aria-valuetext\", ctx.ariaValueText)(\"aria-valuemin\", ctx.ariaValueMin)(\"aria-valuemax\", ctx.ariaValueMax);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-active\", ctx.active);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nSliderHandleDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n];\nSliderHandleDirective.propDecorators = {\n    \"active\": [{ type: HostBinding, args: ['class.ng5-slider-active',] },],\n    \"role\": [{ type: HostBinding, args: ['attr.role',] },],\n    \"tabindex\": [{ type: HostBinding, args: ['attr.tabindex',] },],\n    \"ariaOrientation\": [{ type: HostBinding, args: ['attr.aria-orientation',] },],\n    \"ariaLabel\": [{ type: HostBinding, args: ['attr.aria-label',] },],\n    \"ariaLabelledBy\": [{ type: HostBinding, args: ['attr.aria-labelledby',] },],\n    \"ariaValueNow\": [{ type: HostBinding, args: ['attr.aria-valuenow',] },],\n    \"ariaValueText\": [{ type: HostBinding, args: ['attr.aria-valuetext',] },],\n    \"ariaValueMin\": [{ type: HostBinding, args: ['attr.aria-valuemin',] },],\n    \"ariaValueMax\": [{ type: HostBinding, args: ['attr.aria-valuemax',] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderHandleDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng5SliderHandle]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { active: [{\n            type: HostBinding,\n            args: ['class.ng5-slider-active']\n        }], role: [{\n            type: HostBinding,\n            args: ['attr.role']\n        }], tabindex: [{\n            type: HostBinding,\n            args: ['attr.tabindex']\n        }], ariaOrientation: [{\n            type: HostBinding,\n            args: ['attr.aria-orientation']\n        }], ariaLabel: [{\n            type: HostBinding,\n            args: ['attr.aria-label']\n        }], ariaLabelledBy: [{\n            type: HostBinding,\n            args: ['attr.aria-labelledby']\n        }], ariaValueNow: [{\n            type: HostBinding,\n            args: ['attr.aria-valuenow']\n        }], ariaValueText: [{\n            type: HostBinding,\n            args: ['attr.aria-valuetext']\n        }], ariaValueMin: [{\n            type: HostBinding,\n            args: ['attr.aria-valuemin']\n        }], ariaValueMax: [{\n            type: HostBinding,\n            args: ['attr.aria-valuemax']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass SliderLabelDirective extends SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        super(elemRef, renderer, changeDetectionRef);\n        this._value = null;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(value) {\n        let /** @type {?} */ recalculateDimension = false;\n        if (!this.alwaysHide &&\n            (ValueHelper.isNullOrUndefined(this.value) ||\n                this.value.length !== value.length ||\n                (this.value.length > 0 && this.dimension === 0))) {\n            recalculateDimension = true;\n        }\n        this._value = value;\n        this.elemRef.nativeElement.innerHTML = value;\n        // Update dimension only when length of the label have changed\n        if (recalculateDimension) {\n            this.calculateDimension();\n        }\n    }\n}\nSliderLabelDirective.ɵfac = function SliderLabelDirective_Factory(t) { return new (t || SliderLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderLabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SliderLabelDirective, selectors: [[\"\", \"ng5SliderLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nSliderLabelDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderLabelDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng5SliderLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass Tick {\n    constructor() {\n        this.selected = false;\n        this.style = {};\n        this.tooltip = null;\n        this.tooltipPlacement = null;\n        this.value = null;\n        this.valueTooltip = null;\n        this.valueTooltipPlacement = null;\n        this.legend = null;\n    }\n}\nclass Dragging {\n    constructor() {\n        this.active = false;\n        this.value = 0;\n        this.difference = 0;\n        this.position = 0;\n        this.lowLimit = 0;\n        this.highLimit = 0;\n    }\n}\nclass ModelValues {\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    static compare(x, y) {\n        if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        return x.value === y.value && x.highValue === y.highValue;\n    }\n}\nclass ModelChange extends ModelValues {\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    static compare(x, y) {\n        if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        return x.value === y.value &&\n            x.highValue === y.highValue &&\n            x.forceChange === y.forceChange;\n    }\n}\nconst NG5_SLIDER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef(() => SliderComponent),\n    multi: true,\n};\nclass SliderComponent {\n    /**\n     * @param {?} renderer\n     * @param {?} elementRef\n     * @param {?} changeDetectionRef\n     * @param {?} zone\n     */\n    constructor(renderer, elementRef, changeDetectionRef, zone) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.changeDetectionRef = changeDetectionRef;\n        this.zone = zone;\n        // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n        this.value = null;\n        // Output for low value slider to support two-way bindings\n        this.valueChange = new EventEmitter();\n        // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n        this.highValue = null;\n        // Output for high value slider to support two-way bindings\n        this.highValueChange = new EventEmitter();\n        // An object with all the other options of the slider.\n        // Each option can be updated at runtime and the slider will automatically be re-rendered.\n        this.options = new Options();\n        // Event emitted when user starts interaction with the slider\n        this.userChangeStart = new EventEmitter();\n        // Event emitted on each change coming from user interaction\n        this.userChange = new EventEmitter();\n        // Event emitted when user finishes interaction with the slider\n        this.userChangeEnd = new EventEmitter();\n        this.initHasRun = false;\n        this.inputModelChangeSubject = new Subject();\n        this.inputModelChangeSubscription = null;\n        this.outputModelChangeSubject = new Subject();\n        this.outputModelChangeSubscription = null;\n        this.viewLowValue = null;\n        this.viewHighValue = null;\n        this.viewOptions = new Options();\n        this.handleHalfDimension = 0;\n        this.maxHandlePosition = 0;\n        this.currentTrackingPointer = null;\n        this.currentFocusPointer = null;\n        this.firstKeyDown = false;\n        this.touchId = null;\n        this.dragging = new Dragging();\n        // Host element class bindings\n        this.sliderElementVerticalClass = false;\n        this.sliderElementAnimateClass = false;\n        this.sliderElementDisabledAttr = null;\n        this.barStyle = {};\n        this.minPointerStyle = {};\n        this.maxPointerStyle = {};\n        this.fullBarTransparentClass = false;\n        this.selectionBarDraggableClass = false;\n        this.ticksUnderValuesClass = false;\n        this.intermediateTicks = false;\n        this.ticks = [];\n        this.eventListenerHelper = null;\n        this.onMoveEventListener = null;\n        this.onEndEventListener = null;\n        this.resizeObserver = null;\n        this.onTouchedCallback = null;\n        this.onChangeCallback = null;\n        this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    /**\n     * @param {?} manualRefresh\n     * @return {?}\n     */\n    set manualRefresh(manualRefresh) {\n        this.unsubscribeManualRefresh();\n        this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n            setTimeout(() => this.calculateViewDimensionsAndDetectChanges());\n        });\n    }\n    /**\n     * @param {?} triggerFocus\n     * @return {?}\n     */\n    set triggerFocus(triggerFocus) {\n        this.unsubscribeTriggerFocus();\n        this.triggerFocusSubscription = triggerFocus.subscribe((pointerType) => {\n            this.focusPointer(pointerType);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get range() {\n        return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n    }\n    /**\n     * @return {?}\n     */\n    get showTicks() {\n        return this.viewOptions.showTicks;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.viewOptions = new Options();\n        Object.assign(this.viewOptions, this.options);\n        // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n        // because these two settings are set through @HostBinding and Angular change detection\n        // mechanism doesn't like them changing in ngAfterViewInit()\n        this.updateDisabledState();\n        this.updateVerticalState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.applyOptions();\n        this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n        this.subscribeOutputModelChangeSubject(this.viewOptions.outputEventsInterval);\n        // Once we apply options, we need to normalise model values for the first time\n        this.renormaliseModelValues();\n        this.viewLowValue = this.modelValueToViewValue(this.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(this.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.updateVerticalState(); // need to run this again to cover changes to slider elements\n        this.manageElementsStyle();\n        this.updateDisabledState();\n        this.calculateViewDimensions();\n        this.addAccessibility();\n        this.updateCeilLabel();\n        this.updateFloorLabel();\n        this.initHandles();\n        this.manageEventsBindings();\n        this.subscribeResizeObserver();\n        this.initHasRun = true;\n        // Run change detection manually to resolve some issues when init procedure changes values used in the view\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Always apply options first\n        if (!ValueHelper.isNullOrUndefined(changes[\"options\"])) {\n            this.onChangeOptions();\n        }\n        // Then value changes\n        if (!ValueHelper.isNullOrUndefined(changes[\"value\"]) ||\n            !ValueHelper.isNullOrUndefined(changes[\"highValue\"])) {\n            this.inputModelChangeSubject.next({\n                value: this.value,\n                highValue: this.highValue,\n                forceChange: false,\n                internalChange: false\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.unsubscribeResizeObserver();\n        this.unsubscribeInputModelChangeSubject();\n        this.unsubscribeOutputModelChangeSubject();\n        this.unsubscribeManualRefresh();\n        this.unsubscribeTriggerFocus();\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    writeValue(obj) {\n        if (obj instanceof Array) {\n            this.value = obj[0];\n            this.highValue = obj[1];\n        }\n        else {\n            this.value = obj;\n        }\n        // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n        this.inputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            forceChange: false,\n            internalChange: false\n        });\n    }\n    /**\n     * @param {?} onChangeCallback\n     * @return {?}\n     */\n    registerOnChange(onChangeCallback) {\n        this.onChangeCallback = onChangeCallback;\n    }\n    /**\n     * @param {?} onTouchedCallback\n     * @return {?}\n     */\n    registerOnTouched(onTouchedCallback) {\n        this.onTouchedCallback = onTouchedCallback;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.viewOptions.disabled = isDisabled;\n        this.updateDisabledState();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize(event) {\n        this.calculateViewDimensionsAndDetectChanges();\n    }\n    /**\n     * @param {?=} interval\n     * @return {?}\n     */\n    subscribeInputModelChangeSubject(interval) {\n        this.inputModelChangeSubscription = this.inputModelChangeSubject\n            .pipe(distinctUntilChanged(ModelChange.compare),\n        // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n        // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n        filter((modelChange) => !modelChange.forceChange && !modelChange.internalChange), (!ValueHelper.isNullOrUndefined(interval))\n            ? throttleTime(interval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((modelChange) => this.applyInputModelChange(modelChange));\n    }\n    /**\n     * @param {?=} interval\n     * @return {?}\n     */\n    subscribeOutputModelChangeSubject(interval) {\n        this.outputModelChangeSubscription = this.outputModelChangeSubject\n            .pipe(distinctUntilChanged(ModelChange.compare), (!ValueHelper.isNullOrUndefined(interval))\n            ? throttleTime(interval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((modelChange) => this.publishOutputModelChange(modelChange));\n    }\n    /**\n     * @return {?}\n     */\n    subscribeResizeObserver() {\n        if (CompatibilityHelper.isResizeObserverAvailable()) {\n            this.resizeObserver = new ResizeObserver(() => this.calculateViewDimensionsAndDetectChanges());\n            this.resizeObserver.observe(this.elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeResizeObserver() {\n        if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOnMove() {\n        if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n            this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n            this.onMoveEventListener = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOnEnd() {\n        if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n            this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n            this.onEndEventListener = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeInputModelChangeSubject() {\n        if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n            this.inputModelChangeSubscription.unsubscribe();\n            this.inputModelChangeSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOutputModelChangeSubject() {\n        if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n            this.outputModelChangeSubscription.unsubscribe();\n            this.outputModelChangeSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeManualRefresh() {\n        if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n            this.manualRefreshSubscription.unsubscribe();\n            this.manualRefreshSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeTriggerFocus() {\n        if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n            this.triggerFocusSubscription.unsubscribe();\n            this.triggerFocusSubscription = null;\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    getPointerElement(pointerType) {\n        if (pointerType === PointerType.Min) {\n            return this.minHandleElement;\n        }\n        else if (pointerType === PointerType.Max) {\n            return this.maxHandleElement;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrentTrackingValue() {\n        if (this.currentTrackingPointer === PointerType.Min) {\n            return this.viewLowValue;\n        }\n        else if (this.currentTrackingPointer === PointerType.Max) {\n            return this.viewHighValue;\n        }\n        return null;\n    }\n    /**\n     * @param {?} modelValue\n     * @return {?}\n     */\n    modelValueToViewValue(modelValue) {\n        if (ValueHelper.isNullOrUndefined(modelValue)) {\n            return NaN;\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n        }\n        return +modelValue;\n    }\n    /**\n     * @param {?} viewValue\n     * @return {?}\n     */\n    viewValueToModelValue(viewValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            return this.getStepValue(viewValue);\n        }\n        return viewValue;\n    }\n    /**\n     * @param {?} sliderValue\n     * @return {?}\n     */\n    getStepValue(sliderValue) {\n        const /** @type {?} */ step = this.viewOptions.stepsArray[sliderValue];\n        return (!ValueHelper.isNullOrUndefined(step)) ? step.value : NaN;\n    }\n    /**\n     * @return {?}\n     */\n    applyViewChange() {\n        this.value = this.viewValueToModelValue(this.viewLowValue);\n        if (this.range) {\n            this.highValue = this.viewValueToModelValue(this.viewHighValue);\n        }\n        this.outputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            userEventInitiated: true,\n            forceChange: false\n        });\n        // At this point all changes are applied and outputs are emitted, so we should be done.\n        // However, input changes are communicated in different stream and we need to be ready to\n        // act on the next input change even if it is exactly the same as last input change.\n        // Therefore, we send a special event to reset the stream.\n        this.inputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            forceChange: false,\n            internalChange: true\n        });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n    applyInputModelChange(modelChange) {\n        const /** @type {?} */ normalisedModelChange = this.normaliseModelValues(modelChange);\n        // If normalised model change is different, apply the change to the model values\n        const /** @type {?} */ normalisationChange = !ModelValues.compare(modelChange, normalisedModelChange);\n        if (normalisationChange) {\n            this.value = normalisedModelChange.value;\n            this.highValue = normalisedModelChange.highValue;\n        }\n        this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        if (this.range) {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        }\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        this.updateAriaAttributes();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n        // At the end, we need to communicate the model change to the outputs as well\n        // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n        this.outputModelChangeSubject.next({\n            value: normalisedModelChange.value,\n            highValue: normalisedModelChange.highValue,\n            forceChange: normalisationChange,\n            userEventInitiated: false\n        });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n    publishOutputModelChange(modelChange) {\n        const /** @type {?} */ emitOutputs = () => {\n            this.valueChange.emit(modelChange.value);\n            if (this.range) {\n                this.highValueChange.emit(modelChange.highValue);\n            }\n            if (!ValueHelper.isNullOrUndefined(this.onChangeCallback)) {\n                if (this.range) {\n                    this.onChangeCallback([modelChange.value, modelChange.highValue]);\n                }\n                else {\n                    this.onChangeCallback(modelChange.value);\n                }\n            }\n            if (!ValueHelper.isNullOrUndefined(this.onTouchedCallback)) {\n                if (this.range) {\n                    this.onTouchedCallback([modelChange.value, modelChange.highValue]);\n                }\n                else {\n                    this.onTouchedCallback(modelChange.value);\n                }\n            }\n        };\n        if (modelChange.userEventInitiated) {\n            // If this change was initiated by a user event, we can emit outputs in the same tick\n            emitOutputs();\n            this.userChange.emit(this.getChangeContext());\n        }\n        else {\n            // But, if the change was initated by something else like a change in input bindings,\n            // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n            setTimeout(() => { emitOutputs(); });\n        }\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    normaliseModelValues(input) {\n        const /** @type {?} */ normalisedInput = new ModelValues();\n        normalisedInput.value = input.value;\n        normalisedInput.highValue = input.highValue;\n        if (this.viewOptions.enforceStep) {\n            normalisedInput.value = this.roundStep(normalisedInput.value);\n            if (this.range) {\n                normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n            }\n        }\n        // Don't attempt to normalise further when using steps array (steps may be out of order and that is perfectly fine)\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) || !this.viewOptions.enforceRange) {\n            return normalisedInput;\n        }\n        normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n        if (this.range) {\n            normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n        }\n        // Make sure that range slider invariant (value <= highValue) is always satisfied\n        if (this.range && input.value > input.highValue) {\n            // We know that both values are now clamped correctly, they may just be in the wrong order\n            // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n            if (this.viewOptions.noSwitching) {\n                normalisedInput.value = normalisedInput.highValue;\n            }\n            else {\n                const /** @type {?} */ tempValue = input.value;\n                normalisedInput.value = input.highValue;\n                normalisedInput.highValue = tempValue;\n            }\n        }\n        return normalisedInput;\n    }\n    /**\n     * @return {?}\n     */\n    renormaliseModelValues() {\n        const /** @type {?} */ previousModelValues = {\n            value: this.value,\n            highValue: this.highValue\n        };\n        const /** @type {?} */ normalisedModelValues = this.normaliseModelValues(previousModelValues);\n        if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n            this.value = normalisedModelValues.value;\n            this.highValue = normalisedModelValues.highValue;\n            this.outputModelChangeSubject.next({\n                value: this.value,\n                highValue: this.highValue,\n                forceChange: true,\n                userEventInitiated: false\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onChangeOptions() {\n        if (!this.initHasRun) {\n            return;\n        }\n        const /** @type {?} */ previousInputEventsInterval = this.viewOptions.inputEventsInterval;\n        const /** @type {?} */ previousOutputEventsInterval = this.viewOptions.outputEventsInterval;\n        this.applyOptions();\n        if (previousInputEventsInterval !== this.viewOptions.inputEventsInterval) {\n            this.unsubscribeInputModelChangeSubject();\n            this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n        }\n        if (previousOutputEventsInterval !== this.viewOptions.outputEventsInterval) {\n            this.unsubscribeInputModelChangeSubject();\n            this.subscribeInputModelChangeSubject(this.viewOptions.outputEventsInterval);\n        }\n        // With new options, we need to re-normalise model values if necessary\n        this.renormaliseModelValues();\n        this.viewLowValue = this.modelValueToViewValue(this.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(this.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.resetSlider();\n    }\n    /**\n     * @return {?}\n     */\n    applyOptions() {\n        this.viewOptions = new Options();\n        Object.assign(this.viewOptions, this.options);\n        this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n        this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n        if (this.viewOptions.draggableRangeOnly) {\n            this.viewOptions.draggableRange = true;\n        }\n        this.viewOptions.showTicks = this.viewOptions.showTicks ||\n            this.viewOptions.showTicksValues ||\n            !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n        if (this.viewOptions.showTicks &&\n            (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n            this.intermediateTicks = true;\n        }\n        this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar ||\n            this.viewOptions.showSelectionBarEnd ||\n            !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n            this.applyStepsArrayOptions();\n        }\n        else {\n            this.applyFloorCeilOptions();\n        }\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n            this.viewOptions.combineLabels = (minValue, maxValue) => {\n                return minValue + ' - ' + maxValue;\n            };\n        }\n        if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n            throw Error('Can\\'t use floor=0 with logarithmic scale');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    applyStepsArrayOptions() {\n        this.viewOptions.floor = 0;\n        this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n        this.viewOptions.step = 1;\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n            this.viewOptions.translate = (modelValue) => {\n                if (this.viewOptions.bindIndexForStepsArray) {\n                    return String(this.getStepValue(modelValue));\n                }\n                return String(modelValue);\n            };\n        }\n        this.viewOptions.getLegend = (index) => {\n            const /** @type {?} */ step = this.viewOptions.stepsArray[index];\n            return step.legend;\n        };\n    }\n    /**\n     * @return {?}\n     */\n    applyFloorCeilOptions() {\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n            this.viewOptions.step = 1;\n        }\n        else {\n            this.viewOptions.step = +this.viewOptions.step;\n            if (this.viewOptions.step <= 0) {\n                this.viewOptions.step = 1;\n            }\n        }\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) ||\n            ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n            throw Error('floor and ceil options must be supplied');\n        }\n        this.viewOptions.ceil = +this.viewOptions.ceil;\n        this.viewOptions.floor = +this.viewOptions.floor;\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n            this.viewOptions.translate = (value) => String(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    resetSlider() {\n        this.manageElementsStyle();\n        this.addAccessibility();\n        this.updateCeilLabel();\n        this.updateFloorLabel();\n        this.unbindEvents();\n        this.manageEventsBindings();\n        this.updateDisabledState();\n        this.calculateViewDimensions();\n        this.refocusPointerIfNeeded();\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    focusPointer(pointerType) {\n        // If not supplied, use min pointer as default\n        if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n            pointerType = PointerType.Min;\n        }\n        if (pointerType === PointerType.Min) {\n            this.minHandleElement.focus();\n        }\n        else if (this.range && pointerType === PointerType.Max) {\n            this.maxHandleElement.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    refocusPointerIfNeeded() {\n        if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n            this.onPointerFocus(this.currentFocusPointer);\n            const /** @type {?} */ element = this.getPointerElement(this.currentFocusPointer);\n            element.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    manageElementsStyle() {\n        this.updateScale();\n        this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n        this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n        const /** @type {?} */ hideLabelsForTicks = this.viewOptions.showTicksValues && !this.intermediateTicks;\n        this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n        this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n        this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n        this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n        this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n        this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n        this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n        this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n        this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n        if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n            this.updateVerticalState();\n            // The above change in host component class will not be applied until the end of this cycle\n            // However, functions calculating the slider position expect the slider to be already styled as vertical\n            // So as a workaround, we need to reset the slider once again to compute the correct values\n            setTimeout(() => { this.resetSlider(); });\n        }\n        // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n        // after all is properly set up\n        if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n            setTimeout(() => { this.sliderElementAnimateClass = this.viewOptions.animate; });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    manageEventsBindings() {\n        if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n            this.unbindEvents();\n        }\n        else {\n            this.bindEvents();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateDisabledState() {\n        this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n    }\n    /**\n     * @return {?}\n     */\n    updateVerticalState() {\n        this.sliderElementVerticalClass = this.viewOptions.vertical;\n        for (const /** @type {?} */ element of this.getAllSliderElements()) {\n            // This is also called before ngAfterInit, so need to check that view child bindings work\n            if (!ValueHelper.isNullOrUndefined(element)) {\n                element.setVertical(this.viewOptions.vertical);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateScale() {\n        for (const /** @type {?} */ element of this.getAllSliderElements()) {\n            element.setScale(this.viewOptions.scale);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getAllSliderElements() {\n        return [this.leftOuterSelectionBarElement,\n            this.rightOuterSelectionBarElement,\n            this.fullBarElement,\n            this.selectionBarElement,\n            this.minHandleElement,\n            this.maxHandleElement,\n            this.floorLabelElement,\n            this.ceilLabelElement,\n            this.minHandleLabelElement,\n            this.maxHandleLabelElement,\n            this.combinedLabelElement,\n            this.ticksElement\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    initHandles() {\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        /*\n           the order here is important since the selection bar should be\n           updated after the high handle but before the combined label\n           */\n        if (this.range) {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        }\n        this.updateSelectionBar();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n        this.updateTicksScale();\n    }\n    /**\n     * @return {?}\n     */\n    addAccessibility() {\n        this.updateAriaAttributes();\n        this.minHandleElement.role = 'slider';\n        if (this.viewOptions.keyboardSupport &&\n            !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n            this.minHandleElement.tabindex = '0';\n        }\n        else {\n            this.minHandleElement.tabindex = '';\n        }\n        if (this.viewOptions.vertical) {\n            this.minHandleElement.ariaOrientation = 'vertical';\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n            this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n        }\n        else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n            this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n        }\n        if (this.range) {\n            this.maxHandleElement.role = 'slider';\n            if (this.viewOptions.keyboardSupport &&\n                !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n                this.maxHandleElement.tabindex = '0';\n            }\n            else {\n                this.maxHandleElement.tabindex = '';\n            }\n            this.maxHandleElement.ariaOrientation = this.viewOptions.vertical ? 'vertical' : 'horizontal';\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n                this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n            }\n            else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n                this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateAriaAttributes() {\n        this.minHandleElement.ariaValueNow = (+this.value).toString();\n        this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n        this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n        this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n        if (this.range) {\n            this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n            this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n            this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n            this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateViewDimensions() {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n            this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n        }\n        else {\n            this.minHandleElement.calculateDimension();\n        }\n        const /** @type {?} */ handleWidth = this.minHandleElement.dimension;\n        this.handleHalfDimension = handleWidth / 2;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n            this.fullBarElement.setDimension(this.viewOptions.barDimension);\n        }\n        else {\n            this.fullBarElement.calculateDimension();\n        }\n        this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n        if (this.initHasRun) {\n            this.updateFloorLabel();\n            this.updateCeilLabel();\n            this.initHandles();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateViewDimensionsAndDetectChanges() {\n        this.calculateViewDimensions();\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * If the slider reference is already destroyed\n     * @return {?} boolean - true if ref is destroyed\n     */\n    isRefDestroyed() {\n        return this.changeDetectionRef['destroyed'];\n    }\n    /**\n     * @return {?}\n     */\n    updateTicksScale() {\n        if (!this.viewOptions.showTicks) {\n            return;\n        }\n        const /** @type {?} */ ticksArray = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray)\n            ? this.viewOptions.ticksArray\n            : this.getTicksArray();\n        const /** @type {?} */ translate = this.viewOptions.vertical ? 'translateY' : 'translateX';\n        if (this.viewOptions.rightToLeft) {\n            ticksArray.reverse();\n        }\n        const /** @type {?} */ newTicks = ticksArray.map((value) => {\n            let /** @type {?} */ position = this.valueToPosition(value);\n            if (this.viewOptions.vertical) {\n                position = this.maxHandlePosition - position;\n            }\n            const /** @type {?} */ translation = translate + '(' + Math.round(position) + 'px)';\n            const /** @type {?} */ tick = new Tick();\n            tick.selected = this.isTickSelected(value);\n            tick.style = {\n                '-webkit-transform': translation,\n                '-moz-transform': translation,\n                '-o-transform': translation,\n                '-ms-transform': translation,\n                transform: translation,\n            };\n            if (tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n                tick.style['background-color'] = this.getSelectionBarColor();\n            }\n            if (!tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getTickColor)) {\n                tick.style['background-color'] = this.getTickColor(value);\n            }\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksTooltip)) {\n                tick.tooltip = this.viewOptions.ticksTooltip(value);\n                tick.tooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n            }\n            if (this.viewOptions.showTicksValues && (value % this.viewOptions.tickValueStep === 0)) {\n                tick.value = this.getDisplayValue(value, LabelType.TickValue);\n                if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksValuesTooltip)) {\n                    tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n                    tick.valueTooltipPlacement = this.viewOptions.vertical\n                        ? 'right'\n                        : 'top';\n                }\n            }\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.getLegend)) {\n                const /** @type {?} */ legend = this.viewOptions.getLegend(value);\n                if (!ValueHelper.isNullOrUndefined(legend)) {\n                    tick.legend = legend;\n                }\n            }\n            return tick;\n        });\n        // We should avoid re-creating the ticks array if possible\n        // This both improves performance and makes CSS animations work correctly\n        if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n            for (let /** @type {?} */ i = 0; i < newTicks.length; ++i) {\n                Object.assign(this.ticks[i], newTicks[i]);\n            }\n        }\n        else {\n            this.ticks = newTicks;\n        }\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getTicksArray() {\n        const /** @type {?} */ step = (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) ? this.viewOptions.tickStep : this.viewOptions.step;\n        const /** @type {?} */ ticksArray = [];\n        for (let /** @type {?} */ value = this.viewOptions.floor; value <= this.viewOptions.ceil; value += step) {\n            ticksArray.push(value);\n        }\n        return ticksArray;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isTickSelected(value) {\n        if (!this.range) {\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n                const /** @type {?} */ center = this.viewOptions.showSelectionBarFromValue;\n                if (this.viewLowValue > center &&\n                    value >= center &&\n                    value <= this.viewLowValue) {\n                    return true;\n                }\n                else if (this.viewLowValue < center &&\n                    value <= center &&\n                    value >= this.viewLowValue) {\n                    return true;\n                }\n            }\n            else if (this.viewOptions.showSelectionBarEnd) {\n                if (value >= this.viewLowValue) {\n                    return true;\n                }\n            }\n            else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n                return true;\n            }\n        }\n        if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    updateFloorLabel() {\n        if (!this.floorLabelElement.alwaysHide) {\n            this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n            this.floorLabelElement.calculateDimension();\n            const /** @type {?} */ position = this.viewOptions.rightToLeft\n                ? this.fullBarElement.dimension - this.floorLabelElement.dimension\n                : 0;\n            this.floorLabelElement.setPosition(position);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateCeilLabel() {\n        if (!this.ceilLabelElement.alwaysHide) {\n            this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n            this.ceilLabelElement.calculateDimension();\n            const /** @type {?} */ position = this.viewOptions.rightToLeft\n                ? 0\n                : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n            this.ceilLabelElement.setPosition(position);\n        }\n    }\n    /**\n     * @param {?} which\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateHandles(which, newPos) {\n        if (which === PointerType.Min) {\n            this.updateLowHandle(newPos);\n        }\n        else if (which === PointerType.Max) {\n            this.updateHighHandle(newPos);\n        }\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n    }\n    /**\n     * @param {?} labelType\n     * @param {?} newPos\n     * @return {?}\n     */\n    getHandleLabelPos(labelType, newPos) {\n        const /** @type {?} */ labelDimension = (labelType === PointerType.Min)\n            ? this.minHandleLabelElement.dimension\n            : this.maxHandleLabelElement.dimension;\n        const /** @type {?} */ nearHandlePos = newPos - labelDimension / 2 + this.handleHalfDimension;\n        const /** @type {?} */ endOfBarPos = this.fullBarElement.dimension - labelDimension;\n        if (!this.viewOptions.boundPointerLabels) {\n            return nearHandlePos;\n        }\n        if ((this.viewOptions.rightToLeft && labelType === PointerType.Min) ||\n            (!this.viewOptions.rightToLeft && labelType === PointerType.Max)) {\n            return Math.min(nearHandlePos, endOfBarPos);\n        }\n        else {\n            return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n        }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateLowHandle(newPos) {\n        this.minHandleElement.setPosition(newPos);\n        this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n        this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n            this.minPointerStyle = {\n                backgroundColor: this.getPointerColor(PointerType.Min),\n            };\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateHighHandle(newPos) {\n        this.maxHandleElement.setPosition(newPos);\n        this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n        this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n            this.maxPointerStyle = {\n                backgroundColor: this.getPointerColor(PointerType.Max),\n            };\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateFloorAndCeilLabelsVisibility() {\n        // Show based only on hideLimitLabels if pointer labels are hidden\n        if (this.viewOptions.hidePointerLabels) {\n            return;\n        }\n        let /** @type {?} */ floorLabelHidden = false;\n        let /** @type {?} */ ceilLabelHidden = false;\n        const /** @type {?} */ isMinLabelAtFloor = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n        const /** @type {?} */ isMinLabelAtCeil = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n        const /** @type {?} */ isMaxLabelAtCeil = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n        const /** @type {?} */ isCombinedLabelAtFloor = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n        const /** @type {?} */ isCombinedLabelAtCeil = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n        if (isMinLabelAtFloor) {\n            floorLabelHidden = true;\n            this.floorLabelElement.hide();\n        }\n        else {\n            floorLabelHidden = false;\n            this.floorLabelElement.show();\n        }\n        if (isMinLabelAtCeil) {\n            ceilLabelHidden = true;\n            this.ceilLabelElement.hide();\n        }\n        else {\n            ceilLabelHidden = false;\n            this.ceilLabelElement.show();\n        }\n        if (this.range) {\n            const /** @type {?} */ hideCeil = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n            const /** @type {?} */ hideFloor = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n            if (hideCeil) {\n                this.ceilLabelElement.hide();\n            }\n            else if (!ceilLabelHidden) {\n                this.ceilLabelElement.show();\n            }\n            // Hide or show floor label\n            if (hideFloor) {\n                this.floorLabelElement.hide();\n            }\n            else if (!floorLabelHidden) {\n                this.floorLabelElement.show();\n            }\n        }\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n    isLabelBelowFloorLabel(label) {\n        const /** @type {?} */ pos = label.position;\n        const /** @type {?} */ dim = label.dimension;\n        const /** @type {?} */ floorPos = this.floorLabelElement.position;\n        const /** @type {?} */ floorDim = this.floorLabelElement.dimension;\n        return this.viewOptions.rightToLeft\n            ? pos + dim >= floorPos - 2\n            : pos <= floorPos + floorDim + 2;\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n    isLabelAboveCeilLabel(label) {\n        const /** @type {?} */ pos = label.position;\n        const /** @type {?} */ dim = label.dimension;\n        const /** @type {?} */ ceilPos = this.ceilLabelElement.position;\n        const /** @type {?} */ ceilDim = this.ceilLabelElement.dimension;\n        return this.viewOptions.rightToLeft\n            ? pos <= ceilPos + ceilDim + 2\n            : pos + dim >= ceilPos - 2;\n    }\n    /**\n     * @return {?}\n     */\n    updateSelectionBar() {\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ dimension = 0;\n        const /** @type {?} */ isSelectionBarFromRight = this.viewOptions.rightToLeft\n            ? !this.viewOptions.showSelectionBarEnd\n            : this.viewOptions.showSelectionBarEnd;\n        const /** @type {?} */ positionForRange = this.viewOptions.rightToLeft\n            ? this.maxHandleElement.position + this.handleHalfDimension\n            : this.minHandleElement.position + this.handleHalfDimension;\n        if (this.range) {\n            dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n            position = positionForRange;\n        }\n        else {\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n                const /** @type {?} */ center = this.viewOptions.showSelectionBarFromValue;\n                const /** @type {?} */ centerPosition = this.valueToPosition(center);\n                const /** @type {?} */ isModelGreaterThanCenter = this.viewOptions.rightToLeft\n                    ? this.viewLowValue <= center\n                    : this.viewLowValue > center;\n                if (isModelGreaterThanCenter) {\n                    dimension = this.minHandleElement.position - centerPosition;\n                    position = centerPosition + this.handleHalfDimension;\n                }\n                else {\n                    dimension = centerPosition - this.minHandleElement.position;\n                    position = this.minHandleElement.position + this.handleHalfDimension;\n                }\n            }\n            else if (isSelectionBarFromRight) {\n                dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n                position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n            }\n            else {\n                dimension = this.minHandleElement.position + this.handleHalfDimension;\n                position = 0;\n            }\n        }\n        this.selectionBarElement.setDimension(dimension);\n        this.selectionBarElement.setPosition(position);\n        if (this.range && this.viewOptions.showOuterSelectionBars) {\n            if (this.viewOptions.rightToLeft) {\n                this.rightOuterSelectionBarElement.setDimension(position);\n                this.rightOuterSelectionBarElement.setPosition(0);\n                this.fullBarElement.calculateDimension();\n                this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n                this.leftOuterSelectionBarElement.setPosition(position + dimension);\n            }\n            else {\n                this.leftOuterSelectionBarElement.setDimension(position);\n                this.leftOuterSelectionBarElement.setPosition(0);\n                this.fullBarElement.calculateDimension();\n                this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n                this.rightOuterSelectionBarElement.setPosition(position + dimension);\n            }\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n            const /** @type {?} */ color = this.getSelectionBarColor();\n            this.barStyle = {\n                backgroundColor: color,\n            };\n        }\n        else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n            const /** @type {?} */ offset = (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue))\n                ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue)\n                : 0;\n            const /** @type {?} */ reversed = (offset - position > 0 && !isSelectionBarFromRight) || (offset - position <= 0 && isSelectionBarFromRight);\n            const /** @type {?} */ direction = this.viewOptions.vertical\n                ? reversed ? 'bottom' : 'top'\n                : reversed ? 'left' : 'right';\n            this.barStyle = {\n                backgroundImage: 'linear-gradient(to ' +\n                    direction +\n                    ', ' +\n                    this.viewOptions.selectionBarGradient.from +\n                    ' 0%,' +\n                    this.viewOptions.selectionBarGradient.to +\n                    ' 100%)',\n            };\n            if (this.viewOptions.vertical) {\n                this.barStyle.backgroundPosition =\n                    'center ' +\n                        (offset +\n                            dimension +\n                            position +\n                            (reversed ? -this.handleHalfDimension : 0)) +\n                        'px';\n                this.barStyle.backgroundSize =\n                    '100% ' + (this.fullBarElement.dimension - this.handleHalfDimension) + 'px';\n            }\n            else {\n                this.barStyle.backgroundPosition =\n                    offset -\n                        position +\n                        (reversed ? this.handleHalfDimension : 0) +\n                        'px center';\n                this.barStyle.backgroundSize =\n                    this.fullBarElement.dimension - this.handleHalfDimension + 'px 100%';\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getSelectionBarColor() {\n        if (this.range) {\n            return this.viewOptions.getSelectionBarColor(this.value, this.highValue);\n        }\n        return this.viewOptions.getSelectionBarColor(this.value);\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    getPointerColor(pointerType) {\n        if (pointerType === PointerType.Max) {\n            return this.viewOptions.getPointerColor(this.highValue, pointerType);\n        }\n        return this.viewOptions.getPointerColor(this.value, pointerType);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getTickColor(value) {\n        return this.viewOptions.getTickColor(value);\n    }\n    /**\n     * @return {?}\n     */\n    updateCombinedLabel() {\n        let /** @type {?} */ isLabelOverlap = null;\n        if (this.viewOptions.rightToLeft) {\n            isLabelOverlap =\n                this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n        }\n        else {\n            isLabelOverlap =\n                this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n        }\n        if (isLabelOverlap) {\n            const /** @type {?} */ lowDisplayValue = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n            const /** @type {?} */ highDisplayValue = this.getDisplayValue(this.viewHighValue, LabelType.High);\n            const /** @type {?} */ combinedLabelValue = this.viewOptions.rightToLeft\n                ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue)\n                : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n            this.combinedLabelElement.setValue(combinedLabelValue);\n            const /** @type {?} */ pos = this.viewOptions.boundPointerLabels\n                ? Math.min(Math.max(this.selectionBarElement.position +\n                    this.selectionBarElement.dimension / 2 -\n                    this.combinedLabelElement.dimension / 2, 0), this.fullBarElement.dimension - this.combinedLabelElement.dimension)\n                : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n            this.combinedLabelElement.setPosition(pos);\n            this.minHandleLabelElement.hide();\n            this.maxHandleLabelElement.hide();\n            this.combinedLabelElement.show();\n        }\n        else {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n            this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n            this.maxHandleLabelElement.show();\n            this.minHandleLabelElement.show();\n            this.combinedLabelElement.hide();\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} which\n     * @return {?}\n     */\n    getDisplayValue(value, which) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            value = this.getStepValue(value);\n        }\n        return this.viewOptions.translate(value, which);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} customStep\n     * @return {?}\n     */\n    roundStep(value, customStep) {\n        const /** @type {?} */ step = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n        let /** @type {?} */ steppedDifference = MathHelper.roundToPrecisionLimit((value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n        steppedDifference = Math.round(steppedDifference) * step;\n        return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    valueToPosition(val) {\n        let /** @type {?} */ fn = ValueHelper.linearValueToPosition;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n            fn = this.viewOptions.customValueToPosition;\n        }\n        else if (this.viewOptions.logScale) {\n            fn = ValueHelper.logValueToPosition;\n        }\n        val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n        let /** @type {?} */ percent = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n        if (ValueHelper.isNullOrUndefined(percent)) {\n            percent = 0;\n        }\n        if (this.viewOptions.rightToLeft) {\n            percent = 1 - percent;\n        }\n        return percent * this.maxHandlePosition;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    positionToValue(position) {\n        let /** @type {?} */ percent = position / this.maxHandlePosition;\n        if (this.viewOptions.rightToLeft) {\n            percent = 1 - percent;\n        }\n        let /** @type {?} */ fn = ValueHelper.linearPositionToValue;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n            fn = this.viewOptions.customPositionToValue;\n        }\n        else if (this.viewOptions.logScale) {\n            fn = ValueHelper.logPositionToValue;\n        }\n        const /** @type {?} */ value = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n        return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n    getEventXY(event, targetTouchId) {\n        if (event instanceof MouseEvent) {\n            return this.viewOptions.vertical ? event.clientY : event.clientX;\n        }\n        let /** @type {?} */ touchIndex = 0;\n        const /** @type {?} */ touches = event.touches;\n        if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n            for (let /** @type {?} */ i = 0; i < touches.length; i++) {\n                if (touches[i].identifier === targetTouchId) {\n                    touchIndex = i;\n                    break;\n                }\n            }\n        }\n        // Return the target touch or if the target touch was not found in the event\n        // returns the coordinates of the first touch\n        return this.viewOptions.vertical ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n    getEventPosition(event, targetTouchId) {\n        const /** @type {?} */ sliderElementBoundingRect = this.elementRef.nativeElement.getBoundingClientRect();\n        const /** @type {?} */ sliderPos = this.viewOptions.vertical ?\n            sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n        let /** @type {?} */ eventPos = 0;\n        if (this.viewOptions.vertical) {\n            eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n        }\n        else {\n            eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n        }\n        return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    getNearestHandle(event) {\n        if (!this.range) {\n            return PointerType.Min;\n        }\n        const /** @type {?} */ position = this.getEventPosition(event);\n        const /** @type {?} */ distanceMin = Math.abs(position - this.minHandleElement.position);\n        const /** @type {?} */ distanceMax = Math.abs(position - this.maxHandleElement.position);\n        if (distanceMin < distanceMax) {\n            return PointerType.Min;\n        }\n        else if (distanceMin > distanceMax) {\n            return PointerType.Max;\n        }\n        else if (!this.viewOptions.rightToLeft) {\n            // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n            return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n        }\n        // reverse in rtl\n        return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    }\n    /**\n     * @return {?}\n     */\n    bindEvents() {\n        const /** @type {?} */ draggableRange = this.viewOptions.draggableRange;\n        if (!this.viewOptions.onlyBindHandles) {\n            this.selectionBarElement.on('mousedown', (event) => this.onBarStart(null, draggableRange, event, true, true, true));\n        }\n        if (this.viewOptions.draggableRangeOnly) {\n            this.minHandleElement.on('mousedown', (event) => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n            this.maxHandleElement.on('mousedown', (event) => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n        }\n        else {\n            this.minHandleElement.on('mousedown', (event) => this.onStart(PointerType.Min, event, true, true));\n            if (this.range) {\n                this.maxHandleElement.on('mousedown', (event) => this.onStart(PointerType.Max, event, true, true));\n            }\n            if (!this.viewOptions.onlyBindHandles) {\n                this.fullBarElement.on('mousedown', (event) => this.onStart(null, event, true, true, true));\n                this.ticksElement.on('mousedown', (event) => this.onStart(null, event, true, true, true, true));\n            }\n        }\n        if (!this.viewOptions.onlyBindHandles) {\n            this.selectionBarElement.onPassive('touchstart', (event) => this.onBarStart(null, draggableRange, event, true, true, true));\n        }\n        if (this.viewOptions.draggableRangeOnly) {\n            this.minHandleElement.onPassive('touchstart', (event) => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n            this.maxHandleElement.onPassive('touchstart', (event) => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n        }\n        else {\n            this.minHandleElement.onPassive('touchstart', (event) => this.onStart(PointerType.Min, event, true, true));\n            if (this.range) {\n                this.maxHandleElement.onPassive('touchstart', (event) => this.onStart(PointerType.Max, event, true, true));\n            }\n            if (!this.viewOptions.onlyBindHandles) {\n                this.fullBarElement.onPassive('touchstart', (event) => this.onStart(null, event, true, true, true));\n                this.ticksElement.onPassive('touchstart', (event) => this.onStart(null, event, false, false, true, true));\n            }\n        }\n        if (this.viewOptions.keyboardSupport) {\n            this.minHandleElement.on('focus', () => this.onPointerFocus(PointerType.Min));\n            if (this.range) {\n                this.maxHandleElement.on('focus', () => this.onPointerFocus(PointerType.Max));\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unbindEvents() {\n        this.unsubscribeOnMove();\n        this.unsubscribeOnEnd();\n        for (const /** @type {?} */ element of this.getAllSliderElements()) {\n            if (!ValueHelper.isNullOrUndefined(element)) {\n                element.off();\n            }\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} draggableRange\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n    onBarStart(pointerType, draggableRange, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n        if (draggableRange) {\n            this.onDragStart(pointerType, event, bindMove, bindEnd);\n        }\n        else {\n            this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n    onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n        event.stopPropagation();\n        // Only call preventDefault() when handling non-passive events (passive events don't need it)\n        if (!CompatibilityHelper.isTouchEvent(event) || !detectPassiveEvents.hasSupport) {\n            event.preventDefault();\n        }\n        // We have to do this in case the HTML where the sliders are on\n        // have been animated into view.\n        this.calculateViewDimensions();\n        if (ValueHelper.isNullOrUndefined(pointerType)) {\n            pointerType = this.getNearestHandle(event);\n        }\n        this.currentTrackingPointer = pointerType;\n        const /** @type {?} */ pointerElement = this.getPointerElement(pointerType);\n        pointerElement.active = true;\n        if (this.viewOptions.keyboardSupport) {\n            pointerElement.focus();\n        }\n        if (bindMove) {\n            this.unsubscribeOnMove();\n            const /** @type {?} */ onMoveCallback = (e) => this.dragging.active ? this.onDragMove(e) : this.onMove(e);\n            if (CompatibilityHelper.isTouchEvent(event)) {\n                this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchmove', onMoveCallback, this.viewOptions.touchEventsInterval);\n            }\n            else {\n                this.onMoveEventListener = this.eventListenerHelper.attachEventListener(document, 'mousemove', onMoveCallback, this.viewOptions.mouseEventsInterval);\n            }\n        }\n        if (bindEnd) {\n            this.unsubscribeOnEnd();\n            const /** @type {?} */ onEndCallback = (e) => this.onEnd(e);\n            if (CompatibilityHelper.isTouchEvent(event)) {\n                this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchend', onEndCallback);\n            }\n            else {\n                this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, 'mouseup', onEndCallback);\n            }\n        }\n        this.userChangeStart.emit(this.getChangeContext());\n        if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined((/** @type {?} */ (event)).changedTouches)) {\n            // Store the touch identifier\n            if (ValueHelper.isNullOrUndefined(this.touchId)) {\n                this.touchId = (/** @type {?} */ (event)).changedTouches[0].identifier;\n            }\n        }\n        // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n        // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n        // As a workaround, we simulate the first move event and the end event if it's necessary\n        if (simulateImmediateMove) {\n            this.onMove(event, true);\n        }\n        if (simulateImmediateEnd) {\n            this.onEnd(event);\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?=} fromTick\n     * @return {?}\n     */\n    onMove(event, fromTick) {\n        let /** @type {?} */ touchForThisSlider = null;\n        if (CompatibilityHelper.isTouchEvent(event)) {\n            const /** @type {?} */ changedTouches = (/** @type {?} */ (event)).changedTouches;\n            for (let /** @type {?} */ i = 0; i < changedTouches.length; i++) {\n                if (changedTouches[i].identifier === this.touchId) {\n                    touchForThisSlider = changedTouches[i];\n                    break;\n                }\n            }\n            if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n                return;\n            }\n        }\n        const /** @type {?} */ newPos = !ValueHelper.isNullOrUndefined(touchForThisSlider)\n            ? this.getEventPosition(event, touchForThisSlider.identifier)\n            : this.getEventPosition(event);\n        let /** @type {?} */ newValue;\n        const /** @type {?} */ ceilValue = this.viewOptions.rightToLeft\n            ? this.viewOptions.floor\n            : this.viewOptions.ceil;\n        const /** @type {?} */ floorValue = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n        if (newPos <= 0) {\n            newValue = floorValue;\n        }\n        else if (newPos >= this.maxHandlePosition) {\n            newValue = ceilValue;\n        }\n        else {\n            newValue = this.positionToValue(newPos);\n            if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n                newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n            }\n            else {\n                newValue = this.roundStep(newValue);\n            }\n        }\n        this.positionTrackingHandle(newValue);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEnd(event) {\n        if (CompatibilityHelper.isTouchEvent(event)) {\n            const /** @type {?} */ changedTouches = (/** @type {?} */ (event)).changedTouches;\n            if (changedTouches[0].identifier !== this.touchId) {\n                return;\n            }\n        }\n        this.touchId = null;\n        if (!this.viewOptions.keyboardSupport) {\n            this.minHandleElement.active = false;\n            this.maxHandleElement.active = false;\n            this.currentTrackingPointer = null;\n        }\n        this.dragging.active = false;\n        this.unsubscribeOnMove();\n        this.unsubscribeOnEnd();\n        this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    onPointerFocus(pointerType) {\n        const /** @type {?} */ pointerElement = this.getPointerElement(pointerType);\n        pointerElement.on('blur', () => this.onPointerBlur(pointerElement));\n        pointerElement.on('keydown', (event) => this.onKeyboardEvent(event));\n        pointerElement.on('keyup', () => this.onKeyUp());\n        pointerElement.active = true;\n        this.currentTrackingPointer = pointerType;\n        this.currentFocusPointer = pointerType;\n        this.firstKeyDown = true;\n    }\n    /**\n     * @return {?}\n     */\n    onKeyUp() {\n        this.firstKeyDown = true;\n        this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointer\n     * @return {?}\n     */\n    onPointerBlur(pointer) {\n        pointer.off('blur');\n        pointer.off('keydown');\n        pointer.off('keyup');\n        pointer.active = false;\n        if (ValueHelper.isNullOrUndefined(this.touchId)) {\n            this.currentTrackingPointer = null;\n            this.currentFocusPointer = null;\n        }\n    }\n    /**\n     * @param {?} currentValue\n     * @return {?}\n     */\n    getKeyActions(currentValue) {\n        const /** @type {?} */ valueRange = this.viewOptions.ceil - this.viewOptions.floor;\n        let /** @type {?} */ increaseStep = currentValue + this.viewOptions.step;\n        let /** @type {?} */ decreaseStep = currentValue - this.viewOptions.step;\n        let /** @type {?} */ increasePage = currentValue + valueRange / 10;\n        let /** @type {?} */ decreasePage = currentValue - valueRange / 10;\n        if (this.viewOptions.reversedControls) {\n            increaseStep = currentValue - this.viewOptions.step;\n            decreaseStep = currentValue + this.viewOptions.step;\n            increasePage = currentValue - valueRange / 10;\n            decreasePage = currentValue + valueRange / 10;\n        }\n        // Left to right default actions\n        const /** @type {?} */ actions = {\n            UP: increaseStep,\n            DOWN: decreaseStep,\n            LEFT: decreaseStep,\n            RIGHT: increaseStep,\n            PAGEUP: increasePage,\n            PAGEDOWN: decreasePage,\n            HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n            END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil,\n        };\n        // right to left means swapping right and left arrows\n        if (this.viewOptions.rightToLeft) {\n            actions[\"LEFT\"] = increaseStep;\n            actions[\"RIGHT\"] = decreaseStep;\n            // right to left and vertical means we also swap up and down\n            if (this.viewOptions.vertical) {\n                actions[\"UP\"] = decreaseStep;\n                actions[\"DOWN\"] = increaseStep;\n            }\n        }\n        return actions;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyboardEvent(event) {\n        const /** @type {?} */ currentValue = this.getCurrentTrackingValue();\n        const /** @type {?} */ keyCode = !ValueHelper.isNullOrUndefined(event.keyCode)\n            ? event.keyCode\n            : event.which;\n        const /** @type {?} */ keys = {\n            38: 'UP',\n            40: 'DOWN',\n            37: 'LEFT',\n            39: 'RIGHT',\n            33: 'PAGEUP',\n            34: 'PAGEDOWN',\n            36: 'HOME',\n            35: 'END',\n        };\n        const /** @type {?} */ actions = this.getKeyActions(currentValue);\n        const /** @type {?} */ key = keys[keyCode];\n        const /** @type {?} */ action = actions[key];\n        if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n            return;\n        }\n        event.preventDefault();\n        if (this.firstKeyDown) {\n            this.firstKeyDown = false;\n            this.userChangeStart.emit(this.getChangeContext());\n        }\n        const /** @type {?} */ actionValue = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n        const /** @type {?} */ newValue = this.roundStep(actionValue);\n        if (!this.viewOptions.draggableRangeOnly) {\n            this.positionTrackingHandle(newValue);\n        }\n        else {\n            const /** @type {?} */ difference = this.viewHighValue - this.viewLowValue;\n            let /** @type {?} */ newMinValue;\n            let /** @type {?} */ newMaxValue;\n            if (this.currentTrackingPointer === PointerType.Min) {\n                newMinValue = newValue;\n                newMaxValue = newValue + difference;\n                if (newMaxValue > this.viewOptions.ceil) {\n                    newMaxValue = this.viewOptions.ceil;\n                    newMinValue = newMaxValue - difference;\n                }\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                newMaxValue = newValue;\n                newMinValue = newValue - difference;\n                if (newMinValue < this.viewOptions.floor) {\n                    newMinValue = this.viewOptions.floor;\n                    newMaxValue = newMinValue + difference;\n                }\n            }\n            this.positionTrackingBar(newMinValue, newMaxValue);\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @return {?}\n     */\n    onDragStart(pointerType, event, bindMove, bindEnd) {\n        const /** @type {?} */ position = this.getEventPosition(event);\n        this.dragging = new Dragging();\n        this.dragging.active = true;\n        this.dragging.value = this.positionToValue(position);\n        this.dragging.difference = this.viewHighValue - this.viewLowValue;\n        this.dragging.lowLimit = this.viewOptions.rightToLeft\n            ? this.minHandleElement.position - position\n            : position - this.minHandleElement.position;\n        this.dragging.highLimit = this.viewOptions.rightToLeft\n            ? position - this.maxHandleElement.position\n            : this.maxHandleElement.position - position;\n        this.onStart(pointerType, event, bindMove, bindEnd);\n    }\n    /**\n     * Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n    getMinValue(newPos, outOfBounds, isAbove) {\n        const /** @type {?} */ isRTL = this.viewOptions.rightToLeft;\n        let /** @type {?} */ value = null;\n        if (outOfBounds) {\n            if (isAbove) {\n                value = isRTL\n                    ? this.viewOptions.floor\n                    : this.viewOptions.ceil - this.dragging.difference;\n            }\n            else {\n                value = isRTL\n                    ? this.viewOptions.ceil - this.dragging.difference\n                    : this.viewOptions.floor;\n            }\n        }\n        else {\n            value = isRTL\n                ? this.positionToValue(newPos + this.dragging.lowLimit)\n                : this.positionToValue(newPos - this.dragging.lowLimit);\n        }\n        return this.roundStep(value);\n    }\n    /**\n     * Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n    getMaxValue(newPos, outOfBounds, isAbove) {\n        const /** @type {?} */ isRTL = this.viewOptions.rightToLeft;\n        let /** @type {?} */ value = null;\n        if (outOfBounds) {\n            if (isAbove) {\n                value = isRTL\n                    ? this.viewOptions.floor + this.dragging.difference\n                    : this.viewOptions.ceil;\n            }\n            else {\n                value = isRTL\n                    ? this.viewOptions.ceil\n                    : this.viewOptions.floor + this.dragging.difference;\n            }\n        }\n        else {\n            if (isRTL) {\n                value =\n                    this.positionToValue(newPos + this.dragging.lowLimit) +\n                        this.dragging.difference;\n            }\n            else {\n                value =\n                    this.positionToValue(newPos - this.dragging.lowLimit) +\n                        this.dragging.difference;\n            }\n        }\n        return this.roundStep(value);\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDragMove(event) {\n        const /** @type {?} */ newPos = this.getEventPosition(event);\n        let /** @type {?} */ ceilLimit, /** @type {?} */\n        floorLimit, /** @type {?} */\n        floorHandleElement, /** @type {?} */\n        ceilHandleElement;\n        if (this.viewOptions.rightToLeft) {\n            ceilLimit = this.dragging.lowLimit;\n            floorLimit = this.dragging.highLimit;\n            floorHandleElement = this.maxHandleElement;\n            ceilHandleElement = this.minHandleElement;\n        }\n        else {\n            ceilLimit = this.dragging.highLimit;\n            floorLimit = this.dragging.lowLimit;\n            floorHandleElement = this.minHandleElement;\n            ceilHandleElement = this.maxHandleElement;\n        }\n        const /** @type {?} */ isUnderFloorLimit = (newPos <= floorLimit);\n        const /** @type {?} */ isOverCeilLimit = (newPos >= this.maxHandlePosition - ceilLimit);\n        let /** @type {?} */ newMinValue;\n        let /** @type {?} */ newMaxValue;\n        if (isUnderFloorLimit) {\n            if (floorHandleElement.position === 0) {\n                return;\n            }\n            newMinValue = this.getMinValue(newPos, true, false);\n            newMaxValue = this.getMaxValue(newPos, true, false);\n        }\n        else if (isOverCeilLimit) {\n            if (ceilHandleElement.position === this.maxHandlePosition) {\n                return;\n            }\n            newMaxValue = this.getMaxValue(newPos, true, true);\n            newMinValue = this.getMinValue(newPos, true, true);\n        }\n        else {\n            newMinValue = this.getMinValue(newPos, false, false);\n            newMaxValue = this.getMaxValue(newPos, false, false);\n        }\n        this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n    /**\n     * @param {?} newMinValue\n     * @param {?} newMaxValue\n     * @return {?}\n     */\n    positionTrackingBar(newMinValue, newMaxValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) &&\n            newMinValue < this.viewOptions.minLimit) {\n            newMinValue = this.viewOptions.minLimit;\n            newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) &&\n            newMaxValue > this.viewOptions.maxLimit) {\n            newMaxValue = this.viewOptions.maxLimit;\n            newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n        }\n        this.viewLowValue = newMinValue;\n        this.viewHighValue = newMaxValue;\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n        this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    positionTrackingHandle(newValue) {\n        newValue = this.applyMinMaxLimit(newValue);\n        if (this.range) {\n            if (this.viewOptions.pushRange) {\n                newValue = this.applyPushRange(newValue);\n            }\n            else {\n                if (this.viewOptions.noSwitching) {\n                    if (this.currentTrackingPointer === PointerType.Min &&\n                        newValue > this.viewHighValue) {\n                        newValue = this.applyMinMaxRange(this.viewHighValue);\n                    }\n                    else if (this.currentTrackingPointer === PointerType.Max &&\n                        newValue < this.viewLowValue) {\n                        newValue = this.applyMinMaxRange(this.viewLowValue);\n                    }\n                }\n                newValue = this.applyMinMaxRange(newValue);\n                /* This is to check if we need to switch the min and max handles */\n                if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n                    this.viewLowValue = this.viewHighValue;\n                    this.applyViewChange();\n                    this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n                    this.updateAriaAttributes();\n                    this.currentTrackingPointer = PointerType.Max;\n                    this.minHandleElement.active = false;\n                    this.maxHandleElement.active = true;\n                    if (this.viewOptions.keyboardSupport) {\n                        this.maxHandleElement.focus();\n                    }\n                }\n                else if (this.currentTrackingPointer === PointerType.Max &&\n                    newValue < this.viewLowValue) {\n                    this.viewHighValue = this.viewLowValue;\n                    this.applyViewChange();\n                    this.updateHandles(PointerType.Max, this.minHandleElement.position);\n                    this.updateAriaAttributes();\n                    this.currentTrackingPointer = PointerType.Min;\n                    this.maxHandleElement.active = false;\n                    this.minHandleElement.active = true;\n                    if (this.viewOptions.keyboardSupport) {\n                        this.minHandleElement.focus();\n                    }\n                }\n            }\n        }\n        if (this.getCurrentTrackingValue() !== newValue) {\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewLowValue = newValue;\n                this.applyViewChange();\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewHighValue = newValue;\n                this.applyViewChange();\n            }\n            this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n            this.updateAriaAttributes();\n        }\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyMinMaxLimit(newValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n            return this.viewOptions.minLimit;\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n            return this.viewOptions.maxLimit;\n        }\n        return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyMinMaxRange(newValue) {\n        const /** @type {?} */ oppositeValue = (this.currentTrackingPointer === PointerType.Min)\n            ? this.viewHighValue\n            : this.viewLowValue;\n        const /** @type {?} */ difference = Math.abs(newValue - oppositeValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n            if (difference < this.viewOptions.minRange) {\n                if (this.currentTrackingPointer === PointerType.Min) {\n                    return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n                }\n                else if (this.currentTrackingPointer === PointerType.Max) {\n                    return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n                }\n            }\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n            if (difference > this.viewOptions.maxRange) {\n                if (this.currentTrackingPointer === PointerType.Min) {\n                    return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n                }\n                else if (this.currentTrackingPointer === PointerType.Max) {\n                    return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n                }\n            }\n        }\n        return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyPushRange(newValue) {\n        const /** @type {?} */ difference = (this.currentTrackingPointer === PointerType.Min)\n            ? this.viewHighValue - newValue\n            : newValue - this.viewLowValue;\n        const /** @type {?} */ minRange = (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange))\n            ? this.viewOptions.minRange\n            : this.viewOptions.step;\n        const /** @type {?} */ maxRange = this.viewOptions.maxRange;\n        // if smaller than minRange\n        if (difference < minRange) {\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n                newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n                newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n            }\n            this.updateAriaAttributes();\n        }\n        else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n            // if greater than maxRange\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n            }\n            this.updateAriaAttributes();\n        }\n        return newValue;\n    }\n    /**\n     * @return {?}\n     */\n    getChangeContext() {\n        const /** @type {?} */ changeContext = new ChangeContext();\n        changeContext.pointerType = this.currentTrackingPointer;\n        changeContext.value = +this.value;\n        if (this.range) {\n            changeContext.highValue = +this.highValue;\n        }\n        return changeContext;\n    }\n}\nSliderComponent.ɵfac = function SliderComponent_Factory(t) { return new (t || SliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nSliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SliderComponent, selectors: [[\"ng5-slider\"]], contentQueries: function SliderComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    } }, viewQuery: function SliderComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 1, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c2, 1, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c3, 1, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c4, 1, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c5, 1, SliderHandleDirective);\n        ɵngcc0.ɵɵviewQuery(_c6, 1, SliderHandleDirective);\n        ɵngcc0.ɵɵviewQuery(_c7, 1, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c8, 1, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c9, 1, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c10, 1, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c11, 1, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c12, 1, SliderElementDirective);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftOuterSelectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightOuterSelectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.floorLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ceilLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.combinedLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    } }, hostAttrs: [1, \"ng5-slider\"], hostVars: 5, hostBindings: function SliderComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.sliderElementDisabledAttr);\n        ɵngcc0.ɵɵclassProp(\"vertical\", ctx.sliderElementVerticalClass)(\"animate\", ctx.sliderElementAnimateClass);\n    } }, inputs: { value: \"value\", highValue: \"highValue\", options: \"options\", manualRefresh: \"manualRefresh\", triggerFocus: \"triggerFocus\" }, outputs: { valueChange: \"valueChange\", highValueChange: \"highValueChange\", userChangeStart: \"userChangeStart\", userChange: \"userChange\", userChangeEnd: \"userChangeEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([NG5_SLIDER_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 29, vars: 13, consts: [[\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-left-out-selection\"], [\"leftOuterSelectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-right-out-selection\"], [\"rightOuterSelectionBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-full-bar\"], [\"fullBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-selection-bar\"], [\"selectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\", \"ng5-slider-selection\", 3, \"ngStyle\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-min\", 3, \"ngStyle\"], [\"minHandle\", \"\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-max\", 3, \"ngStyle\"], [\"maxHandle\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-floor\"], [\"floorLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-ceil\"], [\"ceilLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-value\"], [\"minHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-high\"], [\"maxHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-combined\"], [\"combinedLabel\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-ticks\", 3, \"hidden\"], [\"ticksElement\", \"\"], [\"class\", \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\"], [3, \"template\", \"tooltip\", \"placement\"], [\"class\", \"ng5-slider-span ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\", 4, \"ngIf\"], [\"class\", \"ng5-slider-span ng5-slider-tick-legend\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-legend\", 3, \"innerHTML\"]], template: function SliderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3, 4);\n        ɵngcc0.ɵɵelement(5, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"span\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 7, 8);\n        ɵngcc0.ɵɵelement(11, \"span\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(12, \"span\", 10, 11);\n        ɵngcc0.ɵɵelement(14, \"span\", 12, 13);\n        ɵngcc0.ɵɵelement(16, \"span\", 14, 15);\n        ɵngcc0.ɵɵelement(18, \"span\", 16, 17);\n        ɵngcc0.ɵɵelement(20, \"span\", 18, 19);\n        ɵngcc0.ɵɵelement(22, \"span\", 20, 21);\n        ɵngcc0.ɵɵelement(24, \"span\", 22, 23);\n        ɵngcc0.ɵɵelementStart(26, \"span\", 24, 25);\n        ɵngcc0.ɵɵtemplate(28, SliderComponent_span_28_Template, 4, 9, \"span\", 26);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-transparent\", ctx.fullBarTransparentClass);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-draggable\", ctx.selectionBarDraggableClass);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.barStyle);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.minPointerStyle);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.range ? \"inherit\" : \"none\");\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.maxPointerStyle);\n        ɵngcc0.ɵɵadvance(12);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-ticks-values-under\", ctx.ticksUnderValuesClass);\n        ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showTicks);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    } }, directives: function () { return [SliderElementDirective, ɵngcc1.NgStyle, SliderHandleDirective, SliderLabelDirective, ɵngcc1.NgForOf, ɵngcc1.NgClass, TooltipWrapperComponent, ɵngcc1.NgIf]; }, styles: [\".ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}  .ng5-slider.with-legend{margin-bottom:40px}  .ng5-slider[disabled]{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}  .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}  .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}  .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}  .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}  .ng5-slider .ng5-slider-draggable{cursor:move}  .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}  .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}  .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}  .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}  .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}  .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}  .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}  .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}  .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}  .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}  .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}  .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}  .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}  .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}  .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}  .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}  .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}  .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}  .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}  .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}  .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}  .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}  .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}  .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}  .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}  .ng5-slider *{-webkit-transition:none;transition:none}  .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}  .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}\"] });\n/** @nocollapse */\nSliderComponent.ctorParameters = () => [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n    { type: NgZone, },\n];\nSliderComponent.propDecorators = {\n    \"value\": [{ type: Input },],\n    \"valueChange\": [{ type: Output },],\n    \"highValue\": [{ type: Input },],\n    \"highValueChange\": [{ type: Output },],\n    \"options\": [{ type: Input },],\n    \"userChangeStart\": [{ type: Output },],\n    \"userChange\": [{ type: Output },],\n    \"userChangeEnd\": [{ type: Output },],\n    \"manualRefresh\": [{ type: Input },],\n    \"triggerFocus\": [{ type: Input },],\n    \"leftOuterSelectionBarElement\": [{ type: ViewChild, args: ['leftOuterSelectionBar', { read: SliderElementDirective },] },],\n    \"rightOuterSelectionBarElement\": [{ type: ViewChild, args: ['rightOuterSelectionBar', { read: SliderElementDirective },] },],\n    \"fullBarElement\": [{ type: ViewChild, args: ['fullBar', { read: SliderElementDirective },] },],\n    \"selectionBarElement\": [{ type: ViewChild, args: ['selectionBar', { read: SliderElementDirective },] },],\n    \"minHandleElement\": [{ type: ViewChild, args: ['minHandle', { read: SliderHandleDirective },] },],\n    \"maxHandleElement\": [{ type: ViewChild, args: ['maxHandle', { read: SliderHandleDirective },] },],\n    \"floorLabelElement\": [{ type: ViewChild, args: ['floorLabel', { read: SliderLabelDirective },] },],\n    \"ceilLabelElement\": [{ type: ViewChild, args: ['ceilLabel', { read: SliderLabelDirective },] },],\n    \"minHandleLabelElement\": [{ type: ViewChild, args: ['minHandleLabel', { read: SliderLabelDirective },] },],\n    \"maxHandleLabelElement\": [{ type: ViewChild, args: ['maxHandleLabel', { read: SliderLabelDirective },] },],\n    \"combinedLabelElement\": [{ type: ViewChild, args: ['combinedLabel', { read: SliderLabelDirective },] },],\n    \"ticksElement\": [{ type: ViewChild, args: ['ticksElement', { read: SliderElementDirective },] },],\n    \"tooltipTemplate\": [{ type: ContentChild, args: ['tooltipTemplate',] },],\n    \"sliderElementVerticalClass\": [{ type: HostBinding, args: ['class.vertical',] },],\n    \"sliderElementAnimateClass\": [{ type: HostBinding, args: ['class.animate',] },],\n    \"sliderElementDisabledAttr\": [{ type: HostBinding, args: ['attr.disabled',] },],\n    \"onResize\": [{ type: HostListener, args: ['window:resize', ['$event'],] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng5-slider',\n                template: `<!-- // 0 Left selection bar outside two handles -->\n<span ng5SliderElement #leftOuterSelectionBar class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-left-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 1 Right selection bar outside two handles -->\n<span ng5SliderElement #rightOuterSelectionBar class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-right-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 2 The whole slider bar -->\n<span ng5SliderElement #fullBar [class.ng5-slider-transparent]=\"fullBarTransparentClass\" class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-full-bar\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 3 Selection bar between two handles -->\n<span ng5SliderElement #selectionBar [class.ng5-slider-draggable]=\"selectionBarDraggableClass\" class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-selection-bar\">\n  <span class=\"ng5-slider-span ng5-slider-bar ng5-slider-selection\" [ngStyle]=\"barStyle\"></span>\n</span>\n<!-- // 4 Low slider handle -->\n<span ng5SliderHandle #minHandle class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-min\" [ngStyle]=minPointerStyle></span>\n<!-- // 5 High slider handle -->\n<span ng5SliderHandle #maxHandle [style.display]=\"range ? 'inherit' : 'none'\" class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-max\" [ngStyle]=maxPointerStyle></span>\n<!-- // 6 Floor label -->\n<span ng5SliderLabel #floorLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-floor\"></span>\n<!-- // 7 Ceiling label -->\n<span ng5SliderLabel #ceilLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-ceil\"></span>\n<!-- // 8 Label above the low slider handle -->\n<span ng5SliderLabel #minHandleLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-value\"></span>\n<!-- // 9 Label above the high slider handle -->\n<span ng5SliderLabel #maxHandleLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-high\"></span>\n<!-- // 10 Combined range label when the slider handles are close ex. 15 - 17 -->\n<span ng5SliderLabel #combinedLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-combined\"></span>\n<!-- // 11 The ticks -->\n<span ng5SliderElement #ticksElement [hidden]=\"!showTicks\" [class.ng5-slider-ticks-values-under]=\"ticksUnderValuesClass\" class=\"ng5-slider-ticks\">\n  <span *ngFor=\"let t of ticks\" class=\"ng5-slider-tick\" [ngClass]=\"{'ng5-slider-selected': t.selected}\" [ngStyle]=\"t.style\">\n    <ng5-slider-tooltip-wrapper [template]=\"tooltipTemplate\" [tooltip]=\"t.tooltip\" [placement]=\"t.tooltipPlacement\"></ng5-slider-tooltip-wrapper>\n    <ng5-slider-tooltip-wrapper *ngIf=\"t.value != null\" class=\"ng5-slider-span ng5-slider-tick-value\"\n        [template]=\"tooltipTemplate\" [tooltip]=\"t.valueTooltip\" [placement]=\"t.valueTooltipPlacement\" [content]=\"t.value\"></ng5-slider-tooltip-wrapper>\n    <span *ngIf=\"t.legend != null\" class=\"ng5-slider-span ng5-slider-tick-legend\" [innerHTML]=\"t.legend\"></span>\n  </span>\n</span>`,\n                styles: [`::ng-deep .ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}::ng-deep .ng5-slider.with-legend{margin-bottom:40px}::ng-deep .ng5-slider[disabled]{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}::ng-deep .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}::ng-deep .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}::ng-deep .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}::ng-deep .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}::ng-deep .ng5-slider .ng5-slider-draggable{cursor:move}::ng-deep .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}::ng-deep .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}::ng-deep .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}::ng-deep .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}::ng-deep .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}::ng-deep .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}::ng-deep .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}::ng-deep .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}::ng-deep .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}::ng-deep .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}::ng-deep .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}::ng-deep .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}::ng-deep .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}::ng-deep .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}::ng-deep .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}::ng-deep .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}::ng-deep .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}::ng-deep .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}::ng-deep .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}::ng-deep .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}::ng-deep .ng5-slider *{-webkit-transition:none;transition:none}::ng-deep .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}`],\n                host: { class: 'ng5-slider' },\n                providers: [NG5_SLIDER_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { value: [{\n            type: Input\n        }], valueChange: [{\n            type: Output\n        }], highValue: [{\n            type: Input\n        }], highValueChange: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], userChangeStart: [{\n            type: Output\n        }], userChange: [{\n            type: Output\n        }], userChangeEnd: [{\n            type: Output\n        }], sliderElementVerticalClass: [{\n            type: HostBinding,\n            args: ['class.vertical']\n        }], sliderElementAnimateClass: [{\n            type: HostBinding,\n            args: ['class.animate']\n        }], sliderElementDisabledAttr: [{\n            type: HostBinding,\n            args: ['attr.disabled']\n        }], manualRefresh: [{\n            type: Input\n        }], triggerFocus: [{\n            type: Input\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize: [{\n            type: HostListener,\n            args: ['window:resize', ['$event']]\n        }], leftOuterSelectionBarElement: [{\n            type: ViewChild,\n            args: ['leftOuterSelectionBar', { read: SliderElementDirective }]\n        }], rightOuterSelectionBarElement: [{\n            type: ViewChild,\n            args: ['rightOuterSelectionBar', { read: SliderElementDirective }]\n        }], fullBarElement: [{\n            type: ViewChild,\n            args: ['fullBar', { read: SliderElementDirective }]\n        }], selectionBarElement: [{\n            type: ViewChild,\n            args: ['selectionBar', { read: SliderElementDirective }]\n        }], minHandleElement: [{\n            type: ViewChild,\n            args: ['minHandle', { read: SliderHandleDirective }]\n        }], maxHandleElement: [{\n            type: ViewChild,\n            args: ['maxHandle', { read: SliderHandleDirective }]\n        }], floorLabelElement: [{\n            type: ViewChild,\n            args: ['floorLabel', { read: SliderLabelDirective }]\n        }], ceilLabelElement: [{\n            type: ViewChild,\n            args: ['ceilLabel', { read: SliderLabelDirective }]\n        }], minHandleLabelElement: [{\n            type: ViewChild,\n            args: ['minHandleLabel', { read: SliderLabelDirective }]\n        }], maxHandleLabelElement: [{\n            type: ViewChild,\n            args: ['maxHandleLabel', { read: SliderLabelDirective }]\n        }], combinedLabelElement: [{\n            type: ViewChild,\n            args: ['combinedLabel', { read: SliderLabelDirective }]\n        }], ticksElement: [{\n            type: ViewChild,\n            args: ['ticksElement', { read: SliderElementDirective }]\n        }], tooltipTemplate: [{\n            type: ContentChild,\n            args: ['tooltipTemplate']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass TooltipWrapperComponent {\n}\nTooltipWrapperComponent.ɵfac = function TooltipWrapperComponent_Factory(t) { return new (t || TooltipWrapperComponent)(); };\nTooltipWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipWrapperComponent, selectors: [[\"ng5-slider-tooltip-wrapper\"]], inputs: { template: \"template\", tooltip: \"tooltip\", placement: \"placement\", content: \"content\" }, decls: 2, vars: 2, consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ng5-slider-inner-tooltip\"]], template: function TooltipWrapperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_Template, 2, 6, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], styles: [\".ng5-slider-inner-tooltip[_ngcontent-%COMP%]{height:100%}\"] });\n/** @nocollapse */\nTooltipWrapperComponent.ctorParameters = () => [];\nTooltipWrapperComponent.propDecorators = {\n    \"template\": [{ type: Input },],\n    \"tooltip\": [{ type: Input },],\n    \"placement\": [{ type: Input },],\n    \"content\": [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipWrapperComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng5-slider-tooltip-wrapper',\n                template: `<ng-container *ngIf=\"template\">\n  <ng-template *ngTemplateOutlet=\"template; context: {tooltip: tooltip, placement: placement, content: content}\"></ng-template>\n</ng-container>\n\n<ng-container *ngIf=\"!template\">\n  <div class=\"ng5-slider-inner-tooltip\" [attr.title]=\"tooltip\" [attr.data-tooltip-placement]=\"placement\">\n    {{content}}\n  </div>\n</ng-container>`,\n                styles: [`.ng5-slider-inner-tooltip{height:100%}`]\n            }]\n    }], null, { template: [{\n            type: Input\n        }], tooltip: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Ng5Slider module\n *\n * The module exports the slider component\n */\nclass Ng5SliderModule {\n}\nNg5SliderModule.ɵfac = function Ng5SliderModule_Factory(t) { return new (t || Ng5SliderModule)(); };\nNg5SliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Ng5SliderModule });\nNg5SliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule\n        ]] });\n/** @nocollapse */\nNg5SliderModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng5SliderModule, { declarations: function () { return [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SliderComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng5SliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    SliderComponent,\n                    SliderElementDirective,\n                    SliderHandleDirective,\n                    SliderLabelDirective,\n                    TooltipWrapperComponent\n                ],\n                exports: [\n                    SliderComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng5SliderModule, ChangeContext, PointerType, LabelType, Options, SliderElementDirective as ɵb, SliderHandleDirective as ɵc, SliderLabelDirective as ɵd, SliderComponent as ɵa, TooltipWrapperComponent as ɵe };\n\n//# sourceMappingURL=ng5-slider.js.map"]},"metadata":{},"sourceType":"module"}