{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\n\n\nfunction skip(count) {\n  return function (source) {\n    return source.lift(new SkipOperator(count));\n  };\n}\n\nexports.skip = skip;\n\nvar SkipOperator = function () {\n  function SkipOperator(total) {\n    this.total = total;\n  }\n\n  SkipOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  };\n\n  return SkipOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar SkipSubscriber = function (_super) {\n  __extends(SkipSubscriber, _super);\n\n  function SkipSubscriber(destination, total) {\n    _super.call(this, destination);\n\n    this.total = total;\n    this.count = 0;\n  }\n\n  SkipSubscriber.prototype._next = function (x) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  };\n\n  return SkipSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=skip.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ng5-slider/node_modules/rxjs/operators/skip.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","skip","count","source","lift","SkipOperator","exports","total","call","subscriber","subscribe","SkipSubscriber","_super","destination","_next","x","next","Subscriber"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxD,OAAK,IAAIC,CAAT,IAAcD,CAAd,EAAiB,IAAIA,CAAC,CAACE,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBF,CAAC,CAACE,CAAD,CAAD,GAAOD,CAAC,CAACC,CAAD,CAAR;;AAC1C,WAASE,EAAT,GAAc;AAAE,SAAKC,WAAL,GAAmBL,CAAnB;AAAuB;;AACvCA,EAAAA,CAAC,CAACM,SAAF,GAAcL,CAAC,KAAK,IAAN,GAAaM,MAAM,CAACC,MAAP,CAAcP,CAAd,CAAb,IAAiCG,EAAE,CAACE,SAAH,GAAeL,CAAC,CAACK,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,CAJD;;AAKA,IAAIK,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,SAAO,UAAUC,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,YAAJ,CAAiBH,KAAjB,CAAZ,CAAP;AAA8C,GAAzE;AACH;;AACDI,OAAO,CAACL,IAAR,GAAeA,IAAf;;AACA,IAAII,YAAY,GAAI,YAAY;AAC5B,WAASA,YAAT,CAAsBE,KAAtB,EAA6B;AACzB,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDF,EAAAA,YAAY,CAACT,SAAb,CAAuBY,IAAvB,GAA8B,UAAUC,UAAV,EAAsBN,MAAtB,EAA8B;AACxD,WAAOA,MAAM,CAACO,SAAP,CAAiB,IAAIC,cAAJ,CAAmBF,UAAnB,EAA+B,KAAKF,KAApC,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOF,YAAP;AACH,CARmB,EAApB;AASA;AACA;AACA;AACA;AACA;;;AACA,IAAIM,cAAc,GAAI,UAAUC,MAAV,EAAkB;AACpCvB,EAAAA,SAAS,CAACsB,cAAD,EAAiBC,MAAjB,CAAT;;AACA,WAASD,cAAT,CAAwBE,WAAxB,EAAqCN,KAArC,EAA4C;AACxCK,IAAAA,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBK,WAAlB;;AACA,SAAKN,KAAL,GAAaA,KAAb;AACA,SAAKL,KAAL,GAAa,CAAb;AACH;;AACDS,EAAAA,cAAc,CAACf,SAAf,CAAyBkB,KAAzB,GAAiC,UAAUC,CAAV,EAAa;AAC1C,QAAI,EAAE,KAAKb,KAAP,GAAe,KAAKK,KAAxB,EAA+B;AAC3B,WAAKM,WAAL,CAAiBG,IAAjB,CAAsBD,CAAtB;AACH;AACJ,GAJD;;AAKA,SAAOJ,cAAP;AACH,CAbqB,CAapBZ,YAAY,CAACkB,UAbO,CAAtB,C,CAcA","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map"]},"metadata":{},"sourceType":"script"}