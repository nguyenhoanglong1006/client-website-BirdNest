{"ast":null,"code":"import _classCallCheck from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { isPlatformServer } from '@angular/common';\nimport { EventEmitter, Input, Output, Directive, Inject, PLATFORM_ID, Optional, ElementRef, NgZone, NgModule } from '@angular/core';\nimport { Subject, Observable, of, ReplaySubject, empty } from 'rxjs';\nimport { filter, take, mergeMap, tap, map, catchError, switchMap, sampleTime, share, startWith } from 'rxjs/operators';\nimport * as Éµngcc0 from '@angular/core';\nvar cssClassNames = {\n  loaded: 'ng-lazyloaded',\n  loading: 'ng-lazyloading',\n  failed: 'ng-failed-lazyloaded'\n};\n\nfunction removeCssClassName(element, cssClassName) {\n  element.className = element.className.replace(cssClassName, '');\n}\n\nfunction addCssClassName(element, cssClassName) {\n  if (!element.className.includes(cssClassName)) {\n    element.className += \" \".concat(cssClassName);\n  }\n}\n\nfunction hasCssClassName(element, cssClassName) {\n  return element.className && element.className.includes(cssClassName);\n}\n\nfunction getNavigator() {\n  return typeof window !== 'undefined' ? window.navigator : undefined;\n}\n\nfunction isChildOfPicture(element) {\n  return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\n\nfunction isImageElement(element) {\n  return element.nodeName.toLowerCase() === 'img';\n}\n\nfunction setImage(element, imagePath, useSrcset) {\n  if (isImageElement(element)) {\n    if (useSrcset && 'srcset' in element) {\n      element.srcset = imagePath;\n    } else {\n      element.src = imagePath;\n    }\n  } else {\n    element.style.backgroundImage = \"url('\".concat(imagePath, \"')\");\n  }\n\n  return element;\n}\n\nfunction setSources(attrName) {\n  return function (image) {\n    var sources = image.parentElement.getElementsByTagName('source');\n\n    for (var i = 0; i < sources.length; i++) {\n      var attrValue = sources[i].getAttribute(attrName);\n\n      if (attrValue) {\n        // Check if `srcset` is supported by the current browser\n        if ('srcset' in sources[i]) {\n          sources[i].srcset = attrValue;\n        } else {\n          sources[i].src = attrValue;\n        }\n      }\n    }\n  };\n}\n\nvar setSourcesToDefault = setSources('defaultImage');\nvar setSourcesToLazy = setSources('lazyLoad');\nvar setSourcesToError = setSources('errorImage');\n\nfunction setImageAndSources(setSourcesFn) {\n  return function (element, imagePath, useSrcset) {\n    if (isImageElement(element) && isChildOfPicture(element)) {\n      setSourcesFn(element);\n    }\n\n    if (imagePath) {\n      setImage(element, imagePath, useSrcset);\n    }\n  };\n}\n\nvar setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nvar setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nvar setImageAndSourcesToError = setImageAndSources(setSourcesToError);\n\nvar end = function end(_ref) {\n  var element = _ref.element;\n  return addCssClassName(element, cssClassNames.loaded);\n};\n\nvar loadImage = function loadImage(_ref2) {\n  var element = _ref2.element,\n      useSrcset = _ref2.useSrcset,\n      imagePath = _ref2.imagePath,\n      decode = _ref2.decode;\n  var img;\n\n  if (isImageElement(element) && isChildOfPicture(element)) {\n    var parentClone = element.parentNode.cloneNode(true);\n    img = parentClone.getElementsByTagName('img')[0];\n    setSourcesToLazy(img);\n    setImage(img, imagePath, useSrcset);\n  } else {\n    img = new Image();\n\n    if (isImageElement(element) && element.sizes) {\n      img.sizes = element.sizes;\n    }\n\n    if (useSrcset && 'srcset' in img) {\n      img.srcset = imagePath;\n    } else {\n      img.src = imagePath;\n    }\n  }\n\n  if (decode && img.decode) {\n    return img.decode().then(function () {\n      return imagePath;\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    img.onload = function () {\n      return resolve(imagePath);\n    };\n\n    img.onerror = function () {\n      return reject(null);\n    };\n  });\n};\n\nvar setErrorImage = function setErrorImage(_ref3) {\n  var element = _ref3.element,\n      errorImagePath = _ref3.errorImagePath,\n      useSrcset = _ref3.useSrcset;\n  setImageAndSourcesToError(element, errorImagePath, useSrcset);\n  addCssClassName(element, cssClassNames.failed);\n};\n\nvar setLoadedImage = function setLoadedImage(_ref4) {\n  var element = _ref4.element,\n      imagePath = _ref4.imagePath,\n      useSrcset = _ref4.useSrcset;\n  setImageAndSourcesToLazy(element, imagePath, useSrcset);\n};\n\nvar setup = function setup(_ref5) {\n  var element = _ref5.element,\n      defaultImagePath = _ref5.defaultImagePath,\n      useSrcset = _ref5.useSrcset;\n  setImageAndSourcesToDefault(element, defaultImagePath, useSrcset);\n\n  if (hasCssClassName(element, cssClassNames.loaded)) {\n    removeCssClassName(element, cssClassNames.loaded);\n  }\n};\n\nvar isBot = function isBot(navigator) {\n  if (navigator && navigator.userAgent) {\n    return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot/i.test(navigator.userAgent);\n  }\n\n  return false;\n};\n\nvar sharedPreset = {\n  finally: end,\n  loadImage: loadImage,\n  setErrorImage: setErrorImage,\n  setLoadedImage: setLoadedImage,\n  setup: setup,\n  isBot: isBot\n};\nvar observers = new WeakMap();\nvar intersectionSubject = new Subject();\n\nfunction loadingCallback(entrys) {\n  entrys.forEach(function (entry) {\n    return intersectionSubject.next(entry);\n  });\n}\n\nvar uniqKey = {};\n\nvar getIntersectionObserver = function getIntersectionObserver(attributes) {\n  var scrollContainerKey = attributes.scrollContainer || uniqKey;\n  var options = {\n    root: attributes.scrollContainer || null\n  };\n\n  if (attributes.offset) {\n    options.rootMargin = \"\".concat(attributes.offset, \"px\");\n  }\n\n  var observer = observers.get(scrollContainerKey);\n\n  if (!observer) {\n    observer = new IntersectionObserver(loadingCallback, options);\n    observers.set(scrollContainerKey, observer);\n  }\n\n  observer.observe(attributes.element);\n  return Observable.create(function (obs) {\n    var subscription = intersectionSubject.pipe(filter(function (entry) {\n      return entry.target === attributes.element;\n    })).subscribe(obs);\n    return function () {\n      subscription.unsubscribe();\n      observer.unobserve(attributes.element);\n    };\n  });\n};\n\nvar isVisible = function isVisible(_ref6) {\n  var event = _ref6.event;\n  return event.isIntersecting;\n};\n\nvar getObservable = function getObservable(attributes) {\n  var _getInterObserver = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getIntersectionObserver;\n\n  if (attributes.customObservable) {\n    return attributes.customObservable;\n  }\n\n  return _getInterObserver(attributes);\n};\n\nvar intersectionObserverPreset = Object.assign({}, sharedPreset, {\n  isVisible: isVisible,\n  getObservable: getObservable\n});\n\nvar isVisible$1 = function isVisible$1() {\n  return true;\n};\n\nvar getObservable$1 = function getObservable$1() {\n  return of('load');\n};\n\nvar loadImage$1 = function loadImage$1(_ref7) {\n  var imagePath = _ref7.imagePath;\n  return [imagePath];\n};\n\nvar ssrPreset = Object.assign({}, sharedPreset, {\n  isVisible: isVisible$1,\n  getObservable: getObservable$1,\n  loadImage: loadImage$1\n});\n\nfunction createHooks(platformId, options) {\n  var defaultPreset = intersectionObserverPreset;\n  var isBot = options && options.isBot ? options.isBot : defaultPreset.isBot;\n\n  if (isBot(getNavigator(), platformId)) {\n    return Object.assign(ssrPreset, {\n      isBot: isBot\n    });\n  } else if (!options) {\n    return defaultPreset;\n  }\n\n  var hooks = {};\n\n  if (options.preset) {\n    Object.assign(hooks, options.preset);\n  } else {\n    Object.assign(hooks, defaultPreset);\n  }\n\n  Object.keys(options).filter(function (key) {\n    return key !== 'preset';\n  }).forEach(function (key) {\n    hooks[key] = options[key];\n  });\n  return hooks;\n}\n\nfunction lazyLoadImage(hookSet, attributes) {\n  return function (evntObservable) {\n    return evntObservable.pipe(filter(function (event) {\n      return hookSet.isVisible({\n        element: attributes.element,\n        event: event,\n        offset: attributes.offset,\n        scrollContainer: attributes.scrollContainer\n      });\n    }), take(1), mergeMap(function () {\n      return hookSet.loadImage(attributes);\n    }), tap(function (imagePath) {\n      return hookSet.setLoadedImage({\n        element: attributes.element,\n        imagePath: imagePath,\n        useSrcset: attributes.useSrcset\n      });\n    }), map(function () {\n      return true;\n    }), catchError(function () {\n      hookSet.setErrorImage(attributes);\n      return of(false);\n    }), tap(function () {\n      return hookSet.finally(attributes);\n    }));\n  };\n}\n\nvar LazyLoadImageDirective = /*#__PURE__*/function () {\n  function LazyLoadImageDirective(el, ngZone, platformId, options) {\n    _classCallCheck(this, LazyLoadImageDirective);\n\n    this.onLoad = new EventEmitter(); // Callback when an image is loaded\n\n    this.elementRef = el;\n    this.ngZone = ngZone;\n    this.propertyChanges$ = new ReplaySubject();\n    this.platformId = platformId;\n    this.hooks = createHooks(platformId, options);\n  }\n\n  return _createClass(LazyLoadImageDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.propertyChanges$.next({\n        element: this.elementRef.nativeElement,\n        imagePath: this.lazyImage,\n        defaultImagePath: this.defaultImage,\n        errorImagePath: this.errorImage,\n        useSrcset: this.useSrcset,\n        offset: this.offset ? this.offset | 0 : 0,\n        scrollContainer: this.scrollTarget,\n        customObservable: this.customObservable,\n        decode: this.decode\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      // Don't do anything if SSR and the user isn't a bot\n      if (isPlatformServer(this.platformId) && !this.hooks.isBot(getNavigator(), this.platformId)) {\n        return null;\n      }\n\n      this.ngZone.runOutsideAngular(function () {\n        _this.scrollSubscription = _this.propertyChanges$.pipe(tap(function (attributes) {\n          return _this.hooks.setup(attributes);\n        }), switchMap(function (attributes) {\n          return _this.hooks.getObservable(attributes).pipe(lazyLoadImage(_this.hooks, attributes));\n        })).subscribe(function (success) {\n          return _this.onLoad.emit(success);\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n      }\n    }\n  }]);\n}();\n\nLazyLoadImageDirective.Éµfac = function LazyLoadImageDirective_Factory(t) {\n  return new (t || LazyLoadImageDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject('options', 8));\n};\n\nLazyLoadImageDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({\n  type: LazyLoadImageDirective,\n  selectors: [[\"\", \"lazyLoad\", \"\"]],\n  inputs: {\n    lazyImage: [\"lazyLoad\", \"lazyImage\"],\n    defaultImage: \"defaultImage\",\n    errorImage: \"errorImage\",\n    scrollTarget: \"scrollTarget\",\n    customObservable: \"customObservable\",\n    offset: \"offset\",\n    useSrcset: \"useSrcset\",\n    decode: \"decode\"\n  },\n  outputs: {\n    onLoad: \"onLoad\"\n  },\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n\n__decorate([Input('lazyLoad'), __metadata(\"design:type\", String)], LazyLoadImageDirective.prototype, \"lazyImage\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LazyLoadImageDirective.prototype, \"defaultImage\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LazyLoadImageDirective.prototype, \"errorImage\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LazyLoadImageDirective.prototype, \"scrollTarget\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Observable)], LazyLoadImageDirective.prototype, \"customObservable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], LazyLoadImageDirective.prototype, \"offset\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], LazyLoadImageDirective.prototype, \"useSrcset\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], LazyLoadImageDirective.prototype, \"decode\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], LazyLoadImageDirective.prototype, \"onLoad\", void 0);\n\nLazyLoadImageDirective = __decorate([__param(2, Inject(PLATFORM_ID)), __param(3, Optional()), __param(3, Inject('options')), __metadata(\"design:paramtypes\", [ElementRef, NgZone, Object, Object])], LazyLoadImageDirective);\nvar LazyLoadImageModule_1;\n\nvar LazyLoadImageModule = LazyLoadImageModule_1 = /*#__PURE__*/function () {\n  function LazyLoadImageModule() {\n    _classCallCheck(this, LazyLoadImageModule);\n  }\n\n  return _createClass(LazyLoadImageModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot(options) {\n      return {\n        ngModule: LazyLoadImageModule_1,\n        providers: [{\n          provide: 'options',\n          useValue: options\n        }]\n      };\n    }\n  }]);\n}();\n\nLazyLoadImageModule.Éµfac = function LazyLoadImageModule_Factory(t) {\n  return new (t || LazyLoadImageModule)();\n};\n\nLazyLoadImageModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({\n  type: LazyLoadImageModule\n});\nLazyLoadImageModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(LazyLoadImageDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lazyLoad]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: ['options']\n      }]\n    }];\n  }, {\n    onLoad: [{\n      type: Output\n    }],\n    lazyImage: [{\n      type: Input,\n      args: ['lazyLoad']\n    }],\n    defaultImage: [{\n      type: Input\n    }],\n    errorImage: [{\n      type: Input\n    }],\n    scrollTarget: [{\n      type: Input\n    }],\n    customObservable: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    useSrcset: [{\n      type: Input\n    }],\n    decode: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(LazyLoadImageModule, {\n    declarations: [LazyLoadImageDirective],\n    exports: [LazyLoadImageDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(LazyLoadImageModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [LazyLoadImageDirective],\n      exports: [LazyLoadImageDirective]\n    }]\n  }], null, null);\n})();\n\nvar Rect = /*#__PURE__*/function () {\n  function Rect(left, top, right, bottom) {\n    _classCallCheck(this, Rect);\n\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  return _createClass(Rect, [{\n    key: \"inflate\",\n    value: function inflate(inflateBy) {\n      this.left -= inflateBy;\n      this.top -= inflateBy;\n      this.right += inflateBy;\n      this.bottom += inflateBy;\n    }\n  }, {\n    key: \"intersectsWith\",\n    value: function intersectsWith(rect) {\n      return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n    }\n  }, {\n    key: \"getIntersectionWith\",\n    value: function getIntersectionWith(rect) {\n      var left = Math.max(this.left, rect.left);\n      var top = Math.max(this.top, rect.top);\n      var right = Math.min(this.right, rect.right);\n      var bottom = Math.min(this.bottom, rect.bottom);\n\n      if (right >= left && bottom >= top) {\n        return new Rect(left, top, right, bottom);\n      } else {\n        return Rect.empty;\n      }\n    }\n  }], [{\n    key: \"fromElement\",\n    value: function fromElement(element) {\n      var _element$getBoundingC = element.getBoundingClientRect(),\n          left = _element$getBoundingC.left,\n          top = _element$getBoundingC.top,\n          right = _element$getBoundingC.right,\n          bottom = _element$getBoundingC.bottom;\n\n      if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n        return Rect.empty;\n      } else {\n        return new Rect(left, top, right, bottom);\n      }\n    }\n  }, {\n    key: \"fromWindow\",\n    value: function fromWindow(_window) {\n      return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n    }\n  }]);\n}();\n\nRect.empty = new Rect(0, 0, 0, 0);\nvar scrollListeners = new WeakMap();\n\nfunction sampleObservable(obs, scheduler) {\n  return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n} // Only create one scroll listener per target and share the observable.\n// Typical, there will only be one observable per application\n\n\nvar getScrollListener = function getScrollListener(scrollTarget) {\n  if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n    console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n    return empty();\n  }\n\n  var scrollListener = scrollListeners.get(scrollTarget);\n\n  if (scrollListener) {\n    return scrollListener;\n  }\n\n  var srollEvent = Observable.create(function (observer) {\n    var eventName = 'scroll';\n\n    var handler = function handler(event) {\n      return observer.next(event);\n    };\n\n    var options = {\n      passive: true,\n      capture: false\n    };\n    scrollTarget.addEventListener(eventName, handler, options);\n    return function () {\n      return scrollTarget.removeEventListener(eventName, handler, options);\n    };\n  });\n  var listener = sampleObservable(srollEvent);\n  scrollListeners.set(scrollTarget, listener);\n  return listener;\n};\n\nvar isVisible$2 = function isVisible$2(_ref8) {\n  var element = _ref8.element,\n      offset = _ref8.offset,\n      scrollContainer = _ref8.scrollContainer;\n  var getWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return window;\n  };\n  var elementBounds = Rect.fromElement(element);\n\n  if (elementBounds === Rect.empty) {\n    return false;\n  }\n\n  var windowBounds = Rect.fromWindow(getWindow());\n  elementBounds.inflate(offset);\n\n  if (scrollContainer) {\n    var scrollContainerBounds = Rect.fromElement(scrollContainer);\n    var intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n    return elementBounds.intersectsWith(intersection);\n  } else {\n    return elementBounds.intersectsWith(windowBounds);\n  }\n};\n\nvar getObservable$2 = function getObservable$2(attributes) {\n  if (attributes.customObservable) {\n    return attributes.customObservable.pipe(startWith(''));\n  }\n\n  if (attributes.scrollContainer) {\n    return getScrollListener(attributes.scrollContainer);\n  }\n\n  return getScrollListener(window);\n};\n\nvar scrollPreset = Object.assign({}, sharedPreset, {\n  isVisible: isVisible$2,\n  getObservable: getObservable$2\n});\nexport { LazyLoadImageDirective, LazyLoadImageModule, intersectionObserverPreset, scrollPreset }; //# sourceMappingURL=ng-lazyload-image.js.map","map":{"version":3,"sources":["/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/ng-lazyload-image/__ivy_ngcc__/fesm2015/ng-lazyload-image.js"],"names":["__decorate","__metadata","__param","isPlatformServer","EventEmitter","Input","Output","Directive","Inject","PLATFORM_ID","Optional","ElementRef","NgZone","NgModule","Subject","Observable","of","ReplaySubject","empty","filter","take","mergeMap","tap","map","catchError","switchMap","sampleTime","share","startWith","Éµngcc0","cssClassNames","loaded","loading","failed","removeCssClassName","element","cssClassName","className","replace","addCssClassName","includes","hasCssClassName","getNavigator","window","navigator","undefined","isChildOfPicture","Boolean","parentElement","nodeName","toLowerCase","isImageElement","setImage","imagePath","useSrcset","srcset","src","style","backgroundImage","setSources","attrName","image","sources","getElementsByTagName","i","length","attrValue","getAttribute","setSourcesToDefault","setSourcesToLazy","setSourcesToError","setImageAndSources","setSourcesFn","setImageAndSourcesToDefault","setImageAndSourcesToLazy","setImageAndSourcesToError","end","loadImage","decode","img","parentClone","parentNode","cloneNode","Image","sizes","then","Promise","resolve","reject","onload","onerror","setErrorImage","errorImagePath","setLoadedImage","setup","defaultImagePath","isBot","userAgent","test","sharedPreset","finally","observers","WeakMap","intersectionSubject","loadingCallback","entrys","forEach","entry","next","uniqKey","getIntersectionObserver","attributes","scrollContainerKey","scrollContainer","options","root","offset","rootMargin","observer","get","IntersectionObserver","set","observe","create","obs","subscription","pipe","target","subscribe","unsubscribe","unobserve","isVisible","event","isIntersecting","getObservable","_getInterObserver","customObservable","intersectionObserverPreset","Object","assign","isVisible$1","getObservable$1","loadImage$1","ssrPreset","createHooks","platformId","defaultPreset","hooks","preset","keys","key","lazyLoadImage","hookSet","evntObservable","LazyLoadImageDirective","el","ngZone","onLoad","elementRef","propertyChanges$","ngOnChanges","nativeElement","lazyImage","defaultImage","errorImage","scrollTarget","ngAfterContentInit","runOutsideAngular","scrollSubscription","success","emit","ngOnDestroy","Éµfac","LazyLoadImageDirective_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","type","selectors","inputs","outputs","features","ÉµÉµNgOnChangesFeature","String","prototype","Number","LazyLoadImageModule_1","LazyLoadImageModule","forRoot","ngModule","providers","provide","useValue","LazyLoadImageModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","ngDevMode","ÉµsetClassMetadata","args","selector","decorators","ngJitMode","ÉµÉµsetNgModuleScope","declarations","exports","Rect","left","top","right","bottom","inflate","inflateBy","intersectsWith","rect","getIntersectionWith","Math","max","min","fromElement","getBoundingClientRect","fromWindow","_window","innerWidth","innerHeight","scrollListeners","sampleObservable","scheduler","getScrollListener","addEventListener","console","warn","scrollListener","srollEvent","eventName","handler","passive","capture","removeEventListener","listener","isVisible$2","getWindow","elementBounds","windowBounds","scrollContainerBounds","intersection","getObservable$2","scrollPreset"],"mappings":"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","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { isPlatformServer } from '@angular/common';\nimport { EventEmitter, Input, Output, Directive, Inject, PLATFORM_ID, Optional, ElementRef, NgZone, NgModule } from '@angular/core';\nimport { Subject, Observable, of, ReplaySubject, empty } from 'rxjs';\nimport { filter, take, mergeMap, tap, map, catchError, switchMap, sampleTime, share, startWith } from 'rxjs/operators';\n\nimport * as Éµngcc0 from '@angular/core';\nconst cssClassNames = {\n    loaded: 'ng-lazyloaded',\n    loading: 'ng-lazyloading',\n    failed: 'ng-failed-lazyloaded'\n};\nfunction removeCssClassName(element, cssClassName) {\n    element.className = element.className.replace(cssClassName, '');\n}\nfunction addCssClassName(element, cssClassName) {\n    if (!element.className.includes(cssClassName)) {\n        element.className += ` ${cssClassName}`;\n    }\n}\nfunction hasCssClassName(element, cssClassName) {\n    return element.className && element.className.includes(cssClassName);\n}\n\nfunction getNavigator() {\n    return typeof window !== 'undefined' ? window.navigator : undefined;\n}\nfunction isChildOfPicture(element) {\n    return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\nfunction isImageElement(element) {\n    return element.nodeName.toLowerCase() === 'img';\n}\nfunction setImage(element, imagePath, useSrcset) {\n    if (isImageElement(element)) {\n        if (useSrcset && 'srcset' in element) {\n            element.srcset = imagePath;\n        }\n        else {\n            element.src = imagePath;\n        }\n    }\n    else {\n        element.style.backgroundImage = `url('${imagePath}')`;\n    }\n    return element;\n}\nfunction setSources(attrName) {\n    return (image) => {\n        const sources = image.parentElement.getElementsByTagName('source');\n        for (let i = 0; i < sources.length; i++) {\n            const attrValue = sources[i].getAttribute(attrName);\n            if (attrValue) {\n                // Check if `srcset` is supported by the current browser\n                if ('srcset' in sources[i]) {\n                    sources[i].srcset = attrValue;\n                }\n                else {\n                    sources[i].src = attrValue;\n                }\n            }\n        }\n    };\n}\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\nfunction setImageAndSources(setSourcesFn) {\n    return (element, imagePath, useSrcset) => {\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            setSourcesFn(element);\n        }\n        if (imagePath) {\n            setImage(element, imagePath, useSrcset);\n        }\n    };\n}\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\n\nconst end = ({ element }) => addCssClassName(element, cssClassNames.loaded);\nconst loadImage = ({ element, useSrcset, imagePath, decode }) => {\n    let img;\n    if (isImageElement(element) && isChildOfPicture(element)) {\n        const parentClone = element.parentNode.cloneNode(true);\n        img = parentClone.getElementsByTagName('img')[0];\n        setSourcesToLazy(img);\n        setImage(img, imagePath, useSrcset);\n    }\n    else {\n        img = new Image();\n        if (isImageElement(element) && element.sizes) {\n            img.sizes = element.sizes;\n        }\n        if (useSrcset && 'srcset' in img) {\n            img.srcset = imagePath;\n        }\n        else {\n            img.src = imagePath;\n        }\n    }\n    if (decode && img.decode) {\n        return img.decode().then(() => imagePath);\n    }\n    return new Promise((resolve, reject) => {\n        img.onload = () => resolve(imagePath);\n        img.onerror = () => reject(null);\n    });\n};\nconst setErrorImage = ({ element, errorImagePath, useSrcset }) => {\n    setImageAndSourcesToError(element, errorImagePath, useSrcset);\n    addCssClassName(element, cssClassNames.failed);\n};\nconst setLoadedImage = ({ element, imagePath, useSrcset }) => {\n    setImageAndSourcesToLazy(element, imagePath, useSrcset);\n};\nconst setup = ({ element, defaultImagePath, useSrcset }) => {\n    setImageAndSourcesToDefault(element, defaultImagePath, useSrcset);\n    if (hasCssClassName(element, cssClassNames.loaded)) {\n        removeCssClassName(element, cssClassNames.loaded);\n    }\n};\nconst isBot = navigator => {\n    if (navigator && navigator.userAgent) {\n        return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot/i.test(navigator.userAgent);\n    }\n    return false;\n};\nconst sharedPreset = {\n    finally: end,\n    loadImage,\n    setErrorImage,\n    setLoadedImage,\n    setup,\n    isBot\n};\n\nconst observers = new WeakMap();\nconst intersectionSubject = new Subject();\nfunction loadingCallback(entrys) {\n    entrys.forEach(entry => intersectionSubject.next(entry));\n}\nconst uniqKey = {};\nconst getIntersectionObserver = (attributes) => {\n    const scrollContainerKey = attributes.scrollContainer || uniqKey;\n    const options = {\n        root: attributes.scrollContainer || null\n    };\n    if (attributes.offset) {\n        options.rootMargin = `${attributes.offset}px`;\n    }\n    let observer = observers.get(scrollContainerKey);\n    if (!observer) {\n        observer = new IntersectionObserver(loadingCallback, options);\n        observers.set(scrollContainerKey, observer);\n    }\n    observer.observe(attributes.element);\n    return Observable.create((obs) => {\n        const subscription = intersectionSubject.pipe(filter(entry => entry.target === attributes.element)).subscribe(obs);\n        return () => {\n            subscription.unsubscribe();\n            observer.unobserve(attributes.element);\n        };\n    });\n};\n\nconst isVisible = ({ event }) => {\n    return event.isIntersecting;\n};\nconst getObservable = (attributes, _getInterObserver = getIntersectionObserver) => {\n    if (attributes.customObservable) {\n        return attributes.customObservable;\n    }\n    return _getInterObserver(attributes);\n};\nconst intersectionObserverPreset = Object.assign({}, sharedPreset, {\n    isVisible,\n    getObservable\n});\n\nconst isVisible$1 = () => {\n    return true;\n};\nconst getObservable$1 = () => {\n    return of('load');\n};\nconst loadImage$1 = ({ imagePath }) => {\n    return [imagePath];\n};\nconst ssrPreset = Object.assign({}, sharedPreset, {\n    isVisible: isVisible$1,\n    getObservable: getObservable$1,\n    loadImage: loadImage$1\n});\n\nfunction createHooks(platformId, options) {\n    const defaultPreset = intersectionObserverPreset;\n    const isBot = options && options.isBot ? options.isBot : defaultPreset.isBot;\n    if (isBot(getNavigator(), platformId)) {\n        return Object.assign(ssrPreset, { isBot });\n    }\n    else if (!options) {\n        return defaultPreset;\n    }\n    const hooks = {};\n    if (options.preset) {\n        Object.assign(hooks, options.preset);\n    }\n    else {\n        Object.assign(hooks, defaultPreset);\n    }\n    Object.keys(options)\n        .filter(key => key !== 'preset')\n        .forEach(key => {\n        hooks[key] = options[key];\n    });\n    return hooks;\n}\n\nfunction lazyLoadImage(hookSet, attributes) {\n    return (evntObservable) => {\n        return evntObservable.pipe(filter(event => hookSet.isVisible({\n            element: attributes.element,\n            event: event,\n            offset: attributes.offset,\n            scrollContainer: attributes.scrollContainer\n        })), take(1), mergeMap(() => hookSet.loadImage(attributes)), tap(imagePath => hookSet.setLoadedImage({\n            element: attributes.element,\n            imagePath,\n            useSrcset: attributes.useSrcset\n        })), map(() => true), catchError(() => {\n            hookSet.setErrorImage(attributes);\n            return of(false);\n        }), tap(() => hookSet.finally(attributes)));\n    };\n}\n\nlet LazyLoadImageDirective = class LazyLoadImageDirective {\n    constructor(el, ngZone, platformId, options) {\n        this.onLoad = new EventEmitter(); // Callback when an image is loaded\n        this.elementRef = el;\n        this.ngZone = ngZone;\n        this.propertyChanges$ = new ReplaySubject();\n        this.platformId = platformId;\n        this.hooks = createHooks(platformId, options);\n    }\n    ngOnChanges() {\n        this.propertyChanges$.next({\n            element: this.elementRef.nativeElement,\n            imagePath: this.lazyImage,\n            defaultImagePath: this.defaultImage,\n            errorImagePath: this.errorImage,\n            useSrcset: this.useSrcset,\n            offset: this.offset ? this.offset | 0 : 0,\n            scrollContainer: this.scrollTarget,\n            customObservable: this.customObservable,\n            decode: this.decode\n        });\n    }\n    ngAfterContentInit() {\n        // Don't do anything if SSR and the user isn't a bot\n        if (isPlatformServer(this.platformId) && !this.hooks.isBot(getNavigator(), this.platformId)) {\n            return null;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.scrollSubscription = this.propertyChanges$\n                .pipe(tap(attributes => this.hooks.setup(attributes)), switchMap(attributes => this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes))))\n                .subscribe(success => this.onLoad.emit(success));\n        });\n    }\n    ngOnDestroy() {\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n    }\n};\nLazyLoadImageDirective.Éµfac = function LazyLoadImageDirective_Factory(t) { return new (t || LazyLoadImageDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject('options', 8)); };\nLazyLoadImageDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({ type: LazyLoadImageDirective, selectors: [[\"\", \"lazyLoad\", \"\"]], inputs: { lazyImage: [\"lazyLoad\", \"lazyImage\"], defaultImage: \"defaultImage\", errorImage: \"errorImage\", scrollTarget: \"scrollTarget\", customObservable: \"customObservable\", offset: \"offset\", useSrcset: \"useSrcset\", decode: \"decode\" }, outputs: { onLoad: \"onLoad\" }, features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\n__decorate([\n    Input('lazyLoad'),\n    __metadata(\"design:type\", String)\n], LazyLoadImageDirective.prototype, \"lazyImage\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LazyLoadImageDirective.prototype, \"defaultImage\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LazyLoadImageDirective.prototype, \"errorImage\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LazyLoadImageDirective.prototype, \"scrollTarget\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Observable)\n], LazyLoadImageDirective.prototype, \"customObservable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], LazyLoadImageDirective.prototype, \"offset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], LazyLoadImageDirective.prototype, \"useSrcset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], LazyLoadImageDirective.prototype, \"decode\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], LazyLoadImageDirective.prototype, \"onLoad\", void 0);\nLazyLoadImageDirective = __decorate([ __param(2, Inject(PLATFORM_ID)), __param(3, Optional()), __param(3, Inject('options')),\n    __metadata(\"design:paramtypes\", [ElementRef, NgZone, Object, Object])\n], LazyLoadImageDirective);\n\nvar LazyLoadImageModule_1;\nlet LazyLoadImageModule = LazyLoadImageModule_1 = class LazyLoadImageModule {\n    static forRoot(options) {\n        return {\n            ngModule: LazyLoadImageModule_1,\n            providers: [{ provide: 'options', useValue: options }]\n        };\n    }\n};\nLazyLoadImageModule.Éµfac = function LazyLoadImageModule_Factory(t) { return new (t || LazyLoadImageModule)(); };\nLazyLoadImageModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({ type: LazyLoadImageModule });\nLazyLoadImageModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(LazyLoadImageDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[lazyLoad]'\n            }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: ['options']\n            }] }]; }, { onLoad: [{\n            type: Output\n        }], lazyImage: [{\n            type: Input,\n            args: ['lazyLoad']\n        }], defaultImage: [{\n            type: Input\n        }], errorImage: [{\n            type: Input\n        }], scrollTarget: [{\n            type: Input\n        }], customObservable: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], useSrcset: [{\n            type: Input\n        }], decode: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(LazyLoadImageModule, { declarations: [LazyLoadImageDirective], exports: [LazyLoadImageDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(LazyLoadImageModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [LazyLoadImageDirective],\n                exports: [LazyLoadImageDirective]\n            }]\n    }], null, null); })();\n\nclass Rect {\n    constructor(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    static fromElement(element) {\n        const { left, top, right, bottom } = element.getBoundingClientRect();\n        if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n            return Rect.empty;\n        }\n        else {\n            return new Rect(left, top, right, bottom);\n        }\n    }\n    static fromWindow(_window) {\n        return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n    }\n    inflate(inflateBy) {\n        this.left -= inflateBy;\n        this.top -= inflateBy;\n        this.right += inflateBy;\n        this.bottom += inflateBy;\n    }\n    intersectsWith(rect) {\n        return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n    }\n    getIntersectionWith(rect) {\n        const left = Math.max(this.left, rect.left);\n        const top = Math.max(this.top, rect.top);\n        const right = Math.min(this.right, rect.right);\n        const bottom = Math.min(this.bottom, rect.bottom);\n        if (right >= left && bottom >= top) {\n            return new Rect(left, top, right, bottom);\n        }\n        else {\n            return Rect.empty;\n        }\n    }\n}\nRect.empty = new Rect(0, 0, 0, 0);\n\nconst scrollListeners = new WeakMap();\nfunction sampleObservable(obs, scheduler) {\n    return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n}\n// Only create one scroll listener per target and share the observable.\n// Typical, there will only be one observable per application\nconst getScrollListener = (scrollTarget) => {\n    if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n        console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n        return empty();\n    }\n    const scrollListener = scrollListeners.get(scrollTarget);\n    if (scrollListener) {\n        return scrollListener;\n    }\n    const srollEvent = Observable.create((observer) => {\n        const eventName = 'scroll';\n        const handler = (event) => observer.next(event);\n        const options = { passive: true, capture: false };\n        scrollTarget.addEventListener(eventName, handler, options);\n        return () => scrollTarget.removeEventListener(eventName, handler, options);\n    });\n    const listener = sampleObservable(srollEvent);\n    scrollListeners.set(scrollTarget, listener);\n    return listener;\n};\n\nconst isVisible$2 = ({ element, offset, scrollContainer }, getWindow = () => window) => {\n    const elementBounds = Rect.fromElement(element);\n    if (elementBounds === Rect.empty) {\n        return false;\n    }\n    const windowBounds = Rect.fromWindow(getWindow());\n    elementBounds.inflate(offset);\n    if (scrollContainer) {\n        const scrollContainerBounds = Rect.fromElement(scrollContainer);\n        const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n        return elementBounds.intersectsWith(intersection);\n    }\n    else {\n        return elementBounds.intersectsWith(windowBounds);\n    }\n};\nconst getObservable$2 = (attributes) => {\n    if (attributes.customObservable) {\n        return attributes.customObservable.pipe(startWith(''));\n    }\n    if (attributes.scrollContainer) {\n        return getScrollListener(attributes.scrollContainer);\n    }\n    return getScrollListener(window);\n};\nconst scrollPreset = Object.assign({}, sharedPreset, {\n    isVisible: isVisible$2,\n    getObservable: getObservable$2\n});\n\nexport { LazyLoadImageDirective, LazyLoadImageModule, intersectionObserverPreset, scrollPreset };\n\n//# sourceMappingURL=ng-lazyload-image.js.map"]},"metadata":{},"sourceType":"module"}