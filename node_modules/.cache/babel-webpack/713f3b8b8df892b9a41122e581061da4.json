{"ast":null,"code":"\"use strict\";\n\nvar root_1 = require('./root');\n\nfunction minimalSetImpl() {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return function () {\n    function MinimalSet() {\n      this._values = [];\n    }\n\n    MinimalSet.prototype.add = function (value) {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    };\n\n    MinimalSet.prototype.has = function (value) {\n      return this._values.indexOf(value) !== -1;\n    };\n\n    Object.defineProperty(MinimalSet.prototype, \"size\", {\n      get: function get() {\n        return this._values.length;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    MinimalSet.prototype.clear = function () {\n      this._values.length = 0;\n    };\n\n    return MinimalSet;\n  }();\n}\n\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl(); //# sourceMappingURL=Set.js.map","map":{"version":3,"sources":["/Users/nguyenlong/ProjectCompany/2nMart/websiteclient-2nmart.vn/node_modules/ng5-slider/node_modules/rxjs/util/Set.js"],"names":["root_1","require","minimalSetImpl","MinimalSet","_values","prototype","add","value","has","push","indexOf","Object","defineProperty","get","length","enumerable","configurable","clear","exports","Set","root"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,SAASC,cAAT,GAA0B;AACtB;AACA;AACA,SAAQ,YAAY;AAChB,aAASC,UAAT,GAAsB;AAClB,WAAKC,OAAL,GAAe,EAAf;AACH;;AACDD,IAAAA,UAAU,CAACE,SAAX,CAAqBC,GAArB,GAA2B,UAAUC,KAAV,EAAiB;AACxC,UAAI,CAAC,KAAKC,GAAL,CAASD,KAAT,CAAL,EAAsB;AAClB,aAAKH,OAAL,CAAaK,IAAb,CAAkBF,KAAlB;AACH;AACJ,KAJD;;AAKAJ,IAAAA,UAAU,CAACE,SAAX,CAAqBG,GAArB,GAA2B,UAAUD,KAAV,EAAiB;AACxC,aAAO,KAAKH,OAAL,CAAaM,OAAb,CAAqBH,KAArB,MAAgC,CAAC,CAAxC;AACH,KAFD;;AAGAI,IAAAA,MAAM,CAACC,cAAP,CAAsBT,UAAU,CAACE,SAAjC,EAA4C,MAA5C,EAAoD;AAChDQ,MAAAA,GAAG,EAAE,SAALA,GAAK,GAAY;AACb,eAAO,KAAKT,OAAL,CAAaU,MAApB;AACH,OAH+C;AAIhDC,MAAAA,UAAU,EAAE,IAJoC;AAKhDC,MAAAA,YAAY,EAAE;AALkC,KAApD;;AAOAb,IAAAA,UAAU,CAACE,SAAX,CAAqBY,KAArB,GAA6B,YAAY;AACrC,WAAKb,OAAL,CAAaU,MAAb,GAAsB,CAAtB;AACH,KAFD;;AAGA,WAAOX,UAAP;AACH,GAvBO,EAAR;AAwBH;;AACDe,OAAO,CAAChB,cAAR,GAAyBA,cAAzB;AACAgB,OAAO,CAACC,GAAR,GAAcnB,MAAM,CAACoB,IAAP,CAAYD,GAAZ,IAAmBjB,cAAc,EAA/C,C,CACA","sourcesContent":["\"use strict\";\nvar root_1 = require('./root');\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map"]},"metadata":{},"sourceType":"script"}