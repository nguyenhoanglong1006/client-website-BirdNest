{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar tryCatch_1 = require('../util/tryCatch');\n\nvar errorObject_1 = require('../util/errorObject');\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\n\n\nfunction distinctUntilChanged(compare, keySelector) {\n  return function (source) {\n    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n  };\n}\n\nexports.distinctUntilChanged = distinctUntilChanged;\n\nvar DistinctUntilChangedOperator = function () {\n  function DistinctUntilChangedOperator(compare, keySelector) {\n    this.compare = compare;\n    this.keySelector = keySelector;\n  }\n\n  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  };\n\n  return DistinctUntilChangedOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar DistinctUntilChangedSubscriber = function (_super) {\n  __extends(DistinctUntilChangedSubscriber, _super);\n\n  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n    _super.call(this, destination);\n\n    this.keySelector = keySelector;\n    this.hasKey = false;\n\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n    return x === y;\n  };\n\n  DistinctUntilChangedSubscriber.prototype._next = function (value) {\n    var keySelector = this.keySelector;\n    var key = value;\n\n    if (keySelector) {\n      key = tryCatch_1.tryCatch(this.keySelector)(value);\n\n      if (key === errorObject_1.errorObject) {\n        return this.destination.error(errorObject_1.errorObject.e);\n      }\n    }\n\n    var result = false;\n\n    if (this.hasKey) {\n      result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n\n      if (result === errorObject_1.errorObject) {\n        return this.destination.error(errorObject_1.errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  };\n\n  return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=distinctUntilChanged.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ng5-slider/node_modules/rxjs/operators/distinctUntilChanged.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","tryCatch_1","errorObject_1","distinctUntilChanged","compare","keySelector","source","lift","DistinctUntilChangedOperator","exports","call","subscriber","subscribe","DistinctUntilChangedSubscriber","_super","destination","hasKey","x","y","_next","value","key","tryCatch","errorObject","error","e","result","Boolean","next","Subscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map"]},"metadata":{},"sourceType":"script"}