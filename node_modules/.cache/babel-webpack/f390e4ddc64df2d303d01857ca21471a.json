{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\n\n\nfunction repeat(count) {\n  if (count === void 0) {\n    count = -1;\n  }\n\n  return function (source) {\n    if (count === 0) {\n      return new EmptyObservable_1.EmptyObservable();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nexports.repeat = repeat;\n\nvar RepeatOperator = function () {\n  function RepeatOperator(count, source) {\n    this.count = count;\n    this.source = source;\n  }\n\n  RepeatOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  };\n\n  return RepeatOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar RepeatSubscriber = function (_super) {\n  __extends(RepeatSubscriber, _super);\n\n  function RepeatSubscriber(destination, count, source) {\n    _super.call(this, destination);\n\n    this.count = count;\n    this.source = source;\n  }\n\n  RepeatSubscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      var _a = this,\n          source = _a.source,\n          count = _a.count;\n\n      if (count === 0) {\n        return _super.prototype.complete.call(this);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  };\n\n  return RepeatSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=repeat.js.map","map":{"version":3,"sources":["/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/ng5-slider/node_modules/rxjs/operators/repeat.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","EmptyObservable_1","repeat","count","source","EmptyObservable","lift","RepeatOperator","exports","call","subscriber","subscribe","RepeatSubscriber","_super","destination","complete","isStopped","_a","_unsubscribeAndRecycle","Subscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map"]},"metadata":{},"sourceType":"script"}